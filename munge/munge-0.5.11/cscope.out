cscope 15 $HOME/M2R-PDES/M2R-intern-BULL/munge/munge-0.5.11               0000603017
	@src/libcommon/common.h

29 #i‚de‡
MUNGE_COMMON_H


30 
	#MUNGE_COMMON_H


	)

33 #i‡
HAVE_CONFIG_H


34 
	~<c⁄fig.h
>

37 
	~"fd.h
"

38 
	~"li˚n£.h
"

39 
	~"log.h
"

40 
	~"m_msg.h
"

41 
	~"munge_defs.h
"

42 
	~"posig«l.h
"

43 
	~"°r.h
"

46 #i‡
HAVE_BZLIB_H
 && 
HAVE_LIBBZ2


47 
	#HAVE_PKG_BZLIB
 1

	)

50 #i‡
HAVE_ZLIB_H
 && 
HAVE_LIBZ


51 
	#HAVE_PKG_ZLIB
 1

	)

54 #i‚de‡
MAX


55 
	#MAX
(
a
,
b
Ë(◊ >bË? (aË: (b))

	)

58 #i‚de‡
MIN


59 
	#MIN
(
a
,
b
Ë(◊ <bË? (aË: (b))

	)

	@src/libcommon/fd.c

31 #i‡
HAVE_CONFIG_H


32 
	~"c⁄fig.h
"

35 
	~<as£π.h
>

36 
	~<î∫o.h
>

37 
	~<f˙é.h
>

38 
	~<pﬁl.h
>

39 
	~<°dlib.h
>

40 
	~<°rög.h
>

41 
	~<sys/time.h
>

42 
	~<sys/uio.h
>

43 
	~<uni°d.h
>

44 
	~"fd.h
"

51 
_fd_gë_pﬁl_timeout
 (c⁄° 
timevÆ
 *
whí
);

53 
_fd_gë_lock
 (
fd
, 
cmd
, 
ty≥
);

55 
pid_t
 
_fd_ã°_lock
 (
fd
, 
ty≥
);

62 
ssize_t


63 
	$fd_ªad_n
 (
fd
, *
buf
, 
size_t
 
n
)

65 *
p
;

66 
size_t
 
∆e·
;

67 
ssize_t
 
ƒód
;

69 
p
 = 
buf
;

70 
∆e·
 = 
n
;

71 
∆e·
 > 0) {

72 i‡((
ƒód
 = 
	`ªad
 (
fd
, 
p
, 
∆e·
)) < 0) {

73 i‡(
î∫o
 =
EINTR
)

78 i‡(
ƒód
 == 0) {

81 
∆e·
 -
ƒód
;

82 
p
 +
ƒód
;

84  (
n
 - 
∆e·
);

85 
	}
}

88 
ssize_t


89 
	$fd_wrôe_n
 (
fd
, c⁄° *
buf
, 
size_t
 
n
)

91 c⁄° *
p
;

92 
size_t
 
∆e·
;

93 
ssize_t
 
nwrôãn
;

95 
p
 = 
buf
;

96 
∆e·
 = 
n
;

97 
∆e·
 > 0) {

98 i‡((
nwrôãn
 = 
	`wrôe
 (
fd
, 
p
, 
∆e·
)) < 0) {

99 i‡(
î∫o
 =
EINTR
)

104 
∆e·
 -
nwrôãn
;

105 
p
 +
nwrôãn
;

107  (
n
);

108 
	}
}

111 
ssize_t


112 
	$fd_timed_ªad_n
 (
fd
, *
buf
, 
size_t
 
n
,

113 c⁄° 
timevÆ
 *
whí
, 
do_skù_fú°_pﬁl
)

115 *
p
;

116 
m£cs
;

117 
pﬁlfd
 
pfd
;

118 
nfd
;

119 
size_t
 
∆e·
;

120 
ssize_t
 
ƒód
;

122 i‡((
fd
 < 0Ë|| (
buf
 =
NULL
)) {

123 
î∫o
 = 
EINVAL
;

126 
p
 = 
buf
;

127 
∆e·
 = 
n
;

128 
pfd
.
fd
 = fd;

129 
pfd
.
evíts
 = 
POLLIN
;

131 i‡(
do_skù_fú°_pﬁl
 && (
∆e·
 > 0)) {

132 
m£cs
 = -1;

133 
ªad_me
;

135 
∆e·
 > 0) {

137 
m£cs
 = 
	`_fd_gë_pﬁl_timeout
 (
whí
);

138 
nfd
 = 
	`pﬁl
 (&
pfd
, 1, 
m£cs
);

140 i‡(
nfd
 < 0) {

141 i‡((
î∫o
 =
EINTR
Ë|| (î∫ÿ=
EAGAIN
))

146 i‡(
nfd
 == 0) {

147 
î∫o
 = 
ETIMEDOUT
;

150 i‡(
pfd
.
ªvíts
 & 
POLLNVAL
) {

151 
î∫o
 = 
EBADF
;

154 i‡(
pfd
.
ªvíts
 & 
POLLERR
) {

155 
î∫o
 = 
EIO
;

158 
	`as£π
 (
pfd
.
ªvíts
 & 
POLLIN
);

160 
ªad_me
:

161 
ƒód
 = 
	`ªad
 (
fd
, 
p
, 
∆e·
);

162 i‡(
ƒód
 < 0) {

163 i‡((
î∫o
 =
EINTR
Ë|| (î∫ÿ=
EAGAIN
))

168 i‡(
ƒód
 == 0) {

171 
∆e·
 -
ƒód
;

172 
p
 +
ƒód
;

174 i‡(
m£cs
 == 0) {

178  (
n
 - 
∆e·
);

179 
	}
}

182 
ssize_t


183 
	$fd_timed_wrôe_n
 (
fd
, c⁄° *
buf
, 
size_t
 
n
,

184 c⁄° 
timevÆ
 *
whí
, 
do_skù_fú°_pﬁl
)

186 c⁄° *
p
;

187 
m£cs
;

188 
pﬁlfd
 
pfd
;

189 
nfd
;

190 
size_t
 
∆e·
;

191 
ssize_t
 
nwrôãn
;

193 i‡((
fd
 < 0Ë|| (
buf
 =
NULL
)) {

194 
î∫o
 = 
EINVAL
;

197 
p
 = 
buf
;

198 
∆e·
 = 
n
;

199 
pfd
.
fd
 = fd;

200 
pfd
.
evíts
 = 
POLLOUT
;

202 i‡(
do_skù_fú°_pﬁl
 && (
∆e·
 > 0)) {

203 
m£cs
 = -1;

204 
wrôe_me
;

206 
∆e·
 > 0) {

208 
m£cs
 = 
	`_fd_gë_pﬁl_timeout
 (
whí
);

209 
nfd
 = 
	`pﬁl
 (&
pfd
, 1, 
m£cs
);

211 i‡(
nfd
 < 0) {

212 i‡((
î∫o
 =
EINTR
Ë|| (î∫ÿ=
EAGAIN
))

217 i‡(
nfd
 == 0) {

218 
î∫o
 = 
ETIMEDOUT
;

221 i‡(
pfd
.
ªvíts
 & 
POLLHUP
) {

224 i‡(
pfd
.
ªvíts
 & 
POLLNVAL
) {

225 
î∫o
 = 
EBADF
;

228 i‡(
pfd
.
ªvíts
 & 
POLLERR
) {

229 
î∫o
 = 
EIO
;

232 
	`as£π
 (
pfd
.
ªvíts
 & 
POLLOUT
);

234 
wrôe_me
:

235 
nwrôãn
 = 
	`wrôe
 (
fd
, 
p
, 
∆e·
);

236 i‡(
nwrôãn
 < 0) {

237 i‡((
î∫o
 =
EINTR
Ë|| (î∫ÿ=
EAGAIN
))

242 
∆e·
 -
nwrôãn
;

243 
p
 +
nwrôãn
;

245 i‡(
m£cs
 == 0) {

249  (
n
 - 
∆e·
);

250 
	}
}

253 
ssize_t


254 
	$fd_timed_wrôe_iov
 (
fd
, c⁄° 
iovec
 *
iov_‹ig
, 
iov_˙t
,

255 c⁄° 
timevÆ
 *
whí
, 
do_skù_fú°_pﬁl
)

257 
iov_mem_Àn
;

258 
iovec
 *
iov
;

259 
i
;

260 
size_t
 
n
, 
∆e·
, 
iov_Àn
;

261 
pﬁlfd
 
pfd
;

262 
nfd
;

263 
m£cs
;

264 
ssize_t
 
nwrôãn
;

266 i‡((
fd
 < 0Ë|| (
iov_‹ig
 =
NULL
Ë|| (
iov_˙t
 <= 0)) {

267 
î∫o
 = 
EINVAL
;

272 
iov_mem_Àn
 =  (
iovec
Ë* 
iov_˙t
;

273 
iov
 = 
	`mÆloc
 (
iov_mem_Àn
);

274 i‡(
iov
 =
NULL
) {

275 
î∫o
 = 
ENOMEM
;

278 
	`mem˝y
 (
iov
, 
iov_‹ig
, 
iov_mem_Àn
);

280 
i
 = 0, 
n
 = 0; i < 
iov_˙t
; i++) {

281 
n
 +
iov
[
i
].
iov_Àn
;

283 
∆e·
 = 
iov_Àn
 = 
n
;

284 
pfd
.
fd
 = fd;

285 
pfd
.
evíts
 = 
POLLOUT
;

287 i‡(
do_skù_fú°_pﬁl
 && (
∆e·
 > 0)) {

288 
m£cs
 = -1;

289 
wrôev_me
;

291 
∆e·
 > 0) {

293 
m£cs
 = 
	`_fd_gë_pﬁl_timeout
 (
whí
);

294 
nfd
 = 
	`pﬁl
 (&
pfd
, 1, 
m£cs
);

296 i‡(
nfd
 < 0) {

297 i‡((
î∫o
 =
EINTR
Ë|| (î∫ÿ=
EAGAIN
))

300 
îr
;

302 i‡(
nfd
 == 0) {

303 
î∫o
 = 
ETIMEDOUT
;

306 i‡(
pfd
.
ªvíts
 & 
POLLHUP
) {

309 i‡(
pfd
.
ªvíts
 & 
POLLNVAL
) {

310 
î∫o
 = 
EBADF
;

311 
îr
;

313 i‡(
pfd
.
ªvíts
 & 
POLLERR
) {

314 
î∫o
 = 
EIO
;

315 
îr
;

317 
	`as£π
 (
pfd
.
ªvíts
 & 
POLLOUT
);

319 
wrôev_me
:

320 
nwrôãn
 = 
	`wrôev
 (
fd
, 
iov
, 
iov_˙t
);

321 i‡(
nwrôãn
 < 0) {

322 i‡((
î∫o
 =
EINTR
Ë|| (î∫ÿ=
EAGAIN
))

325 
îr
;

327 
∆e·
 -
nwrôãn
;

329 i‡(
m£cs
 == 0) {

332 
i
 = 0; (ò< 
iov_˙t
Ë&& (
nwrôãn
 > 0); i++) {

333 
n
 = (
nwrôãn
 > 
iov
[
i
].
iov_Àn
) ? iov[i].iov_len :Çwritten;

334 i‡(
n
 == 0)

336 
nwrôãn
 -
n
;

337 
iov
[
i
].
iov_Àn
 -
n
;

338 
iov
[
i
].
iov_ba£
 = (*Ëiov[i].iov_ba£ + 
n
;

341 
	`‰ì
 (
iov
);

342  (
iov_Àn
 - 
∆e·
);

344 
îr
:

345 
	`‰ì
 (
iov
);

347 
	}
}

350 
ssize_t


351 
	$fd_ªad_löe
 (
fd
, *
buf
, 
size_t
 
maxÀn
)

353 
ssize_t
 
n
, 
rc
;

354 
c
, *
p
;

356 
n
 = 0;

357 
p
 = 
buf
;

358 
n
 < 
maxÀn
 - 1) {

360 i‡((
rc
 = 
	`ªad
 (
fd
, &
c
, 1)) == 1) {

361 
n
++;

362 *
p
++ = 
c
;

363 i‡(
c
 == '\n')

366 i‡(
rc
 == 0) {

367 i‡(
n
 == 0)

373 i‡(
î∫o
 =
EINTR
)

379 *
p
 = '\0';

380  (
n
);

381 
	}
}

389 
	$fd_£t_˛o£_⁄_exec
 (
fd
)

391 i‡(
fd
 < 0) {

392 
î∫o
 = 
EINVAL
;

395 i‡(
	`f˙é
 (
fd
, 
F_SETFD
, 
FD_CLOEXEC
) < 0) {

399 
	}
}

403 
	$fd_£t_n⁄blockög
 (
fd
)

405 
fvÆ
;

407 i‡(
fd
 < 0) {

408 
î∫o
 = 
EINVAL
;

411 i‡((
fvÆ
 = 
	`f˙é
 (
fd
, 
F_GETFL
, 0)) < 0) {

414 i‡(
	`f˙é
 (
fd
, 
F_SETFL
, 
fvÆ
 | 
O_NONBLOCK
) < 0) {

418 
	}
}

422 
	$fd_is_n⁄blockög
 (
fd
)

424 
fvÆ
;

426 i‡(
fd
 < 0) {

427 
î∫o
 = 
EINVAL
;

430 i‡((
fvÆ
 = 
	`f˙é
 (
fd
, 
F_GETFL
, 0)) < 0) {

433  ((
fvÆ
 & 
O_NONBLOCK
) ? 1 : 0);

434 
	}
}

442 
	$fd_gë_ªad_lock
 (
fd
)

444  (
	`_fd_gë_lock
 (
fd
, 
F_SETLK
, 
F_RDLCK
));

445 
	}
}

449 
	$fd_gë_ªadw_lock
 (
fd
)

451  (
	`_fd_gë_lock
 (
fd
, 
F_SETLKW
, 
F_RDLCK
));

452 
	}
}

456 
	$fd_gë_wrôe_lock
 (
fd
)

458  (
	`_fd_gë_lock
 (
fd
, 
F_SETLK
, 
F_WRLCK
));

459 
	}
}

463 
	$fd_gë_wrôew_lock
 (
fd
)

465  (
	`_fd_gë_lock
 (
fd
, 
F_SETLKW
, 
F_WRLCK
));

466 
	}
}

470 
	$fd_ªÀa£_lock
 (
fd
)

472  (
	`_fd_gë_lock
 (
fd
, 
F_SETLK
, 
F_UNLCK
));

473 
	}
}

476 
pid_t


477 
	$fd_is_ªad_lock_blocked
 (
fd
)

479  (
	`_fd_ã°_lock
 (
fd
, 
F_RDLCK
));

480 
	}
}

483 
pid_t


484 
	$fd_is_wrôe_lock_blocked
 (
fd
)

486  (
	`_fd_ã°_lock
 (
fd
, 
F_WRLCK
));

487 
	}
}

495 
	$_fd_gë_pﬁl_timeout
 (c⁄° 
timevÆ
 *
whí
)

502 
timevÆ
 
now
;

503 
m£cs
;

505 i‡(
whí
 =
NULL
) {

508 i‡((
whí
->
tv_£c
 =0Ë&& (whí->
tv_u£c
 == 0)) {

513 i‡(
	`gëtimeofday
 (&
now
, 
NULL
) < 0) {

519 
m£cs
 = ( (
whí
->
tv_£c
 - 
now
.tv_sec) * 1000 ) +

520 –(
whí
->
tv_u£c
 - 
now
.tv_usec + 999) / 1000 ) ;

524  ((
m£cs
 < 0) ? 0 : msecs);

525 
	}
}

529 
	$_fd_gë_lock
 (
fd
, 
cmd
, 
ty≥
)

531 
Êock
 
lock
;

533 
	`as£π
 (
fd
 >= 0);

535 
lock
.
l_ty≥
 = 
ty≥
;

536 
lock
.
l_°¨t
 = 0;

537 
lock
.
l_whí˚
 = 
SEEK_SET
;

538 
lock
.
l_Àn
 = 0;

540  (
	`f˙é
 (
fd
, 
cmd
, &
lock
));

541 
	}
}

544 
pid_t


545 
	$_fd_ã°_lock
 (
fd
, 
ty≥
)

547 
Êock
 
lock
;

549 
	`as£π
 (
fd
 >= 0);

551 
lock
.
l_ty≥
 = 
ty≥
;

552 
lock
.
l_°¨t
 = 0;

553 
lock
.
l_whí˚
 = 
SEEK_SET
;

554 
lock
.
l_Àn
 = 0;

556 i‡(
	`f˙é
 (
fd
, 
F_GETLK
, &
lock
) < 0) {

559 i‡(
lock
.
l_ty≥
 =
F_UNLCK
) {

562  (
lock
.
l_pid
);

563 
	}
}

	@src/libcommon/fd.h

29 #i‚de‡
FD_H


30 
	#FD_H


	)

33 #i‡
HAVE_CONFIG_H


34 
	~"c⁄fig.h
"

37 
	~<sys/time.h
>

38 
	~<sys/ty≥s.h
>

39 
	~<sys/uio.h
>

40 
	~<uni°d.h
>

43 
ssize_t
 
fd_ªad_n
 (
fd
, *
buf
, 
size_t
 
n
);

49 
ssize_t
 
fd_wrôe_n
 (
fd
, c⁄° *
buf
, 
size_t
 
n
);

55 
ssize_t
 
fd_timed_ªad_n
 (
fd
, *
buf
, 
size_t
 
n
,

56 c⁄° 
timevÆ
 *
whí
, 
do_skù_fú°_pﬁl
);

71 
ssize_t
 
fd_timed_wrôe_n
 (
fd
, c⁄° *
buf
, 
size_t
 
n
,

72 c⁄° 
timevÆ
 *
whí
, 
do_skù_fú°_pﬁl
);

87 
ssize_t
 
fd_timed_wrôe_iov
 (
fd
, c⁄° 
iovec
 *
iov
, 
iov_˙t
,

88 c⁄° 
timevÆ
 *
whí
, 
do_skù_fú°_pﬁl
);

103 
ssize_t
 
fd_ªad_löe
 (
fd
, *
buf
, 
size_t
 
maxÀn
);

111 
fd_£t_˛o£_⁄_exec
 (
fd
);

117 
fd_£t_n⁄blockög
 (
fd
);

123 
fd_is_n⁄blockög
 (
fd
);

129 
fd_gë_ªad_lock
 (
fd
);

135 
fd_gë_ªadw_lock
 (
fd
);

142 
fd_gë_wrôe_lock
 (
fd
);

148 
fd_gë_wrôew_lock
 (
fd
);

155 
fd_ªÀa£_lock
 (
fd
);

161 
pid_t
 
fd_is_ªad_lock_blocked
 (
fd
);

169 
pid_t
 
fd_is_wrôe_lock_blocked
 (
fd
);

	@src/libcommon/license.c

29 #i‡
HAVE_CONFIG_H


30 
	~"c⁄fig.h
"

33 
	~<°dio.h
>

34 
	~"li˚n£.h
"

41 c⁄° *
	gli˚n£_ãxt
[] = { \

65 
NULL


70 
	$di•œy_li˚n£
 ()

72 c⁄° **
µ
;

74 
µ
 = 
li˚n£_ãxt
; *µ !
NULL
;Öp++) {

75 
	`¥ötf
 ("%s\n", *
µ
);

78 
	}
}

	@src/libcommon/license.h

29 #i‚de‡
MUNGE_LICENSE_H


30 
	#MUNGE_LICENSE_H


	)

33 
di•œy_li˚n£
 ();

	@src/libcommon/log.c

31 #i‡
HAVE_CONFIG_H


32 
	~"c⁄fig.h
"

35 
	~<as£π.h
>

36 
	~<î∫o.h
>

37 
	~<°d¨g.h
>

38 
	~<°dio.h
>

39 
	~<°dlib.h
>

40 
	~<°rög.h
>

41 
	~<sy¶og.h
>

42 
	~<time.h
>

43 
	~<uni°d.h
>

44 
	~"log.h
"

45 
	~"°r.h
"

52 
	#LOG_BUFFER_MAXLEN
 1024

	)

53 
	#LOG_IDENTITY_MAXLEN
 128

	)

54 
	#LOG_PREFIX_MAXLEN
 9

	)

55 
	#LOG_TRUNC_SUFFIX
 "+"

	)

62 
	slog_˘x
 {

63 
FILE
 *
	mÂ
;

64 
	mgŸ_öô
;

65 
	mgŸ_sy¶og
;

66 
	m¥i‹ôy
;

67 
	m›ti⁄s
;

68 
	mfd_d´m⁄ize
;

69 
	mid
 [
LOG_IDENTITY_MAXLEN
];

77 
log_˘x
 
	glog_˘x
 = { 
NULL
, 0, 0, 0, 0, -1, { '\0' } };

84 
_log_aux
 (
î∫um
, 
¥i‹ôy
, *
msgbuf
, 
msgbuÊí
,

85 c⁄° *
f‹m©
, 
va_li°
 
v¨gs
);

86 
_log_dõ
 (
°©us
, 
¥i‹ôy
, *
msg
);

87 * 
_log_¥efix
 (
¥i‹ôy
);

95 
	$log_›í_fûe
 (
FILE
 *
Â
, *
idítôy
, 
¥i‹ôy
, 
›ti⁄s
)

97 *
p
;

99 i‡(!
Â
) {

100 i‡(
log_˘x
.
Â
) {

101 (Ë
	`f˛o£
 (
log_˘x
.
Â
);

103 
log_˘x
.
Â
 = 
NULL
;

104 
log_˘x
.
gŸ_öô
 = 1;

107 i‡(
	`„º‹
 (
Â
)) {

110 i‡(
	`£tvbuf
 (
Â
, 
NULL
, 
_IONBF
, 0) != 0) {

113 
log_˘x
.
Â
 = fp;

114 
	`mem£t
 (
log_˘x
.
id
, 0,  (log_ctx.id));

115 i‡(
idítôy
) {

116 
p
 = (∞
	`°ºchr
 (
idítôy
, '/')) ?Ö + 1 : identity;

117 i‡(
	`°æí
 (
p
Ë<  (
log_˘x
.
id
)) {

118 
	`°r˝y
 (
log_˘x
.
id
, 
p
);

121 
log_˘x
.
¥i‹ôy
 = (priority > 0) ?Öriority : 0;

122 
log_˘x
.
›ti⁄s
 = options;

123 
log_˘x
.
gŸ_öô
 = 1;

125 
	}
}

129 
	$log_›í_sy¶og
 (*
idítôy
, 
Ácûôy
)

131 *
p
;

133 i‡(
idítôy
) {

134 i‡((
p
 = 
	`°ºchr
 (
idítôy
, '/'))) {

135 
idítôy
 = 
p
 + 1;

137 
	`›ílog
 (
idítôy
, 
LOG_NDELAY
 | 
LOG_PID
, 
Ácûôy
);

138 
log_˘x
.
gŸ_sy¶og
 = 1;

141 
	`˛o£log
 ();

142 
log_˘x
.
gŸ_sy¶og
 = 0;

144 
log_˘x
.
gŸ_öô
 = 1;

145  (
log_˘x
.
gŸ_sy¶og
);

146 
	}
}

150 
	$log_£t_îr_pùe
 (
fd
)

152 
log_˘x
.
fd_d´m⁄ize
 = (
fd
 >= 0) ? fd : -1;

154 
	}
}

158 
	$log_îr
 (
°©us
, 
¥i‹ôy
, c⁄° *
f‹m©
, ...)

160 
va_li°
 
v¨gs
;

161 
msg
 [
LOG_BUFFER_MAXLEN
];

163 
	`va_°¨t
 (
v¨gs
, 
f‹m©
);

164 
	`_log_aux
 (0, 
¥i‹ôy
, 
msg
,  (msg), 
f‹m©
, 
v¨gs
);

165 
	`va_íd
 (
v¨gs
);

167 
	`_log_dõ
 (
°©us
, 
¥i‹ôy
, 
msg
);

168 
	`as£π
 (1);

169 
	}
}

173 
	$log_î∫o
 (
°©us
, 
¥i‹ôy
, c⁄° *
f‹m©
, ...)

175 
va_li°
 
v¨gs
;

176 
msg
 [
LOG_BUFFER_MAXLEN
];

178 
	`va_°¨t
 (
v¨gs
, 
f‹m©
);

179 
	`_log_aux
 (
î∫o
, 
¥i‹ôy
, 
msg
,  (msg), 
f‹m©
, 
v¨gs
);

180 
	`va_íd
 (
v¨gs
);

182 
	`_log_dõ
 (
°©us
, 
¥i‹ôy
, 
msg
);

183 
	`as£π
 (1);

184 
	}
}

188 
	$log_msg
 (
¥i‹ôy
, c⁄° *
f‹m©
, ...)

190 
va_li°
 
v¨gs
;

192 
	`va_°¨t
 (
v¨gs
, 
f‹m©
);

193 
	`_log_aux
 (0, 
¥i‹ôy
, 
NULL
, 0, 
f‹m©
, 
v¨gs
);

194 
	`va_íd
 (
v¨gs
);

197 
	}
}

205 
	$_log_aux
 (
î∫um
, 
¥i‹ôy
, *
msgbuf
, 
msgbuÊí
,

206 c⁄° *
f‹m©
, 
va_li°
 
v¨gs
)

208 
buf
 [
LOG_BUFFER_MAXLEN
];

209 *
p
;

210 *
sbuf
;

211 *
¥efix
;

212 
n
;

213 
Àn
;

214 
≠≥nd_∆
 = 0;

218 i‡(!
log_˘x
.
gŸ_öô
) {

219 
log_˘x
.
Â
 = 
°dîr
;

220 
log_˘x
.
›ti⁄s
 = 0;

221 
log_˘x
.
¥i‹ôy
 = 
LOG_DEBUG
;

222 
log_˘x
.
gŸ_öô
 = 1;

224 
p
 = 
buf
;

225 
sbuf
 = 
NULL
;

226 
Àn
 =  (
buf
);

228 i‡((!
f‹m©
Ë|| (f‹m© [
	`°æí
 (format) - 1] != '\n')) {

229 
≠≥nd_∆
 = 1;

230 --
Àn
;

234 i‡(
log_˘x
.
id
 [0] != '\0') {

235 
n
 = 
	`¢¥ötf
 (
p
, 
Àn
, "%s: ", 
log_˘x
.
id
);

236 i‡((
n
 < 0Ë|| (¿>
Àn
)) {

237 
p
 +
Àn
 - 1;

238 
Àn
 = 0;

241 
p
 +
n
;

242 
Àn
 -
n
;

247 i‡((
Àn
 > 0Ë&& (
log_˘x
.
›ti⁄s
 & 
LOG_OPT_TIMESTAMP
)) {

248 
n
 = 
	`°r·imë
 (
p
, 
Àn
, "%Y-%m-%d %H:%M:%S %z ", 0);

249 i‡(
n
 == 0) {

250 
Àn
 = 0;

252 i‡(
n
 > 0) {

253 
p
 +
n
;

254 
Àn
 -
n
;

259 i‡((
Àn
 > 0Ë&& (
log_˘x
.
›ti⁄s
 & 
LOG_OPT_PRIORITY
)) {

260 i‡((
¥efix
 = 
	`_log_¥efix
 (
¥i‹ôy
))) {

261 
m
 = 1;

262 i‡(
log_˘x
.
›ti⁄s
 & 
LOG_OPT_JUSTIFY
) {

263 i‡((
m
 = 
LOG_PREFIX_MAXLEN
 + 1 - 
	`°æí
 (
¥efix
)) < 0) {

264 
m
 = 1;

267 
n
 = 
	`¢¥ötf
 (
p
, 
Àn
, "%s:%*c", 
¥efix
, 
m
, 0x20);

268 i‡((
n
 < 0Ë|| (¿>
Àn
)) {

269 
p
 +
Àn
 - 1;

270 
Àn
 = 0;

273 
p
 +
n
;

274 
Àn
 -
n
;

280 i‡((
Àn
 > 0Ë&& (
f‹m©
)) {

281 
sbuf
 = 
p
;

282 
n
 = 
	`v¢¥ötf
 (
p
, 
Àn
, 
f‹m©
, 
v¨gs
);

283 i‡((
n
 < 0Ë|| (¿>
Àn
)) {

284 
p
 +
Àn
 - 1;

285 
Àn
 = 0;

288 
p
 +
n
;

289 
Àn
 -
n
;

296 i‡((
Àn
 > 0Ë&& (
î∫um
Ë&& (
≠≥nd_∆
)) {

297 
n
 = 
	`¢¥ötf
 (
p
, 
Àn
, "%s%s",

298 (
f‹m©
 ? ": " : ""), 
	`°ªº‹
 (
î∫um
));

299 i‡((
n
 < 0Ë|| (¿>
Àn
)) {

300 
p
 +
Àn
 - 1;

301 
Àn
 = 0;

304 
p
 +
n
;

305 
Àn
 -
n
;

310 i‡(
Àn
 <= 0) {

311 *
q
;

312 
n
 = 
	`°æí
 (
LOG_TRUNC_SUFFIX
);

313 
q
 = 
buf
 +  (bufË- 1 - 
≠≥nd_∆
 - 
n
;

314 
p
 = (∞< 
q
) ?Ö : q;

315 
	`°r˝y
 (
p
, 
LOG_TRUNC_SUFFIX
);

316 
p
 +
n
;

320 i‡(
≠≥nd_∆
) {

321 *
p
++ = '\n';

323 *
p
 = '\0';

327 i‡(
msgbuf
 && (
msgbuÊí
 > 0)) {

328 i‡(
sbuf
) {

329 
	`°∫˝y
 (
msgbuf
, 
sbuf
, 
msgbuÊí
);

330 
msgbuf
[
msgbuÊí
 - 1] = '\0';

333 
msgbuf
[0] = '\0';

338 i‡(
log_˘x
.
gŸ_sy¶og
 && 
sbuf
) {

339 
	`sy¶og
 (
¥i‹ôy
, "%s", 
sbuf
);

341 i‡(
log_˘x
.
Â
 && (
¥i‹ôy
 <=Üog_ctx.priority)) {

342 i‡(
	`Ârötf
 (
log_˘x
.
Â
, "%s", 
buf
Ë=
EOF
) {

343 
	`sy¶og
 (
LOG_CRIT
, "Logging stopped dueÅoÉrror");

344 
log_˘x
.
Â
 = 
NULL
;

348 
	}
}

352 
	$_log_dõ
 (
°©us
, 
¥i‹ôy
, *
msg
)

354 sig√d 
c
;

355 
n
;

356 *
p
;

360 i‡(
log_˘x
.
fd_d´m⁄ize
 >= 0) {

361 
c
 = (sig√d Ë
¥i‹ôy
;

362 
n
 = 
	`wrôe
 (
log_˘x
.
fd_d´m⁄ize
, &
c
,  (c));

363 i‡((
n
 > 0Ë&& (
msg
 !
NULL
Ë&& (
log_˘x
.
Â
 !
°dîr
)) {

364 i‡((
p
 = 
	`°rchr
 (
msg
, '\n'))) {

365 *
p
 = '\0';

367 (Ë
	`wrôe
 (
log_˘x
.
fd_d´m⁄ize
, 
msg
, 
	`°æí
 (msg) + 1);

370 #i‚de‡
NDEBUG


373 i‡((
°©us
 !
EXIT_SUCCESS
Ë&& 
	`gëív
 ("DEBUG")) {

374 
	`ab‹t
 ();

377 
	`exô
 (
°©us
);

378 
	}
}

382 
	$_log_¥efix
 (
¥i‹ôy
)

384 
¥i‹ôy
) {

385 
LOG_EMERG
:

387 
LOG_ALERT
:

389 
LOG_CRIT
:

391 
LOG_ERR
:

393 
LOG_WARNING
:

395 
LOG_NOTICE
:

397 
LOG_INFO
:

399 
LOG_DEBUG
:

404 
	`as£π
 (1);

405 
	}
}

	@src/libcommon/log.h

29 #i‚de‡
LOG_H


30 
	#LOG_H


	)

33 #i‡
HAVE_CONFIG_H


34 
	~"c⁄fig.h
"

37 
	~<°dio.h
>

38 
	~<sy¶og.h
>

41 
	#LOG_OPT_NONE
 0x00

	)

42 
	#LOG_OPT_JUSTIFY
 0x01

	)

43 
	#LOG_OPT_PRIORITY
 0x02

	)

44 
	#LOG_OPT_TIMESTAMP
 0x04

	)

47 
log_›í_fûe
 (
FILE
 *
Â
, *
idítôy
, 
¥i‹ôy
, 
›ti⁄s
);

60 
log_›í_sy¶og
 (*
idítôy
, 
Ácûôy
);

69 
log_£t_îr_pùe
 (
fd
);

78 
log_îr
 (
°©us
, 
¥i‹ôy
, c⁄° *
f‹m©
, ...);

85 
log_î∫o
 (
°©us
, 
¥i‹ôy
, c⁄° *
f‹m©
, ...);

94 
log_msg
 (
¥i‹ôy
, c⁄° *
f‹m©
, ...);

	@src/libcommon/m_msg.c

29 #i‡
HAVE_CONFIG_H


30 
	~"c⁄fig.h
"

33 
	~<¨∑/öë.h
>

34 
	~<as£π.h
>

35 
	~<î∫o.h
>

36 
	~<öây≥s.h
>

37 
	~<munge.h
>

38 
	~<°dlib.h
>

39 
	~<°rög.h
>

40 
	~<sys/time.h
>

41 
	~<sys/uio.h
>

42 
	~<uni°d.h
>

43 
	~"fd.h
"

44 
	~"m_msg.h
"

45 
	~"munge_defs.h
"

46 
	~"°r.h
"

53 ** 
	tvµ
;

60 
_gë_timevÆ
 (
timevÆ
 *
tv
, 
m£cs
);

61 
_msg_Àngth
 (
m_msg_t
 
m
, 
m_msg_ty≥_t
 
ty≥
);

62 
munge_îr_t
 
_msg_∑ck
 (
m_msg_t
 
m
, 
m_msg_ty≥_t
 
ty≥
,

63 *
d°
, 
d°Àn
);

64 
munge_îr_t
 
_msg_u≈ack
 (
m_msg_t
 
m
, 
m_msg_ty≥_t
 
ty≥
,

65 c⁄° *
§c
, 
§˛í
);

66 
_Æloc
 (**
pd°
, 
Àn
);

67 
_c›y
 (*
d°
, *
§c
, 
Àn
,

68 c⁄° *
fú°
, c⁄° *
œ°
, **
pöc
);

69 
_∑ck
 (**
pd°
, *
§c
, 
Àn
, c⁄° *
œ°
);

70 
_u≈ack
 (*
d°
, **
p§c
, 
Àn
, c⁄° *
œ°
);

77 
munge_îr_t


78 
	$m_msg_¸óã
 (
m_msg_t
 *
pm
)

83 
m_msg_t
 
m
;

85 
	`as£π
 (
pm
 !
NULL
);

87 i‡(!(
m
 = 
	`mÆloc
 ( (*m)))) {

88 *
pm
 = 
NULL
;

89  (
EMUNGE_NO_MEMORY
);

93 
	`mem£t
 (
m
, 0,  (*m));

95 
m
->
sd
 = -1;

96 
m
->
ty≥
 = 
MUNGE_MSG_UNDEF
;

98 *
pm
 = 
m
;

99  (
EMUNGE_SUCCESS
);

100 
	}
}

104 
	$m_msg_de°roy
 (
m_msg_t
 
m
)

108 
	`as£π
 (
m
 !
NULL
);

110 i‡(
m
->
sd
 >= 0) {

111 (Ë
	`˛o£
 (
m
->
sd
);

113 i‡(
m
->
pkt
 && !m->
pkt_is_c›y
) {

114 
	`as£π
 (
m
->
pkt_Àn
 > 0);

115 
	`‰ì
 (
m
->
pkt
);

117 i‡(
m
->
ªÆm_°r
 && !m->
ªÆm_is_c›y
) {

118 
	`as£π
 (
m
->
ªÆm_Àn
 > 0);

119 
	`‰ì
 (
m
->
ªÆm_°r
);

121 i‡(
m
->
d©a
 && !m->
d©a_is_c›y
) {

122 
	`as£π
 (
m
->
d©a_Àn
 > 0);

123 
	`‰ì
 (
m
->
d©a
);

125 i‡(
m
->
îr‹_°r
 && !m->
îr‹_is_c›y
) {

126 
	`as£π
 (
m
->
îr‹_Àn
 > 0);

127 
	`‰ì
 (
m
->
îr‹_°r
);

129 i‡(
m
->
auth_s_°r
 && !m->
auth_s_is_c›y
) {

130 
	`as£π
 (
m
->
auth_s_Àn
 > 0);

131 
	`‰ì
 (
m
->
auth_s_°r
);

133 i‡(
m
->
auth_c_°r
 && !m->
auth_c_is_c›y
) {

134 
	`as£π
 (
m
->
auth_c_Àn
 > 0);

135 
	`‰ì
 (
m
->
auth_c_°r
);

137 
	`‰ì
 (
m
);

139 
	}
}

143 
	$m_msg_ª£t
 (
m_msg_t
 
m
)

147 
	`as£π
 (
m
 !
NULL
);

149 
m
->
cùhî
 = 
MUNGE_CIPHER_NONE
;

150 
m
->
mac
 = 
MUNGE_MAC_NONE
;

151 
m
->
zù
 = 
MUNGE_ZIP_NONE
;

152 
m
->
ªÆm_Àn
 = 0;

153 i‡(
m
->
ªÆm_°r
) {

154 i‡(!
m
->
ªÆm_is_c›y
) {

155 
	`‰ì
 (
m
->
ªÆm_°r
);

157 
m
->
ªÆm_°r
 = 
NULL
;

159 
m
->
âl
 = 
MUNGE_TTL_DEFAULT
;

160 
m
->
addr_Àn
 = 0;

161 
m
->
time0
 = 0;

162 
m
->
time1
 = 0;

163 
m
->
¸ed_uid
 = 
MUNGE_UID_ANY
;

164 
m
->
¸ed_gid
 = 
MUNGE_GID_ANY
;

165 
m
->
auth_uid
 = 
MUNGE_UID_ANY
;

166 
m
->
auth_gid
 = 
MUNGE_GID_ANY
;

167 
m
->
d©a_Àn
 = 0;

168 i‡(
m
->
d©a
) {

169 i‡(!
m
->
d©a_is_c›y
) {

170 
	`‰ì
 (
m
->
d©a
);

172 
m
->
d©a
 = 
NULL
;

175 
	}
}

178 
munge_îr_t


179 
	$m_msg_böd
 (
m_msg_t
 
m
, 
sd
)

183 
	`as£π
 (
m
 !
NULL
);

185 i‡(
m
->
sd
 >= 0) {

186 (Ë
	`˛o£
 (
m
->
sd
);

188 
m
->
sd
 = sd;

189  (
EMUNGE_SUCCESS
);

190 
	}
}

193 
munge_îr_t


194 
	$m_msg_£nd
 (
m_msg_t
 
m
, 
m_msg_ty≥_t
 
ty≥
, 
maxÀn
)

202 
munge_îr_t
 
e
;

203 
n
, 
n£nd
;

204 
uöt8_t
 
hdr
 [
MUNGE_MSG_HDR_SIZE
];

205 
iovec
 
iov
 [2];

206 
timevÆ
 
tv
;

208 
	`as£π
 (
m
 !
NULL
);

209 
	`as£π
 (
m
->
sd
 >= 0);

210 
	`as£π
 (
ty≥
 !
MUNGE_MSG_UNDEF
);

211 
	`as£π
 (
ty≥
 !
MUNGE_MSG_HDR
);

216 i‡(
m
->
ty≥
 !=Åype) {

217 i‡(
m
->
pkt
) {

218 
	`as£π
 (
m
->
pkt_Àn
 > 0);

219 i‡(!
m
->
pkt_is_c›y
) {

220 
	`‰ì
 (
m
->
pkt
);

222 
m
->
pkt
 = 
NULL
;

223 
m
->
pkt_Àn
 = 0;

224 
m
->
pkt_is_c›y
 = 0;

230 i‡(!
m
->
pkt
) {

231 
	`as£π
 (
m
->
pkt_Àn
 == 0);

232 
	`as£π
 (
m
->
pkt_is_c›y
 == 0);

233 i‡((
n
 = 
	`_msg_Àngth
 (
m
, 
ty≥
)) <= 0) {

234 
	`m_msg_£t_îr
 (
m
, 
EMUNGE_NO_MEMORY
,

235 
	`°rdupf
 ("FailedÅo computeÜength for messageÅype %dÇ=%d",

236 
ty≥
, 
n
));

237  (
EMUNGE_SNAFU
);

239 i‡(!(
m
->
pkt
 = 
	`mÆloc
 (
n
))) {

240 
	`m_msg_£t_îr
 (
m
, 
EMUNGE_NO_MEMORY
,

241 
	`°rdupf
 ("FailedÅoállocate %d bytes for sending message",

242 
n
));

243  (
EMUNGE_NO_MEMORY
);

245 
m
->
pkt_Àn
 = 
n
;

246 
m
->
ty≥
 =Åype;

247 
e
 = 
	`_msg_∑ck
 (
m
, 
ty≥
, m->
pkt
, m->
pkt_Àn
);

248 i‡(
e
 !
EMUNGE_SUCCESS
) {

249 
	`m_msg_£t_îr
 (
m
, 
e
,

250 
	`°rdup
 ("FailedÅoÖack message body"));

251  (
e
);

256 i‡((
maxÀn
 > 0Ë&& (
m
->
pkt_Àn
 > maxlen)) {

257 
	`m_msg_£t_îr
 (
m
, 
EMUNGE_SOCKET
,

258 
	`°rdupf
 ("FailedÅo send message: "

259 "Àngth o‡%dÉx˚ed†max o‡%d", 
m
->
pkt_Àn
, 
maxÀn
));

260  (
EMUNGE_BAD_LENGTH
);

264 
e
 = 
	`_msg_∑ck
 (
m
, 
MUNGE_MSG_HDR
, 
hdr
,  (hdr));

265 i‡(
e
 !
EMUNGE_SUCCESS
) {

266 
	`m_msg_£t_îr
 (
m
, 
e
,

267 
	`°rdup
 ("FailedÅoÖack message header"));

268  (
e
);

272 
n£nd
 = 0;

273 
iov
[0].
iov_ba£
 = (*Ë
hdr
;

274 
n£nd
 +
iov
[0].
iov_Àn
 =  (
hdr
);

275 
iov
[1].
iov_ba£
 = 
m
->
pkt
;

276 
n£nd
 +
iov
[1].
iov_Àn
 = 
m
->
pkt_Àn
;

280 
	`_gë_timevÆ
 (&
tv
, 
MUNGE_SOCKET_TIMEOUT_MSECS
);

284 i‡((
î∫o
 = 0, 
n
 = 
	`fd_timed_wrôe_iov
 (
m
->
sd
, 
iov
, 2, &
tv
, 1)) < 0) {

285 
	`m_msg_£t_îr
 (
m
, 
EMUNGE_SOCKET
,

286 
	`°rdupf
 ("FaûedÅÿ£nd mesßge: %s", 
	`°ªº‹
 (
î∫o
)));

287  (
EMUNGE_SOCKET
);

289 i‡(
î∫o
 =
ETIMEDOUT
) {

290 
	`m_msg_£t_îr
 (
m
, 
EMUNGE_SOCKET
,

291 
	`°rdup
 ("FailedÅo send message: Timed-out"));

292  (
EMUNGE_SOCKET
);

294 i‡(
n
 !
n£nd
) {

295 
	`m_msg_£t_îr
 (
m
, 
EMUNGE_SOCKET
,

296 
	`°rdupf
 ("Síàöcom∂ëêmesßge: %d o‡%d byãs", 
n
, 
n£nd
));

297  (
EMUNGE_SOCKET
);

299  (
EMUNGE_SUCCESS
);

301 
	}
}

304 
munge_îr_t


305 
	$m_msg_ªcv
 (
m_msg_t
 
m
, 
m_msg_ty≥_t
 
ty≥
, 
maxÀn
)

316 
n
, 
ƒecv
;

317 
uöt8_t
 
hdr
 [
MUNGE_MSG_HDR_SIZE
];

318 
timevÆ
 
tv
;

320 
	`as£π
 (
m
 !
NULL
);

321 
	`as£π
 (
m
->
sd
 >= 0);

322 
	`as£π
 (
m
->
ty≥
 !
MUNGE_MSG_HDR
);

323 
	`as£π
 (
m
->
pkt
 =
NULL
);

324 
	`as£π
 (
m
->
pkt_Àn
 == 0);

325 
	`as£π
 (
m
->
pkt_is_c›y
 == 0);

326 
	`as£π
 (
	`_msg_Àngth
 (
m
, 
MUNGE_MSG_HDR
Ë=
MUNGE_MSG_HDR_SIZE
);

330 
	`_gë_timevÆ
 (&
tv
, 
MUNGE_SOCKET_TIMEOUT_MSECS
);

334 
ƒecv
 =  (
hdr
);

335 i‡((
î∫o
 = 0, 
n
 = 
	`fd_timed_ªad_n
 (
m
->
sd
, &
hdr
, 
ƒecv
, &
tv
, 1)) < 0) {

336 
	`m_msg_£t_îr
 (
m
, 
EMUNGE_SOCKET
,

337 
	`°rdupf
 ("FailedÅoÑeceive message header: %s",

338 
	`°ªº‹
 (
î∫o
)));

339  (
EMUNGE_SOCKET
);

341 i‡(
î∫o
 =
ETIMEDOUT
) {

342 
	`m_msg_£t_îr
 (
m
, 
EMUNGE_SOCKET
,

343 
	`°rdup
 ("FailedÅoÑeceive message header: Timed-out"));

344  (
EMUNGE_SOCKET
);

346 i‡(
n
 !
ƒecv
) {

347 
	`m_msg_£t_îr
 (
m
, 
EMUNGE_SOCKET
,

348 
	`°rdupf
 ("Received incomplete message header: %d of %d bytes",

349 
n
, 
ƒecv
));

350  (
EMUNGE_SOCKET
);

352 i‡(
	`_msg_u≈ack
 (
m
, 
MUNGE_MSG_HDR
, 
hdr
,  (hdr))

353 !
EMUNGE_SUCCESS
) {

354 
	`m_msg_£t_îr
 (
m
, 
EMUNGE_SOCKET
,

355 
	`°rdup
 ("FailedÅo unpack message header"));

356  (
EMUNGE_SOCKET
);

358 i‡((
ty≥
 !
MUNGE_MSG_UNDEF
Ë&& (
m
->type !=Åype)) {

359 
	`m_msg_£t_îr
 (
m
, 
EMUNGE_SOCKET
,

360 
	`°rdupf
 ("Received unexpected messageÅype: wanted %d, got %d",

361 
ty≥
, 
m
->type));

362  (
EMUNGE_SOCKET
);

364 i‡((
maxÀn
 > 0Ë&& (
m
->
pkt_Àn
 > maxlen)) {

365 
	`m_msg_£t_îr
 (
m
, 
EMUNGE_SOCKET
,

366 
	`°rdupf
 ("FailedÅoÑeceive message: "

367 "Àngth o‡%dÉx˚ed†max o‡%d", 
m
->
pkt_Àn
, 
maxÀn
));

368  (
EMUNGE_BAD_LENGTH
);

370 i‡(!(
m
->
pkt
 = 
	`mÆloc
 (m->
pkt_Àn
))) {

371 
	`m_msg_£t_îr
 (
m
, 
EMUNGE_NO_MEMORY
,

372 
	`°rdupf
 ("FaûedÅÿÆloˇã %d byã†f‹Ñe˚ivög mesßge", 
n
));

373  (
EMUNGE_NO_MEMORY
);

375 i‡((
î∫o
 = 0,

376 
n
 = 
	`fd_timed_ªad_n
 (
m
->
sd
, m->
pkt
, m->
pkt_Àn
, &
tv
, 1)) < 0) {

377 
	`m_msg_£t_îr
 (
m
, 
EMUNGE_SOCKET
,

378 
	`°rdupf
 ("FaûedÅÿª˚ivêmesßgêbody: %s", 
	`°ªº‹
 (
î∫o
)));

379  (
EMUNGE_SOCKET
);

381 i‡(
î∫o
 =
ETIMEDOUT
) {

382 
	`m_msg_£t_îr
 (
m
, 
EMUNGE_SOCKET
,

383 
	`°rdup
 ("FailedÅoÑeceive message body: Timed-out"));

384  (
EMUNGE_SOCKET
);

386 i‡(
n
 !
m
->
pkt_Àn
) {

387 
	`m_msg_£t_îr
 (
m
, 
EMUNGE_SOCKET
,

388 
	`°rdupf
 ("Received incomplete message body: %d of %d bytes",

389 
n
, 
ƒecv
));

390  (
EMUNGE_SOCKET
);

392 i‡(
	`_msg_u≈ack
 (
m
, m->
ty≥
, m->
pkt
, m->
pkt_Àn
Ë!
EMUNGE_SUCCESS
) {

393 
	`m_msg_£t_îr
 (
m
, 
EMUNGE_SOCKET
,

394 
	`°rdup
 ("FailedÅo unpack message body"));

395  (
EMUNGE_SOCKET
);

399 
	`‰ì
 (
m
->
pkt
);

400 
m
->
pkt
 = 
NULL
;

401 
m
->
pkt_Àn
 = 0;

402 
	`as£π
 (
m
->
pkt_is_c›y
 == 0);

403  (
EMUNGE_SUCCESS
);

404 
	}
}

408 
	$m_msg_£t_îr
 (
m_msg_t
 
m
, 
munge_îr_t
 
e
, *
s
)

418 
	`as£π
 (
m
 !
NULL
);

420 i‡((
m
->
îr‹_num
 =
EMUNGE_SUCCESS
Ë&& (
e
 != EMUNGE_SUCCESS)) {

421 
m
->
îr‹_num
 = 
e
;

422 
	`as£π
 (
m
->
îr‹_°r
 =
NULL
);

423 
	`as£π
 (
m
->
îr‹_Àn
 == 0);

424 
	`as£π
 (
m
->
îr‹_is_c›y
 == 0);

425 
m
->
îr‹_°r
 = (
s
 !
NULL
Ë? s : 
	`°rdup
 (
	`munge_°ªº‹
 (
e
));

426 
m
->
îr‹_Àn
 = 
	`°æí
 (m->
îr‹_°r
) + 1;

428 i‡(
s
) {

429 
	`‰ì
 (
s
);

434 
	}
}

442 
	$_gë_timevÆ
 (
timevÆ
 *
tv
, 
m£cs
)

446 
	`as£π
 (
tv
 !
NULL
);

448 i‡(
	`gëtimeofday
 (
tv
, 
NULL
) < 0) {

449 
tv
->
tv_£c
 =Åv->
tv_u£c
 = 0;

451 i‡(
m£cs
 > 0) {

452 
tv
->
tv_£c
 +
m£cs
 / 1000;

453 
tv
->
tv_u£c
 +(
m£cs
 % 1000) * 1000;

454 i‡(
tv
->
tv_u£c
 >= 1000000) {

455 
tv
->
tv_£c
 +tv->
tv_u£c
 / 1000000;

456 
tv
->
tv_u£c
 %= 1000000;

460 
	}
}

464 
	$_msg_Àngth
 (
m_msg_t
 
m
, 
m_msg_ty≥_t
 
ty≥
)

468 
n
 = 0;

470 
	`as£π
 (
m
 !
NULL
);

472 
ty≥
) {

473 
MUNGE_MSG_HDR
:

474 
n
 + (
m_msg_magic_t
);

475 
n
 + (
m_msg_vîsi⁄_t
);

476 
n
 + (
m
->
ty≥
);

477 
n
 + (
m
->
ªåy
);

478 
n
 + (
m
->
pkt_Àn
);

480 
MUNGE_MSG_ENC_REQ
:

481 
n
 + (
m
->
cùhî
);

482 
n
 + (
m
->
mac
);

483 
n
 + (
m
->
zù
);

484 
n
 + (
m
->
ªÆm_Àn
);

485 
n
 +
m
->
ªÆm_Àn
;

486 
n
 + (
m
->
âl
);

487 
n
 + (
m
->
auth_uid
);

488 
n
 + (
m
->
auth_gid
);

489 
n
 + (
m
->
d©a_Àn
);

490 
n
 +
m
->
d©a_Àn
;

492 
MUNGE_MSG_ENC_RSP
:

493 
n
 + (
m
->
îr‹_num
);

494 
n
 + (
m
->
îr‹_Àn
);

495 
n
 +
m
->
îr‹_Àn
;

496 
n
 + (
m
->
d©a_Àn
);

497 
n
 +
m
->
d©a_Àn
;

499 
MUNGE_MSG_DEC_REQ
:

500 
n
 + (
m
->
d©a_Àn
);

501 
n
 +
m
->
d©a_Àn
;

503 
MUNGE_MSG_DEC_RSP
:

504 
n
 + (
m
->
îr‹_num
);

505 
n
 + (
m
->
îr‹_Àn
);

506 
n
 +
m
->
îr‹_Àn
;

507 
n
 + (
m
->
cùhî
);

508 
n
 + (
m
->
mac
);

509 
n
 + (
m
->
zù
);

510 
n
 + (
m
->
ªÆm_Àn
);

511 
n
 +
m
->
ªÆm_Àn
;

512 
n
 + (
m
->
âl
);

513 
n
 + (
m
->
addr_Àn
);

514 
n
 +
m
->
addr_Àn
;

515 
n
 + (
m
->
time0
);

516 
n
 + (
m
->
time1
);

517 
n
 + (
m
->
¸ed_uid
);

518 
n
 + (
m
->
¸ed_gid
);

519 
n
 + (
m
->
auth_uid
);

520 
n
 + (
m
->
auth_gid
);

521 
n
 + (
m
->
d©a_Àn
);

522 
n
 +
m
->
d©a_Àn
;

524 
MUNGE_MSG_AUTH_FD_REQ
:

525 
n
 + (
m
->
auth_s_Àn
);

526 
n
 +
m
->
auth_s_Àn
;

527 
n
 + (
m
->
auth_c_Àn
);

528 
n
 +
m
->
auth_c_Àn
;

534  (
n
);

535 
	}
}

538 
munge_îr_t


539 
	$_msg_∑ck
 (
m_msg_t
 
m
, 
m_msg_ty≥_t
 
ty≥
, *
d°
, 
d°Àn
)

544 
m_msg_magic_t
 
magic
 = 
MUNGE_MSG_MAGIC
;

545 
m_msg_vîsi⁄_t
 
vîsi⁄
 = 
MUNGE_MSG_VERSION
;

546 *
p
 = 
d°
;

547 *
q
 = (*Ë
d°
 + 
d°Àn
;

549 
	`as£π
 (
m
 !
NULL
);

551 
ty≥
) {

552 
MUNGE_MSG_HDR
:

553 i‡(!
	`_∑ck
 (&
p
, &
magic
,  (magic), 
q
)) ;

554 i‡(!
	`_∑ck
 (&
p
, &
vîsi⁄
,  (vîsi⁄), 
q
)) ;

555 i‡(!
	`_∑ck
 (&
p
, &(
m
->
ty≥
),  (m->ty≥), 
q
)) ;

556 i‡(!
	`_∑ck
 (&
p
, &(
m
->
ªåy
),  (m->ªåy), 
q
)) ;

557 i‡(!
	`_∑ck
 (&
p
, &(
m
->
pkt_Àn
),  (m->pkt_Àn), 
q
)) ;

559 
îr
;

560 
MUNGE_MSG_ENC_REQ
:

561 i‡(!
	`_∑ck
 (&
p
, &(
m
->
cùhî
),  (m->cùhî), 
q
)) ;

562 i‡(!
	`_∑ck
 (&
p
, &(
m
->
mac
),  (m->mac), 
q
)) ;

563 i‡(!
	`_∑ck
 (&
p
, &(
m
->
zù
),  (m->zù), 
q
)) ;

564 i‡(!
	`_∑ck
 (&
p
, &(
m
->
ªÆm_Àn
),  (m->ªÆm_Àn), 
q
)) ;

565 i‡–
	`_c›y
 (
p
, 
m
->
ªÆm_°r
, m->
ªÆm_Àn
,Ö, 
q
, &p) < 0) ;

566 i‡(!
	`_∑ck
 (&
p
, &(
m
->
âl
),  (m->âl), 
q
)) ;

567 i‡(!
	`_∑ck
 (&
p
, &(
m
->
auth_uid
),  (m->auth_uid), 
q
)) ;

568 i‡(!
	`_∑ck
 (&
p
, &(
m
->
auth_gid
),  (m->auth_gid), 
q
)) ;

569 i‡(!
	`_∑ck
 (&
p
, &(
m
->
d©a_Àn
),  (m->d©a_Àn), 
q
)) ;

570 i‡–
	`_c›y
 (
p
, 
m
->
d©a
, m->
d©a_Àn
,Ö, 
q
, &p) < 0) ;

572 
îr
;

573 
MUNGE_MSG_ENC_RSP
:

574 i‡(!
	`_∑ck
 (&
p
, &(
m
->
îr‹_num
),  (m->îr‹_num), 
q
)) ;

575 i‡(!
	`_∑ck
 (&
p
, &(
m
->
îr‹_Àn
),  (m->îr‹_Àn), 
q
)) ;

576 i‡–
	`_c›y
 (
p
, 
m
->
îr‹_°r
, m->
îr‹_Àn
,Ö, 
q
, &p) < 0) ;

577 i‡(!
	`_∑ck
 (&
p
, &(
m
->
d©a_Àn
),  (m->d©a_Àn), 
q
)) ;

578 i‡–
	`_c›y
 (
p
, 
m
->
d©a
, m->
d©a_Àn
,Ö, 
q
, &p) < 0) ;

580 
îr
;

581 
MUNGE_MSG_DEC_REQ
:

582 i‡(!
	`_∑ck
 (&
p
, &(
m
->
d©a_Àn
),  (m->d©a_Àn), 
q
)) ;

583 i‡–
	`_c›y
 (
p
, 
m
->
d©a
, m->
d©a_Àn
,Ö, 
q
, &p) < 0) ;

585 
îr
;

586 
MUNGE_MSG_DEC_RSP
:

587 i‡(!
	`_∑ck
 (&
p
, &(
m
->
îr‹_num
),  (m->îr‹_num), 
q
)) ;

588 i‡(!
	`_∑ck
 (&
p
, &(
m
->
îr‹_Àn
),  (m->îr‹_Àn), 
q
)) ;

589 i‡–
	`_c›y
 (
p
, 
m
->
îr‹_°r
, m->
îr‹_Àn
,Ö, 
q
, &p) < 0) ;

590 i‡(!
	`_∑ck
 (&
p
, &(
m
->
cùhî
),  (m->cùhî), 
q
)) ;

591 i‡(!
	`_∑ck
 (&
p
, &(
m
->
mac
),  (m->mac), 
q
)) ;

592 i‡(!
	`_∑ck
 (&
p
, &(
m
->
zù
),  (m->zù), 
q
)) ;

593 i‡(!
	`_∑ck
 (&
p
, &(
m
->
ªÆm_Àn
),  (m->ªÆm_Àn), 
q
)) ;

594 i‡–
	`_c›y
 (
p
, 
m
->
ªÆm_°r
, m->
ªÆm_Àn
,Ö, 
q
, &p) < 0) ;

595 i‡(!
	`_∑ck
 (&
p
, &(
m
->
âl
),  (m->âl), 
q
)) ;

596 i‡(!
	`_∑ck
 (&
p
, &(
m
->
addr_Àn
),  (m->addr_Àn), 
q
)) ;

597 i‡–
	`_c›y
 (
p
, &(
m
->
addr
), m->
addr_Àn
,Ö, 
q
, &p) < 0) ;

598 i‡(!
	`_∑ck
 (&
p
, &(
m
->
time0
),  (m->time0), 
q
)) ;

599 i‡(!
	`_∑ck
 (&
p
, &(
m
->
time1
),  (m->time1), 
q
)) ;

600 i‡(!
	`_∑ck
 (&
p
, &(
m
->
¸ed_uid
),  (m->¸ed_uid), 
q
)) ;

601 i‡(!
	`_∑ck
 (&
p
, &(
m
->
¸ed_gid
),  (m->¸ed_gid), 
q
)) ;

602 i‡(!
	`_∑ck
 (&
p
, &(
m
->
auth_uid
),  (m->auth_uid), 
q
)) ;

603 i‡(!
	`_∑ck
 (&
p
, &(
m
->
auth_gid
),  (m->auth_gid), 
q
)) ;

604 i‡(!
	`_∑ck
 (&
p
, &(
m
->
d©a_Àn
),  (m->d©a_Àn), 
q
)) ;

605 i‡–
	`_c›y
 (
p
, 
m
->
d©a
, m->
d©a_Àn
,Ö, 
q
, &p) < 0) ;

607 
îr
;

608 
MUNGE_MSG_AUTH_FD_REQ
:

609 i‡(!
	`_∑ck
 (&
p
, &(
m
->
auth_s_Àn
),  (m->auth_s_Àn), 
q
));

610 i‡–
	`_c›y
 (
p
, 
m
->
auth_s_°r
, m->
auth_s_Àn
,Ö, 
q
, &p) < 0) ;

611 i‡(!
	`_∑ck
 (&
p
, &(
m
->
auth_c_Àn
),  (m->auth_c_Àn), 
q
));

612 i‡–
	`_c›y
 (
p
, 
m
->
auth_c_°r
, m->
auth_c_Àn
,Ö, 
q
, &p) < 0) ;

614 
îr
;

616 
îr
;

618  (
EMUNGE_SUCCESS
);

620 
îr
:

621 
	`m_msg_£t_îr
 (
m
, 
EMUNGE_SNAFU
,

622 
	`°rdupf
 ("FaûedÅÿ∑ck mesßgêty≥ %d", 
ty≥
));

623  (
EMUNGE_SNAFU
);

624 
	}
}

627 
munge_îr_t


628 
	$_msg_u≈ack
 (
m_msg_t
 
m
, 
m_msg_ty≥_t
 
ty≥
, c⁄° *
§c
, 
§˛í
)

633 
m_msg_magic_t
 
magic
;

634 
m_msg_vîsi⁄_t
 
vîsi⁄
;

635 *
p
 = (*Ë
§c
;

636 *
q
 = (*Ë
§c
 + 
§˛í
;

638 
	`as£π
 (
m
 !
NULL
);

640 
ty≥
) {

641 
MUNGE_MSG_HDR
:

642 i‡(!
	`_u≈ack
 (&
magic
, &
p
,  (magic), 
q
)) ;

643 i‡(!
	`_u≈ack
 (&
vîsi⁄
, &
p
,  (vîsi⁄), 
q
)) ;

644 i‡(!
	`_u≈ack
 (&(
m
->
ty≥
), &
p
,  (m->ty≥), 
q
)) ;

645 i‡(!
	`_u≈ack
 (&(
m
->
ªåy
), &
p
,  (m->ªåy), 
q
)) ;

646 i‡(!
	`_u≈ack
 (&(
m
->
pkt_Àn
), &
p
,  (m->pkt_Àn), 
q
)) ;

648 
îr
;

649 
MUNGE_MSG_ENC_REQ
:

650 i‡(!
	`_u≈ack
 (&(
m
->
cùhî
), &
p
,  (m->cùhî), 
q
)) ;

651 i‡(!
	`_u≈ack
 (&(
m
->
mac
), &
p
,  (m->mac), 
q
)) ;

652 i‡(!
	`_u≈ack
 (&(
m
->
zù
), &
p
,  (m->zù), 
q
)) ;

653 i‡(!
	`_u≈ack
 (&(
m
->
ªÆm_Àn
), &
p
,  (m->ªÆm_Àn), 
q
));

654 i‡(!
	`_Æloc
 ((
vµ
Ë&(
m
->
ªÆm_°r
), m->
ªÆm_Àn
)Ë
nomem
;

655 i‡–
	`_c›y
 (
m
->
ªÆm_°r
, 
p
, m->
ªÆm_Àn
,Ö, 
q
, &p) < 0) ;

656 i‡(!
	`_u≈ack
 (&(
m
->
âl
), &
p
,  (m->âl), 
q
)) ;

657 i‡(!
	`_u≈ack
 (&(
m
->
auth_uid
), &
p
,  (m->auth_uid), 
q
)) ;

658 i‡(!
	`_u≈ack
 (&(
m
->
auth_gid
), &
p
,  (m->auth_gid), 
q
)) ;

659 i‡(!
	`_u≈ack
 (&(
m
->
d©a_Àn
), &
p
,  (m->d©a_Àn), 
q
)) ;

660 i‡(!
	`_Æloc
 (&(
m
->
d©a
), m->
d©a_Àn
)Ë
nomem
;

661 i‡–
	`_c›y
 (
m
->
d©a
, 
p
, m->
d©a_Àn
,Ö, 
q
, &p) < 0) ;

663 
îr
;

664 
MUNGE_MSG_ENC_RSP
:

665 i‡(!
	`_u≈ack
 (&(
m
->
îr‹_num
), &
p
,  (m->îr‹_num), 
q
));

666 i‡(!
	`_u≈ack
 (&(
m
->
îr‹_Àn
), &
p
,  (m->îr‹_Àn), 
q
));

667 i‡(!
	`_Æloc
 ((
vµ
Ë&(
m
->
îr‹_°r
), m->
îr‹_Àn
)Ë
nomem
;

668 i‡–
	`_c›y
 (
m
->
îr‹_°r
, 
p
, m->
îr‹_Àn
,Ö, 
q
, &p) < 0) ;

669 i‡(!
	`_u≈ack
 (&(
m
->
d©a_Àn
), &
p
,  (m->d©a_Àn), 
q
)) ;

670 i‡(!
	`_Æloc
 (&(
m
->
d©a
), m->
d©a_Àn
)Ë
nomem
;

671 i‡–
	`_c›y
 (
m
->
d©a
, 
p
, m->
d©a_Àn
,Ö, 
q
, &p) < 0) ;

673 
îr
;

674 
MUNGE_MSG_DEC_REQ
:

675 i‡(!
	`_u≈ack
 (&(
m
->
d©a_Àn
), &
p
,  (m->d©a_Àn), 
q
)) ;

676 i‡(!
	`_Æloc
 (&(
m
->
d©a
), m->
d©a_Àn
)Ë
nomem
;

677 i‡–
	`_c›y
 (
m
->
d©a
, 
p
, m->
d©a_Àn
,Ö, 
q
, &p) < 0) ;

679 
îr
;

680 
MUNGE_MSG_DEC_RSP
:

681 i‡(!
	`_u≈ack
 (&(
m
->
îr‹_num
), &
p
,  (m->îr‹_num), 
q
));

682 i‡(!
	`_u≈ack
 (&(
m
->
îr‹_Àn
), &
p
,  (m->îr‹_Àn), 
q
));

683 i‡(!
	`_Æloc
 ((
vµ
Ë&(
m
->
îr‹_°r
), m->
îr‹_Àn
)Ë
nomem
;

684 i‡–
	`_c›y
 (
m
->
îr‹_°r
, 
p
, m->
îr‹_Àn
,Ö, 
q
, &p) < 0) ;

685 i‡(!
	`_u≈ack
 (&(
m
->
cùhî
), &
p
,  (m->cùhî), 
q
)) ;

686 i‡(!
	`_u≈ack
 (&(
m
->
mac
), &
p
,  (m->mac), 
q
)) ;

687 i‡(!
	`_u≈ack
 (&(
m
->
zù
), &
p
,  (m->zù), 
q
)) ;

688 i‡(!
	`_u≈ack
 (&(
m
->
ªÆm_Àn
), &
p
,  (m->ªÆm_Àn), 
q
));

689 i‡(!
	`_Æloc
 ((
vµ
Ë&(
m
->
ªÆm_°r
), m->
ªÆm_Àn
)Ë
nomem
;

690 i‡–
	`_c›y
 (
m
->
ªÆm_°r
, 
p
, m->
ªÆm_Àn
,Ö, 
q
, &p) < 0) ;

691 i‡(!
	`_u≈ack
 (&(
m
->
âl
), &
p
,  (m->âl), 
q
)) ;

692 i‡(!
	`_u≈ack
 (&(
m
->
addr_Àn
), &
p
,  (m->addr_Àn), 
q
)) ;

693 i‡–
	`_c›y
 (&(
m
->
addr
), 
p
, m->
addr_Àn
,Ö, 
q
, &p) < 0) ;

694 i‡(!
	`_u≈ack
 (&(
m
->
time0
), &
p
,  (m->time0), 
q
)) ;

695 i‡(!
	`_u≈ack
 (&(
m
->
time1
), &
p
,  (m->time1), 
q
)) ;

696 i‡(!
	`_u≈ack
 (&(
m
->
¸ed_uid
), &
p
,  (m->¸ed_uid), 
q
)) ;

697 i‡(!
	`_u≈ack
 (&(
m
->
¸ed_gid
), &
p
,  (m->¸ed_gid), 
q
)) ;

698 i‡(!
	`_u≈ack
 (&(
m
->
auth_uid
), &
p
,  (m->auth_uid), 
q
)) ;

699 i‡(!
	`_u≈ack
 (&(
m
->
auth_gid
), &
p
,  (m->auth_gid), 
q
)) ;

700 i‡(!
	`_u≈ack
 (&(
m
->
d©a_Àn
), &
p
,  (m->d©a_Àn), 
q
)) ;

701 i‡(!
	`_Æloc
 (&(
m
->
d©a
), m->
d©a_Àn
)Ë
nomem
;

702 i‡–
	`_c›y
 (
m
->
d©a
, 
p
, m->
d©a_Àn
,Ö, 
q
, &p) < 0) ;

704 
îr
;

705 
MUNGE_MSG_AUTH_FD_REQ
:

706 i‡(!
	`_u≈ack
(&(
m
->
auth_s_Àn
), &
p
, (m->auth_s_Àn), 
q
));

707 i‡(!
	`_Æloc
((
vµ
)&(
m
->
auth_s_°r
), m->
auth_s_Àn
)Ë
nomem
;

708 i‡–
	`_c›y
 (
m
->
auth_s_°r
, 
p
, m->
auth_s_Àn
,Ö, 
q
, &p) < 0) ;

709 i‡(!
	`_u≈ack
(&(
m
->
auth_c_Àn
), &
p
, (m->auth_c_Àn), 
q
));

710 i‡(!
	`_Æloc
((
vµ
)&(
m
->
auth_c_°r
), m->
auth_c_Àn
)Ë
nomem
;

711 i‡–
	`_c›y
 (
m
->
auth_c_°r
, 
p
, m->
auth_c_Àn
,Ö, 
q
, &p) < 0) ;

713 
îr
;

715 
îr
;

717 
	`as£π
 (
p
 =(*Ë
§c
 + 
§˛í
);

719 i‡(
ty≥
 =
MUNGE_MSG_HDR
) {

720 i‡(
magic
 !
MUNGE_MSG_MAGIC
) {

721 
	`m_msg_£t_îr
 (
m
, 
EMUNGE_SOCKET
,

722 
	`°rdupf
 ("Re˚ived invÆid mesßgêmagi¯%d", 
magic
));

723  (
EMUNGE_SOCKET
);

725 i‡(
vîsi⁄
 !
MUNGE_MSG_VERSION
) {

726 
	`m_msg_£t_îr
 (
m
, 
EMUNGE_SOCKET
,

727 
	`°rdupf
 ("Re˚ived invÆid mesßgêvîsi⁄ %d", 
vîsi⁄
));

728  (
EMUNGE_SOCKET
);

731  (
EMUNGE_SUCCESS
);

733 
îr
:

734 
	`m_msg_£t_îr
 (
m
, 
EMUNGE_SNAFU
,

735 
	`°rdupf
 ("FaûedÅÿu≈ack mesßgêty≥ %d", 
ty≥
));

736  (
EMUNGE_SNAFU
);

738 
nomem
:

739 
	`m_msg_£t_îr
 (
m
, 
EMUNGE_NO_MEMORY
, 
NULL
);

740  (
EMUNGE_NO_MEMORY
);

741 
	}
}

745 
	$_Æloc
 (**
pd°
, 
Àn
)

751 *
p
;

753 
	`as£π
 (
pd°
 !
NULL
);

754 
	`as£π
 (*
pd°
 =
NULL
);

756 i‡(
Àn
 == 0) {

759 i‡(
Àn
 < 0) {

764 i‡(!(
p
 = 
	`mÆloc
 (
Àn
 + 1))) {

767 
p
[
Àn
] = '\0';

768 *
pd°
 = 
p
;

770 
	}
}

774 
	$_c›y
 (*
d°
, *
§c
, 
Àn
,

775 c⁄° *
fú°
, c⁄° *
œ°
, **
pöc
)

783 i‡(
Àn
 < 0) {

786 i‡(
Àn
 == 0) {

789 i‡((
fú°
 !
NULL
Ë&& (
œ°
 != NULL)

790 && ((*Ë
fú°
 + 
Àn
 > (*Ë
œ°
)) {

793 i‡(
Àn
 > 0) {

794 
	`mem˝y
 (
d°
, 
§c
, 
Àn
);

796 i‡(
pöc
 !
NULL
) {

797 *
pöc
 = (*Ë*pö¯+ 
Àn
;

799  (
Àn
);

800 
	}
}

804 
	$_∑ck
 (**
pd°
, *
§c
, 
Àn
, c⁄° *
œ°
)

812 *
d°
;

813 
uöt16_t
 
u16
;

814 
uöt32_t
 
u32
;

816 
	`as£π
 (
pd°
 !
NULL
);

817 
	`as£π
 (
§c
 !
NULL
);

819 
d°
 = *
pd°
;

820 i‡(
œ°
 && ((*Ë
d°
 + 
Àn
 > (*)Üast)) {

823 
Àn
) {

824 ( (
uöt8_t
)):

825 * (
uöt8_t
 *Ë
d°
 = * (uöt8_à*Ë
§c
;

827 ( (
uöt16_t
)):

828 
u16
 = 
	`ht⁄s
 (* (
uöt16_t
 *Ë
§c
);

829 
	`mem˝y
 (
d°
, &
u16
, 
Àn
);

831 ( (
uöt32_t
)):

832 
u32
 = 
	`ht⁄l
 (* (
uöt32_t
 *Ë
§c
);

833 
	`mem˝y
 (
d°
, &
u32
, 
Àn
);

838 *
pd°
 = (*Ë
d°
 + 
Àn
;

839  (
Àn
);

840 
	}
}

844 
	$_u≈ack
 (*
d°
, **
p§c
, 
Àn
, c⁄° *
œ°
)

852 *
§c
;

853 
uöt16_t
 
u16
;

854 
uöt32_t
 
u32
;

856 
	`as£π
 (
d°
 !
NULL
);

857 
	`as£π
 (
p§c
 !
NULL
);

859 
§c
 = *
p§c
;

860 i‡(
œ°
 && ((*Ë
§c
 + 
Àn
 > (*)Üast)) {

863 
Àn
) {

864 ( (
uöt8_t
)):

865 * (
uöt8_t
 *Ë
d°
 = * (uöt8_à*Ë
§c
;

867 ( (
uöt16_t
)):

868 
	`mem˝y
 (&
u16
, 
§c
, 
Àn
);

869 * (
uöt16_t
 *Ë
d°
 = 
	`¡ohs
 (
u16
);

871 ( (
uöt32_t
)):

872 
	`mem˝y
 (&
u32
, 
§c
, 
Àn
);

873 * (
uöt32_t
 *Ë
d°
 = 
	`¡ohl
 (
u32
);

878 *
p§c
 = (*Ë
§c
 + 
Àn
;

879  (
Àn
);

880 
	}
}

	@src/libcommon/m_msg.h

29 #i‚de‡
M_MSG_H


30 
	#M_MSG_H


	)

33 #i‡
HAVE_CONFIG_H


34 
	~"c⁄fig.h
"

37 
	~<öây≥s.h
>

38 
	~<munge.h
>

39 
	~<√töë/ö.h
>

49 
	#MUNGE_MSG_HDR_SIZE
 11

	)

54 
	#MUNGE_MSG_MAGIC
 0x00606D4B

	)

60 
	#MUNGE_MSG_VERSION
 4

	)

67 
	em_msg_ty≥
 {

68 
	mMUNGE_MSG_UNDEF
,

69 
	mMUNGE_MSG_HDR
,

70 
	mMUNGE_MSG_ENC_REQ
,

71 
	mMUNGE_MSG_ENC_RSP
,

72 
	mMUNGE_MSG_DEC_REQ
,

73 
	mMUNGE_MSG_DEC_RSP
,

74 
	mMUNGE_MSG_AUTH_FD_REQ


77 
	sm_msg
 {

78 
	msd
;

79 
uöt8_t
 
	mty≥
;

80 
uöt8_t
 
	mªåy
;

81 
uöt32_t
 
	mpkt_Àn
;

82 *
	mpkt
;

83 
uöt8_t
 
	mcùhî
;

84 
uöt8_t
 
	mmac
;

85 
uöt8_t
 
	mzù
;

86 
uöt8_t
 
	mªÆm_Àn
;

87 *
	mªÆm_°r
;

88 
uöt32_t
 
	mâl
;

89 
uöt8_t
 
	maddr_Àn
;

90 
ö_addr
 
	maddr
;

91 
uöt32_t
 
	mtime0
;

92 
uöt32_t
 
	mtime1
;

93 
uöt32_t
 
	m˛õ¡_uid
;

94 
uöt32_t
 
	m˛õ¡_gid
;

95 
uöt32_t
 
	m¸ed_uid
;

96 
uöt32_t
 
	m¸ed_gid
;

97 
uöt32_t
 
	mauth_uid
;

98 
uöt32_t
 
	mauth_gid
;

99 
uöt32_t
 
	md©a_Àn
;

100 *
	md©a
;

101 
uöt32_t
 
	mauth_s_Àn
;

102 *
	mauth_s_°r
;

103 
uöt32_t
 
	mauth_c_Àn
;

104 *
	mauth_c_°r
;

105 
uöt8_t
 
	mîr‹_num
;

106 
uöt8_t
 
	mîr‹_Àn
;

107 *
	mîr‹_°r
;

108 
	mpkt_is_c›y
:1;

109 
	mªÆm_is_c›y
:1;

110 
	md©a_is_c›y
:1;

111 
	mîr‹_is_c›y
:1;

112 
	mauth_s_is_c›y
:1;

113 
	mauth_c_is_c›y
:1;

116 
m_msg
 * 
	tm_msg_t
;

117 
m_msg_ty≥
 
	tm_msg_ty≥_t
;

118 
uöt32_t
 
	tm_msg_magic_t
;

119 
uöt8_t
 
	tm_msg_vîsi⁄_t
;

126 
munge_îr_t
 
m_msg_¸óã
 (
m_msg_t
 *
pm
);

128 
m_msg_de°roy
 (
m_msg_t
 
m
);

130 
m_msg_ª£t
 (
m_msg_t
 
m
);

132 
munge_îr_t
 
m_msg_böd
 (
m_msg_t
 
m
, 
sd
);

134 
munge_îr_t
 
m_msg_£nd
 (
m_msg_t
 
m
, 
m_msg_ty≥_t
 
ty≥
, 
maxÀn
);

136 
munge_îr_t
 
m_msg_ªcv
 (
m_msg_t
 
m
, 
m_msg_ty≥_t
 
ty≥
, 
maxÀn
);

138 
m_msg_£t_îr
 (
m_msg_t
 
m
, 
munge_îr_t
 
e
, *
s
);

	@src/libcommon/munge_defs.h

29 #i‚de‡
MUNGE_DEFS_H


30 
	#MUNGE_DEFS_H


	)

32 #i‡
HAVE_CONFIG_H


33 
	~"c⁄fig.h
"

36 
	~<munge.h
>

41 
	#MUNGE_CRED_PREFIX
 "MUNGE:"

	)

45 
	#MUNGE_CRED_SUFFIX
 ":"

	)

49 
	#MUNGE_CRED_SALT_LEN
 8

	)

59 #i‡
HAVE_OPENSSL
 && !
HAVE_EVP_AES_128_CBC


60 
	#MUNGE_DEFAULT_CIPHER
 
MUNGE_CIPHER_CAST5


	)

62 
	#MUNGE_DEFAULT_CIPHER
 
MUNGE_CIPHER_AES128


	)

68 
	#MUNGE_DEFAULT_MAC
 
MUNGE_MAC_SHA1


	)

74 
	#MUNGE_DEFAULT_ZIP
 
MUNGE_ZIP_NONE


	)

78 
	#MUNGE_DEFAULT_TTL
 300

	)

82 
	#MUNGE_MAXIMUM_TTL
 3600

	)

86 
	#MUNGE_MAXIMUM_BLK_LEN
 16

	)

90 
	#MUNGE_MAXIMUM_KEY_LEN
 32

	)

94 
	#MUNGE_MAXIMUM_MD_LEN
 64

	)

98 
	#MUNGE_MINIMUM_MD_LEN
 16

	)

102 
	#MUNGE_MAXIMUM_REQ_LEN
 1048576

	)

106 
	#MUNGE_MINIMUM_SECRET_KEY_LEN
 32

	)

114 
	#MUNGE_GROUP_STAT_FLAG
 1

	)

120 
	#MUNGE_GROUP_UPDATE_SECS
 3600

	)

125 
	#MUNGE_REPLAY_PURGE_SECS
 60

	)

129 
	#MUNGE_SOCKET_BACKLOG
 256

	)

133 
	#MUNGE_SOCKET_NAME
 
X_LOCALSTATEDIR
 "/run/munge/munge.sockë.2"

	)

137 
	#MUNGE_SOCKET_CONNECT_ATTEMPTS
 5

	)

147 
	#MUNGE_SOCKET_RETRY_FLAG
 1

	)

152 
	#MUNGE_SOCKET_RETRY_ATTEMPTS
 5

	)

158 
	#MUNGE_SOCKET_RETRY_USECS
 10000

	)

162 
	#MUNGE_SOCKET_TIMEOUT_MSECS
 3000

	)

166 
	#MUNGE_THREADS
 2

	)

171 
	#MUNGE_AUTH_ROOT_ALLOW_FLAG
 0

	)

178 
	#MUNGE_AUTH_SERVER_DIR
 
X_LOCALSTATEDIR
 "/lib/munge"

	)

184 
	#MUNGE_AUTH_CLIENT_DIR
 "/tmp"

	)

189 
	#MUNGE_AUTH_RND_BYTES
 16

	)

193 
	#MUNGED_LOGFILE
 
X_LOCALSTATEDIR
 "/log/munge/munged.log"

	)

197 
	#MUNGED_PIDFILE
 
X_LOCALSTATEDIR
 "/run/munge/munged.pid"

	)

201 
	#MUNGED_RANDOM_SEED
 
X_LOCALSTATEDIR
 "/lib/munge/munge.£ed"

	)

205 
	#MUNGED_SECRET_KEY
 
X_SYSCONFDIR
 "/munge/munge.key"

	)

210 
	#RANDOM_SEED_DEVICE
 "/dev/uøndom"

	)

215 
	#RANDOM_SEED_STIR_BYTES
 16

	)

220 
	#RANDOM_SEED_STIR_MAX_SECS
 3600

	)

226 
	#RANDOM_SEED_STIR_MIN_SECS
 1

	)

	@src/libcommon/posignal.c

31 #i‡
HAVE_CONFIG_H


32 
	~"c⁄fig.h
"

35 
	~<î∫o.h
>

36 
	~<sig«l.h
>

37 
	~"posig«l.h
"

40 
sigfun_t
 *

41 
	$posig«l
 (
signum
, 
sigfun_t
 *
f
)

46 
siga˘i⁄
 
a˘0
, 
a˘1
;

48 
a˘1
.
ß_h™dÀr
 = 
f
;

49 
	`sigem±y£t
 (&
a˘1
.
ß_mask
);

50 
a˘1
.
ß_Êags
 = 0;

53 i‡(
signum
 =
SIGALRM
) {

54 #ifde‡
SA_INTERRUPT


55 
a˘1
.
ß_Êags
 |
SA_INTERRUPT
;

59 #ifde‡
SA_RESTART


60 
a˘1
.
ß_Êags
 |
SA_RESTART
;

65 i‡(
	`siga˘i⁄
 (
signum
, &
a˘1
, &
a˘0
) < 0)

66  (
SIG_ERR
);

67  (
a˘0
.
ß_h™dÀr
);

68 
	}
}

	@src/libcommon/posignal.h

29 #i‚de‡
POSIGNAL_H


30 
	#POSIGNAL_H


	)

33 #i‡
HAVE_CONFIG_H


34 
	~"c⁄fig.h
"

37 
	~<sig«l.h
>

40 
	tsigfun_t
 ();

43 
sigfun_t
 * 
posig«l
 (
signum
, sigfun_à*
f
);

	@src/libcommon/str.c

31 #i‡
HAVE_CONFIG_H


32 
	~"c⁄fig.h
"

35 
	~<î∫o.h
>

36 
	~<°d¨g.h
>

37 
	~<°dio.h
>

38 
	~<°rög.h
>

39 
	~<sys/ty≥s.h
>

40 
	~<time.h
>

41 
	~"°r.h
"

44 #i‚de‡
MAX_STR_SIZE


45 
	#MAX_STR_SIZE
 1024

	)

54 
	$°rdupf
 (c⁄° *
fmt
, ...)

56 
va_li°
 
v¨gs
;

57 
buf
[
MAX_STR_SIZE
];

58 *
p
;

60 i‡(!
fmt
) {

61  (
NULL
);

63 
	`va_°¨t
 (
v¨gs
, 
fmt
);

64 
	`v¢¥ötf
 (
buf
,  (buf), 
fmt
, 
v¨gs
);

65 
	`va_íd
 (
v¨gs
);

67 
buf
[ (buf) - 1] = '\0';

69 i‡(!(
p
 = 
	`°rdup
 (
buf
))) {

70  (
NULL
);

72  (
p
);

73 
	}
}

77 
	$°rˇtf
 (*
d°
, 
size_t
 
size
, c⁄° *
fmt
, ...)

79 
va_li°
 
v¨gs
;

80 *
p
;

81 *
q
;

82 
n
;

83 
Àn
;

84 
∆e·
;

86 i‡(!
d°
 || !
size
) {

89 
p
 = 
d°
;

90 
q
 = 
d°
 + 
size
;

91 (*
p
Ë&& (∞< 
q
)) {

92 
p
++;

94 
Àn
 = 
p
 - 
d°
;

95 i‡(
Àn
 >
size
) {

96 
d°
[
size
 - 1] = '\0';

99 i‡(!
fmt
 || !*fmt) {

100  (
Àn
);

102 
∆e·
 = 
size
 - 
Àn
;

103 i‡(
∆e·
 <= 1) {

106 
	`va_°¨t
 (
v¨gs
, 
fmt
);

107 
n
 = 
	`v¢¥ötf
 (
p
, 
∆e·
, 
fmt
, 
v¨gs
);

108 
	`va_íd
 (
v¨gs
);

110 i‡((
n
 < 0Ë|| (¿>
∆e·
)) {

111 
d°
[
size
 - 1] = '\0';

114  (
Àn
 + 
n
);

115 
	}
}

119 
	$°rbö2hex
 (*
d°
, 
size_t
 
d°Àn
, c⁄° *
§c
, size_à
§˛í
)

121 c⁄° 
bö2hex
[] = "0123456789ABCDEF";

122 *
pd°
 = 
d°
;

123 c⁄° *
p§c
 = 
§c
;

124 
i
;

126 i‡(
d°Àn
 < ((
§˛í
 * 2) + 1)) {

127 
î∫o
 = 
EINVAL
;

130 
i
 = 0; i < 
§˛í
; i++) {

131 *
pd°
++ = 
bö2hex
[(
p§c
[
i
] >> 4) & 0x0f];

132 *
pd°
++ = 
bö2hex
[(
p§c
[
i
] ) & 0x0f];

134 *
pd°
 = '\0';

135  (
pd°
 - (*Ë
d°
);

136 
	}
}

140 
	$°rhex2bö
 (*
d°
, 
size_t
 
d°Àn
, c⁄° *
§c
, size_à
§˛í
)

142 *
pd°
 = 
d°
;

143 c⁄° *
p§c
 = 
§c
;

144 
i
;

145 
c
;

146 
n
;

148 i‡(
d°Àn
 < (
§˛í
 + 1) / 2) {

149 
î∫o
 = 
EINVAL
;

152 
i
 = 0; i < 
§˛í
; i++) {

153 
c
 = 
p§c
[
i
];

154 i‡((
c
 >= '0') && (c <= '9')) {

155 
n
 = 
c
 - '0';

157 i‡((
c
 >= 'A') && (c <= 'F')) {

158 
n
 = 
c
 - 'A' + 10;

160 i‡((
c
 >= 'a') && (c <= 'f')) {

161 
n
 = 
c
 - 'a' + 10;

164 
î∫o
 = 
EINVAL
;

167 i‡(
i
 % 2) {

168 *
pd°
++ |
n
 & 0x0f;

171 *
pd°
 = (
n
 & 0x0f) << 4;

174  ((
§˛í
 + 1) / 2);

175 
	}
}

179 
	$°r·imë
 (*
d°
, 
size_t
 
d°Àn
, c⁄° *
tfmt
, 
time_t
 
t
)

181 #i‡
HAVE_LOCALTIME_R


182 
tm
Åm;

184 
tm
 *
tm_±r
;

185 
n
;

187 i‡((
d°
 =
NULL
Ë|| (
d°Àn
 =0Ë|| (
tfmt
 == NULL)) {

188 
î∫o
 = 
EINVAL
;

191 i‡(
t
 == 0) {

192 i‡(
	`time
 (&
t
Ë=((
time_t
) -1)) {

196 #i‡
HAVE_LOCALTIME_R


197 
tm_±r
 = 
	`loˇ…ime_r
 (&
t
, &
tm
);

199 
tm_±r
 = 
	`loˇ…ime
 (&
t
);

201 i‡(
tm_±r
 =
NULL
) {

204 
n
 = 
	`°r·ime
 (
d°
, 
d°Àn
, 
tfmt
, 
tm_±r
);

205 i‡((
n
 <0Ë|| (¿>
d°Àn
)) {

209  (
n
);

210 
	}
}

214 
	$membu∫
 (*
v
, 
c
, 
size_t
 
n
)

227 vﬁ©ûê*
p
 = 
v
;

229 
n
--) {

230 *
p
++ = 
c
;

232  (
v
);

233 
	}
}

	@src/libcommon/str.h

29 #i‚de‡
STR_H


30 
	#STR_H


	)

33 #i‡
HAVE_CONFIG_H


34 
	~"c⁄fig.h
"

37 
	~<time.h
>

38 
	~<sys/ty≥s.h
>

41 * 
°rdupf
 (c⁄° *
fmt
, ...);

48 
°rˇtf
 (*
d°
, 
size_t
 
size
, c⁄° *
fmt
, ...);

58 
°rbö2hex
 (*
d°
, 
size_t
 
d°Àn
, c⁄° *
§c
, size_à
§˛í
);

67 
°rhex2bö
 (*
d°
, 
size_t
 
d°Àn
, c⁄° *
§c
, size_à
§˛í
);

77 
°r·imë
 (*
d°
, 
size_t
 
d°Àn
, c⁄° *
tfmt
, 
time_t
 
t
);

88 * 
membu∫
 (*
v
, 
c
, 
size_t
 
n
);

	@src/libcommon/version.c

29 #i‡
HAVE_CONFIG_H


30 
	~"c⁄fig.h
"

33 
	~<°dio.h
>

34 
	~"vîsi⁄.h
"

38 
	$di•œy_vîsi⁄
 ()

40 
	`¥ötf
 ("%s", 
META_ALIAS
);

41 #ifde‡
META_DATE


42 
	`¥ötf
 (" (%s)", 
META_DATE
);

44 
	`¥ötf
 ("\n");

46 
	}
}

	@src/libcommon/version.h

29 #i‚de‡
MUNGE_VERSION_H


30 
	#MUNGE_VERSION_H


	)

33 
di•œy_vîsi⁄
 ();

	@src/libmissing/getopt.c

26 #i‚de‡
_NO_PROTO


27 
	#_NO_PROTO


	)

30 #ifde‡
HAVE_CONFIG_H


31 
	~<c⁄fig.h
>

34 #i‡!
deföed
 
__STDC__
 || !__STDC__

38 c⁄°

	)

42 
	~<°dio.h
>

52 
	#GETOPT_INTERFACE_VERSION
 2

	)

53 #i‡!
deföed
 
_LIBC
 && deföed 
__GLIBC__
 && __GLIBC__ >= 2

54 
	~<gnu-vîsi⁄s.h
>

55 #i‡
_GNU_GETOPT_INTERFACE_VERSION
 =
GETOPT_INTERFACE_VERSION


56 
	#ELIDE_CODE


	)

60 #i‚de‡
ELIDE_CODE


65 #ifdef 
__GNU_LIBRARY__


68 
	~<°dlib.h
>

69 
	~<uni°d.h
>

72 #ifde‡
VMS


73 
	~<unixlib.h
>

74 #i‡
HAVE_STRING_H
 - 0

75 
	~<°rög.h
>

79 #i‚de‡
_


81 #i‡(
HAVE_LIBINTL_H
 && 
ENABLE_NLS
Ë|| 
deföed
 
_LIBC


82 
	~<liböé.h
>

83 #i‚de‡
_


84 
	#_
(
msgid
Ë
	`gëãxt
 (msgid)

	)

87 
	#_
(
msgid
Ë(msgid)

	)

89 #i‡
deföed
 
_LIBC
 && deföed 
USE_IN_LIBIO


90 
	~<wch¨.h
>

94 #i‚de‡
©åibuã_hiddí


95 
	#©åibuã_hiddí


	)

112 
	~"gë›t.h
"

120 *
	g›èrg
;

135 
	g›töd
 = 1;

141 
__gë›t_öôülized
 
	g©åibuã_hiddí
;

150 *
	g√xtch¨
;

155 
	g›ãº
 = 1;

161 
	g›t›t
 = '?';

194 
	mREQUIRE_ORDER
, 
	mPERMUTE
, 
	mRETURN_IN_ORDER


195 } 
	g‹dîög
;

198 *
	gposixly_c‹ª˘
;

200 #ifdef 
__GNU_LIBRARY__


205 
	~<°rög.h
>

206 
	#my_ödex
 
°rchr


	)

209 #i‡
HAVE_STRING_H


210 
	~<°rög.h
>

212 
	~<°rögs.h
>

218 #i‚de‡
gëív


219 *
gëív
 ();

223 
	$my_ödex
 (
°r
, 
chr
)

224 c⁄° *
°r
;

225 
chr
;

227 *
°r
)

229 i‡(*
°r
 =
chr
)

230  (*Ë
°r
;

231 
°r
++;

234 
	}
}

238 #ifde‡
__GNUC__


241 #i‡(!
deföed
 
__STDC__
 || !__STDC__Ë&& !deföed 
°æí


244 
°æí
 (const *);

256 
	gfú°_n⁄›t
;

257 
	gœ°_n⁄›t
;

259 #ifde‡
_LIBC


263 
__libc_¨gc
;

264 **
__libc_¨gv
;

269 #ifde‡
USE_NONOPTION_FLAGS


271 *
__gë›t_n⁄›ti⁄_Êags
;

273 
	gn⁄›ti⁄_Êags_max_Àn
;

274 
	gn⁄›ti⁄_Êags_Àn
;

277 #ifde‡
USE_NONOPTION_FLAGS


278 
	#SWAP_FLAGS
(
ch1
, 
ch2
) \

279 i‡(
n⁄›ti⁄_Êags_Àn
 > 0) \

281 
__tmp
 = 
__gë›t_n⁄›ti⁄_Êags
[
ch1
]; \

282 
__gë›t_n⁄›ti⁄_Êags
[
ch1
] = __gë›t_n⁄›ti⁄_Êags[
ch2
]; \

283 
__gë›t_n⁄›ti⁄_Êags
[
ch2
] = 
__tmp
; \

284 }

	)

286 
	#SWAP_FLAGS
(
ch1
, 
ch2
)

	)

289 
	#SWAP_FLAGS
(
ch1
, 
ch2
)

	)

301 #i‡
deföed
 
__STDC__
 && __STDC__

302 
exch™ge
 (**);

306 
	$exch™ge
 (
¨gv
)

307 **
¨gv
;

309 
bŸtom
 = 
fú°_n⁄›t
;

310 
middÀ
 = 
œ°_n⁄›t
;

311 
t›
 = 
›töd
;

312 *
ãm
;

319 #i‡
deföed
 
_LIBC
 && deföed 
USE_NONOPTION_FLAGS


323 i‡(
n⁄›ti⁄_Êags_Àn
 > 0 && 
t›
 >
n⁄›ti⁄_Êags_max_Àn
)

327 *
√w_°r
 = 
	`mÆloc
 (
t›
 + 1);

328 i‡(
√w_°r
 =
NULL
)

329 
n⁄›ti⁄_Êags_Àn
 = 
n⁄›ti⁄_Êags_max_Àn
 = 0;

332 
	`mem£t
 (
	`__memp˝y
 (
√w_°r
, 
__gë›t_n⁄›ti⁄_Êags
,

333 
n⁄›ti⁄_Êags_max_Àn
),

334 '\0', 
t›
 + 1 - 
n⁄›ti⁄_Êags_max_Àn
);

335 
n⁄›ti⁄_Êags_max_Àn
 = 
t›
 + 1;

336 
__gë›t_n⁄›ti⁄_Êags
 = 
√w_°r
;

341 
t›
 > 
middÀ
 && middÀ > 
bŸtom
)

343 i‡(
t›
 - 
middÀ
 > middÀ - 
bŸtom
)

346 
Àn
 = 
middÀ
 - 
bŸtom
;

347 
i
;

350 
i
 = 0; i < 
Àn
; i++)

352 
ãm
 = 
¨gv
[
bŸtom
 + 
i
];

353 
¨gv
[
bŸtom
 + 
i
] =árgv[
t›
 - (
middÀ
 - bottom) + i];

354 
¨gv
[
t›
 - (
middÀ
 - 
bŸtom
Ë+ 
i
] = 
ãm
;

355 
	`SWAP_FLAGS
 (
bŸtom
 + 
i
, 
t›
 - (
middÀ
 - bottom) + i);

358 
t›
 -
Àn
;

363 
Àn
 = 
t›
 - 
middÀ
;

364 
i
;

367 
i
 = 0; i < 
Àn
; i++)

369 
ãm
 = 
¨gv
[
bŸtom
 + 
i
];

370 
¨gv
[
bŸtom
 + 
i
] =árgv[
middÀ
 + i];

371 
¨gv
[
middÀ
 + 
i
] = 
ãm
;

372 
	`SWAP_FLAGS
 (
bŸtom
 + 
i
, 
middÀ
 + i);

375 
bŸtom
 +
Àn
;

381 
fú°_n⁄›t
 +(
›töd
 - 
œ°_n⁄›t
);

382 
œ°_n⁄›t
 = 
›töd
;

383 
	}
}

387 #i‡
deföed
 
__STDC__
 && __STDC__

388 c⁄° *
_gë›t_öôülize
 (, *const *, const *);

391 
	$_gë›t_öôülize
 (
¨gc
, 
¨gv
, 
›t°rög
)

392 
¨gc
;

393 *c⁄° *
¨gv
;

394 c⁄° *
›t°rög
;

400 
fú°_n⁄›t
 = 
œ°_n⁄›t
 = 
›töd
;

402 
√xtch¨
 = 
NULL
;

404 
posixly_c‹ª˘
 = 
	`gëív
 ("POSIXLY_CORRECT");

408 i‡(
›t°rög
[0] == '-')

410 
‹dîög
 = 
RETURN_IN_ORDER
;

411 ++
›t°rög
;

413 i‡(
›t°rög
[0] == '+')

415 
‹dîög
 = 
REQUIRE_ORDER
;

416 ++
›t°rög
;

418 i‡(
posixly_c‹ª˘
 !
NULL
)

419 
‹dîög
 = 
REQUIRE_ORDER
;

421 
‹dîög
 = 
PERMUTE
;

423 #i‡
deföed
 
_LIBC
 && deföed 
USE_NONOPTION_FLAGS


424 i‡(
posixly_c‹ª˘
 =
NULL


425 && 
¨gc
 =
__libc_¨gc
 && 
¨gv
 =
__libc_¨gv
)

427 i‡(
n⁄›ti⁄_Êags_max_Àn
 == 0)

429 i‡(
__gë›t_n⁄›ti⁄_Êags
 =
NULL


430 || 
__gë›t_n⁄›ti⁄_Êags
[0] == '\0')

431 
n⁄›ti⁄_Êags_max_Àn
 = -1;

434 c⁄° *
‹ig_°r
 = 
__gë›t_n⁄›ti⁄_Êags
;

435 
Àn
 = 
n⁄›ti⁄_Êags_max_Àn
 = 
	`°æí
 (
‹ig_°r
);

436 i‡(
n⁄›ti⁄_Êags_max_Àn
 < 
¨gc
)

437 
n⁄›ti⁄_Êags_max_Àn
 = 
¨gc
;

438 
__gë›t_n⁄›ti⁄_Êags
 =

439 (*Ë
	`mÆloc
 (
n⁄›ti⁄_Êags_max_Àn
);

440 i‡(
__gë›t_n⁄›ti⁄_Êags
 =
NULL
)

441 
n⁄›ti⁄_Êags_max_Àn
 = -1;

443 
	`mem£t
 (
	`__memp˝y
 (
__gë›t_n⁄›ti⁄_Êags
, 
‹ig_°r
, 
Àn
),

444 '\0', 
n⁄›ti⁄_Êags_max_Àn
 - 
Àn
);

447 
n⁄›ti⁄_Êags_Àn
 = 
n⁄›ti⁄_Êags_max_Àn
;

450 
n⁄›ti⁄_Êags_Àn
 = 0;

453  
›t°rög
;

454 
	}
}

513 
	$_gë›t_öã∫Æ
 (
¨gc
, 
¨gv
, 
›t°rög
, 
l⁄g›ts
, 
l⁄göd
, 
l⁄g_⁄ly
)

514 
¨gc
;

515 *c⁄° *
¨gv
;

516 c⁄° *
›t°rög
;

517 c⁄° 
›ti⁄
 *
l⁄g›ts
;

518 *
l⁄göd
;

519 
l⁄g_⁄ly
;

521 
¥öt_îr‹s
 = 
›ãº
;

522 i‡(
›t°rög
[0] == ':')

523 
¥öt_îr‹s
 = 0;

525 i‡(
¨gc
 < 1)

528 
›èrg
 = 
NULL
;

530 i‡(
›töd
 =0 || !
__gë›t_öôülized
)

532 i‡(
›töd
 == 0)

533 
›töd
 = 1;

534 
›t°rög
 = 
	`_gë›t_öôülize
 (
¨gc
, 
¨gv
, optstring);

535 
__gë›t_öôülized
 = 1;

542 #i‡
deföed
 
_LIBC
 && deföed 
USE_NONOPTION_FLAGS


543 
	#NONOPTION_P
 (
¨gv
[
›töd
][0] != '-' ||árgv[optind][1] == '\0' \

544 || (
›töd
 < 
n⁄›ti⁄_Êags_Àn
 \

545 && 
__gë›t_n⁄›ti⁄_Êags
[
›töd
] ='1'))

	)

547 
	#NONOPTION_P
 (
¨gv
[
›töd
][0] !'-' ||árgv[›töd][1] ='\0')

	)

550 i‡(
√xtch¨
 =
NULL
 || *nextchar == '\0')

556 i‡(
œ°_n⁄›t
 > 
›töd
)

557 
œ°_n⁄›t
 = 
›töd
;

558 i‡(
fú°_n⁄›t
 > 
›töd
)

559 
fú°_n⁄›t
 = 
›töd
;

561 i‡(
‹dîög
 =
PERMUTE
)

566 i‡(
fú°_n⁄›t
 !
œ°_n⁄›t
 &&Üa°_n⁄›à!
›töd
)

567 
	`exch™ge
 ((**Ë
¨gv
);

568 i‡(
œ°_n⁄›t
 !
›töd
)

569 
fú°_n⁄›t
 = 
›töd
;

574 
›töd
 < 
¨gc
 && 
NONOPTION_P
)

575 
›töd
++;

576 
œ°_n⁄›t
 = 
›töd
;

584 i‡(
›töd
 !
¨gc
 && !
	`°rcmp
 (
¨gv
[optind], "--"))

586 
›töd
++;

588 i‡(
fú°_n⁄›t
 !
œ°_n⁄›t
 &&Üa°_n⁄›à!
›töd
)

589 
	`exch™ge
 ((**Ë
¨gv
);

590 i‡(
fú°_n⁄›t
 =
œ°_n⁄›t
)

591 
fú°_n⁄›t
 = 
›töd
;

592 
œ°_n⁄›t
 = 
¨gc
;

594 
›töd
 = 
¨gc
;

600 i‡(
›töd
 =
¨gc
)

604 i‡(
fú°_n⁄›t
 !
œ°_n⁄›t
)

605 
›töd
 = 
fú°_n⁄›t
;

612 i‡(
NONOPTION_P
)

614 i‡(
‹dîög
 =
REQUIRE_ORDER
)

616 
›èrg
 = 
¨gv
[
›töd
++];

623 
√xtch¨
 = (
¨gv
[
›töd
] + 1

624 + (
l⁄g›ts
 !
NULL
 && 
¨gv
[
›töd
][1] == '-'));

642 i‡(
l⁄g›ts
 !
NULL


643 && (
¨gv
[
›töd
][1] == '-'

644 || (
l⁄g_⁄ly
 && (
¨gv
[
›töd
][2] || !
	`my_ödex
 (
›t°rög
,árgv[optind][1])))))

646 *
«mìnd
;

647 c⁄° 
›ti⁄
 *
p
;

648 c⁄° 
›ti⁄
 *
pfound
 = 
NULL
;

649 
exa˘
 = 0;

650 
ambig
 = 0;

651 
ödfound
 = -1;

652 
›ti⁄_ödex
;

654 
«mìnd
 = 
√xtch¨
; *nameend && *nameend != '=';Çameend++)

659 
p
 = 
l⁄g›ts
, 
›ti⁄_ödex
 = 0;Ö->
«me
;Ö++, option_index++)

660 i‡(!
	`°∫cmp
 (
p
->
«me
, 
√xtch¨
, 
«mìnd
 -Çextchar))

662 i‡((Ë(
«mìnd
 - 
√xtch¨
)

663 =(Ë
	`°æí
 (
p
->
«me
))

666 
pfound
 = 
p
;

667 
ödfound
 = 
›ti⁄_ödex
;

668 
exa˘
 = 1;

671 i‡(
pfound
 =
NULL
)

674 
pfound
 = 
p
;

675 
ödfound
 = 
›ti⁄_ödex
;

677 i‡(
l⁄g_⁄ly


678 || 
pfound
->
has_¨g
 !
p
->has_arg

679 || 
pfound
->
Êag
 !
p
->flag

680 || 
pfound
->
vÆ
 !
p
->val)

682 
ambig
 = 1;

685 i‡(
ambig
 && !
exa˘
)

687 i‡(
¥öt_îr‹s
)

689 #i‡
deföed
 
_LIBC
 && deföed 
USE_IN_LIBIO


690 *
buf
;

692 i‡(
	`__a•rötf
 (&
buf
, 
	`_
("%s: option `%s' isámbiguous\n"),

693 
¨gv
[0],árgv[
›töd
]) >= 0)

696 i‡(
	`_IO_fwide
 (
°dîr
, 0) > 0)

697 
	`__fw¥ötf
 (
°dîr
, 
L
"%s", 
buf
);

699 
	`Âuts
 (
buf
, 
°dîr
);

701 
	`‰ì
 (
buf
);

704 
	`Ârötf
 (
°dîr
, 
	`_
("%s: option `%s' isámbiguous\n"),

705 
¨gv
[0],árgv[
›töd
]);

708 
√xtch¨
 +
	`°æí
 (nextchar);

709 
›töd
++;

710 
›t›t
 = 0;

714 i‡(
pfound
 !
NULL
)

716 
›ti⁄_ödex
 = 
ödfound
;

717 
›töd
++;

718 i‡(*
«mìnd
)

722 i‡(
pfound
->
has_¨g
)

723 
›èrg
 = 
«mìnd
 + 1;

726 i‡(
¥öt_îr‹s
)

728 #i‡
deföed
 
_LIBC
 && deföed 
USE_IN_LIBIO


729 *
buf
;

730 
n
;

733 i‡(
¨gv
[
›töd
 - 1][1] == '-')

736 #i‡
deföed
 
_LIBC
 && deföed 
USE_IN_LIBIO


737 
n
 = 
	`__a•rötf
 (&
buf
, 
	`_
("\
%s: option `--%s' doesn'tállowánárgument\n"),

739 
¨gv
[0], 
pfound
->
«me
);

741 
	`Ârötf
 (
°dîr
, 
	`_
("\
%s: option `--%s' doesn'tállowánárgument\n"),

743 
¨gv
[0], 
pfound
->
«me
);

749 #i‡
deföed
 
_LIBC
 && deföed 
USE_IN_LIBIO


750 
n
 = 
	`__a•rötf
 (&
buf
, 
	`_
("\
%s: option `%c%s' doesn'tállowánárgument\n"),

752 
¨gv
[0],árgv[
›töd
 - 1][0],

753 
pfound
->
«me
);

755 
	`Ârötf
 (
°dîr
, 
	`_
("\
%s: option `%c%s' doesn'tállowánárgument\n"),

757 
¨gv
[0],árgv[
›töd
 - 1][0], 
pfound
->
«me
);

761 #i‡
deföed
 
_LIBC
 && deföed 
USE_IN_LIBIO


762 i‡(
n
 >= 0)

764 i‡(
	`_IO_fwide
 (
°dîr
, 0) > 0)

765 
	`__fw¥ötf
 (
°dîr
, 
L
"%s", 
buf
);

767 
	`Âuts
 (
buf
, 
°dîr
);

769 
	`‰ì
 (
buf
);

774 
√xtch¨
 +
	`°æí
 (nextchar);

776 
›t›t
 = 
pfound
->
vÆ
;

780 i‡(
pfound
->
has_¨g
 == 1)

782 i‡(
›töd
 < 
¨gc
)

783 
›èrg
 = 
¨gv
[
›töd
++];

786 i‡(
¥öt_îr‹s
)

788 #i‡
deföed
 
_LIBC
 && deföed 
USE_IN_LIBIO


789 *
buf
;

791 i‡(
	`__a•rötf
 (&
buf
, 
	`_
("\
%s: option `%s'Ñequiresánárgument\n"),

793 
¨gv
[0],árgv[
›töd
 - 1]) >= 0)

795 i‡(
	`_IO_fwide
 (
°dîr
, 0) > 0)

796 
	`__fw¥ötf
 (
°dîr
, 
L
"%s", 
buf
);

798 
	`Âuts
 (
buf
, 
°dîr
);

800 
	`‰ì
 (
buf
);

803 
	`Ârötf
 (
°dîr
,

804 
	`_
("%s: option `%s'Ñequiresánárgument\n"),

805 
¨gv
[0],árgv[
›töd
 - 1]);

808 
√xtch¨
 +
	`°æí
 (nextchar);

809 
›t›t
 = 
pfound
->
vÆ
;

810  
›t°rög
[0] == ':' ? ':' : '?';

813 
√xtch¨
 +
	`°æí
 (nextchar);

814 i‡(
l⁄göd
 !
NULL
)

815 *
l⁄göd
 = 
›ti⁄_ödex
;

816 i‡(
pfound
->
Êag
)

818 *(
pfound
->
Êag
Ëpfound->
vÆ
;

821  
pfound
->
vÆ
;

828 i‡(!
l⁄g_⁄ly
 || 
¨gv
[
›töd
][1] == '-'

829 || 
	`my_ödex
 (
›t°rög
, *
√xtch¨
Ë=
NULL
)

831 i‡(
¥öt_îr‹s
)

833 #i‡
deföed
 
_LIBC
 && deföed 
USE_IN_LIBIO


834 *
buf
;

835 
n
;

838 i‡(
¨gv
[
›töd
][1] == '-')

841 #i‡
deföed
 
_LIBC
 && deföed 
USE_IN_LIBIO


842 
n
 = 
	`__a•rötf
 (&
buf
, 
	`_
("%s: unrecognized option `--%s'\n"),

843 
¨gv
[0], 
√xtch¨
);

845 
	`Ârötf
 (
°dîr
, 
	`_
("%s: unrecognized option `--%s'\n"),

846 
¨gv
[0], 
√xtch¨
);

852 #i‡
deföed
 
_LIBC
 && deföed 
USE_IN_LIBIO


853 
n
 = 
	`__a•rötf
 (&
buf
, 
	`_
("%s: unrecognized option `%c%s'\n"),

854 
¨gv
[0],árgv[
›töd
][0], 
√xtch¨
);

856 
	`Ârötf
 (
°dîr
, 
	`_
("%s: unrecognized option `%c%s'\n"),

857 
¨gv
[0],árgv[
›töd
][0], 
√xtch¨
);

861 #i‡
deföed
 
_LIBC
 && deföed 
USE_IN_LIBIO


862 i‡(
n
 >= 0)

864 i‡(
	`_IO_fwide
 (
°dîr
, 0) > 0)

865 
	`__fw¥ötf
 (
°dîr
, 
L
"%s", 
buf
);

867 
	`Âuts
 (
buf
, 
°dîr
);

869 
	`‰ì
 (
buf
);

873 
√xtch¨
 = (*) "";

874 
›töd
++;

875 
›t›t
 = 0;

883 
c
 = *
√xtch¨
++;

884 *
ãmp
 = 
	`my_ödex
 (
›t°rög
, 
c
);

887 i‡(*
√xtch¨
 == '\0')

888 ++
›töd
;

890 i‡(
ãmp
 =
NULL
 || 
c
 == ':')

892 i‡(
¥öt_îr‹s
)

894 #i‡
deföed
 
_LIBC
 && deföed 
USE_IN_LIBIO


895 *
buf
;

896 
n
;

899 i‡(
posixly_c‹ª˘
)

902 #i‡
deföed
 
_LIBC
 && deföed 
USE_IN_LIBIO


903 
n
 = 
	`__a•rötf
 (&
buf
, 
	`_
("%s: illegal option -- %c\n"),

904 
¨gv
[0], 
c
);

906 
	`Ârötf
 (
°dîr
, 
	`_
("%s: iŒegÆ o±i⁄ -- %c\n"), 
¨gv
[0], 
c
);

911 #i‡
deföed
 
_LIBC
 && deföed 
USE_IN_LIBIO


912 
n
 = 
	`__a•rötf
 (&
buf
, 
	`_
("%s: invalid option -- %c\n"),

913 
¨gv
[0], 
c
);

915 
	`Ârötf
 (
°dîr
, 
	`_
("%s: invÆid o±i⁄ -- %c\n"), 
¨gv
[0], 
c
);

919 #i‡
deföed
 
_LIBC
 && deföed 
USE_IN_LIBIO


920 i‡(
n
 >= 0)

922 i‡(
	`_IO_fwide
 (
°dîr
, 0) > 0)

923 
	`__fw¥ötf
 (
°dîr
, 
L
"%s", 
buf
);

925 
	`Âuts
 (
buf
, 
°dîr
);

927 
	`‰ì
 (
buf
);

931 
›t›t
 = 
c
;

935 i‡(
ãmp
[0] == 'W' &&Åemp[1] == ';')

937 *
«mìnd
;

938 c⁄° 
›ti⁄
 *
p
;

939 c⁄° 
›ti⁄
 *
pfound
 = 
NULL
;

940 
exa˘
 = 0;

941 
ambig
 = 0;

942 
ödfound
 = 0;

943 
›ti⁄_ödex
;

946 i‡(*
√xtch¨
 != '\0')

948 
›èrg
 = 
√xtch¨
;

951 
›töd
++;

953 i‡(
›töd
 =
¨gc
)

955 i‡(
¥öt_îr‹s
)

958 #i‡
deföed
 
_LIBC
 && deföed 
USE_IN_LIBIO


959 *
buf
;

961 i‡(
	`__a•rötf
 (&
buf
,

962 
	`_
("%s: optionÑequiresánárgument -- %c\n"),

963 
¨gv
[0], 
c
) >= 0)

965 i‡(
	`_IO_fwide
 (
°dîr
, 0) > 0)

966 
	`__fw¥ötf
 (
°dîr
, 
L
"%s", 
buf
);

968 
	`Âuts
 (
buf
, 
°dîr
);

970 
	`‰ì
 (
buf
);

973 
	`Ârötf
 (
°dîr
, 
	`_
("%s: optionÑequiresánárgument -- %c\n"),

974 
¨gv
[0], 
c
);

977 
›t›t
 = 
c
;

978 i‡(
›t°rög
[0] == ':')

979 
c
 = ':';

981 
c
 = '?';

982  
c
;

987 
›èrg
 = 
¨gv
[
›töd
++];

992 
√xtch¨
 = 
«mìnd
 = 
›èrg
; *nameend && *nameend != '=';Çameend++)

997 
p
 = 
l⁄g›ts
, 
›ti⁄_ödex
 = 0;Ö->
«me
;Ö++, option_index++)

998 i‡(!
	`°∫cmp
 (
p
->
«me
, 
√xtch¨
, 
«mìnd
 -Çextchar))

1000 i‡((Ë(
«mìnd
 - 
√xtch¨
Ë=
	`°æí
 (
p
->
«me
))

1003 
pfound
 = 
p
;

1004 
ödfound
 = 
›ti⁄_ödex
;

1005 
exa˘
 = 1;

1008 i‡(
pfound
 =
NULL
)

1011 
pfound
 = 
p
;

1012 
ödfound
 = 
›ti⁄_ödex
;

1016 
ambig
 = 1;

1018 i‡(
ambig
 && !
exa˘
)

1020 i‡(
¥öt_îr‹s
)

1022 #i‡
deföed
 
_LIBC
 && deföed 
USE_IN_LIBIO


1023 *
buf
;

1025 i‡(
	`__a•rötf
 (&
buf
, 
	`_
("%s: option `-W %s' isámbiguous\n"),

1026 
¨gv
[0],árgv[
›töd
]) >= 0)

1028 i‡(
	`_IO_fwide
 (
°dîr
, 0) > 0)

1029 
	`__fw¥ötf
 (
°dîr
, 
L
"%s", 
buf
);

1031 
	`Âuts
 (
buf
, 
°dîr
);

1033 
	`‰ì
 (
buf
);

1036 
	`Ârötf
 (
°dîr
, 
	`_
("%s: option `-W %s' isámbiguous\n"),

1037 
¨gv
[0],árgv[
›töd
]);

1040 
√xtch¨
 +
	`°æí
 (nextchar);

1041 
›töd
++;

1044 i‡(
pfound
 !
NULL
)

1046 
›ti⁄_ödex
 = 
ödfound
;

1047 i‡(*
«mìnd
)

1051 i‡(
pfound
->
has_¨g
)

1052 
›èrg
 = 
«mìnd
 + 1;

1055 i‡(
¥öt_îr‹s
)

1057 #i‡
deföed
 
_LIBC
 && deföed 
USE_IN_LIBIO


1058 *
buf
;

1060 i‡(
	`__a•rötf
 (&
buf
, 
	`_
("\
%s: option `-W %s' doesn'tállowánárgument\n"),

1062 
¨gv
[0], 
pfound
->
«me
) >= 0)

1064 i‡(
	`_IO_fwide
 (
°dîr
, 0) > 0)

1065 
	`__fw¥ötf
 (
°dîr
, 
L
"%s", 
buf
);

1067 
	`Âuts
 (
buf
, 
°dîr
);

1069 
	`‰ì
 (
buf
);

1072 
	`Ârötf
 (
°dîr
, 
	`_
("\
%s: option `-W %s' doesn'tállowánárgument\n"),

1074 
¨gv
[0], 
pfound
->
«me
);

1078 
√xtch¨
 +
	`°æí
 (nextchar);

1082 i‡(
pfound
->
has_¨g
 == 1)

1084 i‡(
›töd
 < 
¨gc
)

1085 
›èrg
 = 
¨gv
[
›töd
++];

1088 i‡(
¥öt_îr‹s
)

1090 #i‡
deföed
 
_LIBC
 && deföed 
USE_IN_LIBIO


1091 *
buf
;

1093 i‡(
	`__a•rötf
 (&
buf
, 
	`_
("\
%s: option `%s'Ñequiresánárgument\n"),

1095 
¨gv
[0],árgv[
›töd
 - 1]) >= 0)

1097 i‡(
	`_IO_fwide
 (
°dîr
, 0) > 0)

1098 
	`__fw¥ötf
 (
°dîr
, 
L
"%s", 
buf
);

1100 
	`Âuts
 (
buf
, 
°dîr
);

1102 
	`‰ì
 (
buf
);

1105 
	`Ârötf
 (
°dîr
,

1106 
	`_
("%s: option `%s'Ñequiresánárgument\n"),

1107 
¨gv
[0],árgv[
›töd
 - 1]);

1110 
√xtch¨
 +
	`°æí
 (nextchar);

1111  
›t°rög
[0] == ':' ? ':' : '?';

1114 
√xtch¨
 +
	`°æí
 (nextchar);

1115 i‡(
l⁄göd
 !
NULL
)

1116 *
l⁄göd
 = 
›ti⁄_ödex
;

1117 i‡(
pfound
->
Êag
)

1119 *(
pfound
->
Êag
Ëpfound->
vÆ
;

1122  
pfound
->
vÆ
;

1124 
√xtch¨
 = 
NULL
;

1127 i‡(
ãmp
[1] == ':')

1129 i‡(
ãmp
[2] == ':')

1132 i‡(*
√xtch¨
 != '\0')

1134 
›èrg
 = 
√xtch¨
;

1135 
›töd
++;

1138 
›èrg
 = 
NULL
;

1139 
√xtch¨
 = 
NULL
;

1144 i‡(*
√xtch¨
 != '\0')

1146 
›èrg
 = 
√xtch¨
;

1149 
›töd
++;

1151 i‡(
›töd
 =
¨gc
)

1153 i‡(
¥öt_îr‹s
)

1156 #i‡
deföed
 
_LIBC
 && deföed 
USE_IN_LIBIO


1157 *
buf
;

1159 i‡(
	`__a•rötf
 (&
buf
, 
	`_
("\
%s: optionÑequiresánárgument -- %c\n"),

1161 
¨gv
[0], 
c
) >= 0)

1163 i‡(
	`_IO_fwide
 (
°dîr
, 0) > 0)

1164 
	`__fw¥ötf
 (
°dîr
, 
L
"%s", 
buf
);

1166 
	`Âuts
 (
buf
, 
°dîr
);

1168 
	`‰ì
 (
buf
);

1171 
	`Ârötf
 (
°dîr
,

1172 
	`_
("%s: optionÑequiresánárgument -- %c\n"),

1173 
¨gv
[0], 
c
);

1176 
›t›t
 = 
c
;

1177 i‡(
›t°rög
[0] == ':')

1178 
c
 = ':';

1180 
c
 = '?';

1185 
›èrg
 = 
¨gv
[
›töd
++];

1186 
√xtch¨
 = 
NULL
;

1189  
c
;

1191 
	}
}

1194 
	$gë›t
 (
¨gc
, 
¨gv
, 
›t°rög
)

1195 
¨gc
;

1196 *c⁄° *
¨gv
;

1197 c⁄° *
›t°rög
;

1199  
	`_gë›t_öã∫Æ
 (
¨gc
, 
¨gv
, 
›t°rög
,

1200 (c⁄° 
›ti⁄
 *) 0,

1203 
	}
}

1207 #ifde‡
TEST


1213 
	$maö
 (
¨gc
, 
¨gv
)

1214 
¨gc
;

1215 **
¨gv
;

1217 
c
;

1218 
digô_›töd
 = 0;

1222 
this_›ti⁄_›töd
 = 
›töd
 ? optind : 1;

1224 
c
 = 
	`gë›t
 (
¨gc
, 
¨gv
, "abc:d:0123456789");

1225 i‡(
c
 == -1)

1228 
c
)

1240 i‡(
digô_›töd
 !0 && digô_›töd !
this_›ti⁄_›töd
)

1241 
	`¥ötf
 ("digits occur inÅwo differentárgv-elements.\n");

1242 
digô_›töd
 = 
this_›ti⁄_›töd
;

1243 
	`¥ötf
 ("›ti⁄ %c\n", 
c
);

1247 
	`¥ötf
 ("optioná\n");

1251 
	`¥ötf
 ("option b\n");

1255 
	`¥ötf
 ("›ti⁄ c wôh vÆuê`%s'\n", 
›èrg
);

1262 
	`¥ötf
 ("?? gë›àªtu∫ed ch¨a˘î codê0%ÿ??\n", 
c
);

1266 i‡(
›töd
 < 
¨gc
)

1268 
	`¥ötf
 ("non-option ARGV-elements: ");

1269 
›töd
 < 
¨gc
)

1270 
	`¥ötf
 ("%†", 
¨gv
[
›töd
++]);

1271 
	`¥ötf
 ("\n");

1274 
	`exô
 (0);

1275 
	}
}

	@src/libmissing/getopt.h

20 #i‚de‡
_GETOPT_H


22 #i‚de‡
__√ed_gë›t


23 
	#_GETOPT_H
 1

	)

33 #i‡!
deföed
 
__GNU_LIBRARY__


34 
	~<˘y≥.h
>

37 #ifdef 
__˝lu•lus


47 *
›èrg
;

61 
›töd
;

66 
›ãº
;

70 
›t›t
;

72 #i‚de‡
__√ed_gë›t


94 
	s›ti⁄


96 #i‡(
deföed
 
__STDC__
 && __STDC__Ë|| deföed 
__˝lu•lus


97 c⁄° *
	g«me
;

99 *
	g«me
;

103 
	ghas_¨g
;

104 *
	gÊag
;

105 
	gvÆ
;

110 
	#no_¨gumít
 0

	)

111 
	#ªquúed_¨gumít
 1

	)

112 
	#›ti⁄Æ_¨gumít
 2

	)

140 #i‡(
deföed
 
__STDC__
 && __STDC__Ë|| deföed 
__˝lu•lus


141 #ifde‡
__GNU_LIBRARY__


145 
gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
);

147 
gë›t
 ();

150 #i‚de‡
__√ed_gë›t


151 
gë›t_l⁄g
 (
___¨gc
, *c⁄° *
___¨gv
,

152 c⁄° *
__sh‹t›ts
,

153 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
);

154 
gë›t_l⁄g_⁄ly
 (
___¨gc
, *c⁄° *
___¨gv
,

155 c⁄° *
__sh‹t›ts
,

156 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
);

159 
_gë›t_öã∫Æ
 (
___¨gc
, *c⁄° *
___¨gv
,

160 c⁄° *
__sh‹t›ts
,

161 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
,

162 
__l⁄g_⁄ly
);

165 
gë›t
 ();

166 #i‚de‡
__√ed_gë›t


167 
gë›t_l⁄g
 ();

168 
gë›t_l⁄g_⁄ly
 ();

170 
_gë›t_öã∫Æ
 ();

174 #ifdef 
__˝lu•lus


179 #unde‡
__√ed_gë›t


	@src/libmissing/getopt1.c

21 #ifde‡
HAVE_CONFIG_H


22 
	~<c⁄fig.h
>

25 #ifde‡
_LIBC


26 
	~<gë›t.h
>

28 
	~"gë›t.h
"

31 #i‡!
deföed
 
__STDC__
 || !__STDC__

35 c⁄°

	)

39 
	~<°dio.h
>

49 
	#GETOPT_INTERFACE_VERSION
 2

	)

50 #i‡!
deföed
 
_LIBC
 && deföed 
__GLIBC__
 && __GLIBC__ >= 2

51 
	~<gnu-vîsi⁄s.h
>

52 #i‡
_GNU_GETOPT_INTERFACE_VERSION
 =
GETOPT_INTERFACE_VERSION


53 
	#ELIDE_CODE


	)

57 #i‚de‡
ELIDE_CODE


62 #ifde‡
__GNU_LIBRARY__


63 
	~<°dlib.h
>

66 #i‚def 
NULL


67 
	#NULL
 0

	)

71 
	$gë›t_l⁄g
 (
¨gc
, 
¨gv
, 
›ti⁄s
, 
l⁄g_›ti⁄s
, 
›t_ödex
)

72 
¨gc
;

73 *c⁄° *
¨gv
;

74 c⁄° *
›ti⁄s
;

75 c⁄° 
›ti⁄
 *
l⁄g_›ti⁄s
;

76 *
›t_ödex
;

78  
	`_gë›t_öã∫Æ
 (
¨gc
, 
¨gv
, 
›ti⁄s
, 
l⁄g_›ti⁄s
, 
›t_ödex
, 0);

79 
	}
}

87 
	$gë›t_l⁄g_⁄ly
 (
¨gc
, 
¨gv
, 
›ti⁄s
, 
l⁄g_›ti⁄s
, 
›t_ödex
)

88 
¨gc
;

89 *c⁄° *
¨gv
;

90 c⁄° *
›ti⁄s
;

91 c⁄° 
›ti⁄
 *
l⁄g_›ti⁄s
;

92 *
›t_ödex
;

94  
	`_gë›t_öã∫Æ
 (
¨gc
, 
¨gv
, 
›ti⁄s
, 
l⁄g_›ti⁄s
, 
›t_ödex
, 1);

95 
	}
}

97 #ifde‡
_LIBC


98 
	$libc_hiddí_def
 (
gë›t_l⁄g
)

99 
	$libc_hiddí_def
 (
gë›t_l⁄g_⁄ly
)

104 #ifde‡
TEST


106 
	~<°dio.h
>

109 
	$maö
 (
¨gc
, 
¨gv
)

110 
¨gc
;

111 **
¨gv
;

113 
c
;

114 
digô_›töd
 = 0;

118 
this_›ti⁄_›töd
 = 
›töd
 ? optind : 1;

119 
›ti⁄_ödex
 = 0;

120 
›ti⁄
 
l⁄g_›ti⁄s
[] =

131 
c
 = 
	`gë›t_l⁄g
 (
¨gc
, 
¨gv
, "abc:d:0123456789",

132 
l⁄g_›ti⁄s
, &
›ti⁄_ödex
);

133 i‡(
c
 == -1)

136 
c
)

139 
	`¥ötf
 ("›ti⁄ %s", 
l⁄g_›ti⁄s
[
›ti⁄_ödex
].
«me
);

140 i‡(
›èrg
)

141 
	`¥ötf
 (" wôhárg %s", 
›èrg
);

142 
	`¥ötf
 ("\n");

155 i‡(
digô_›töd
 !0 && digô_›töd !
this_›ti⁄_›töd
)

156 
	`¥ötf
 ("digits occur inÅwo differentárgv-elements.\n");

157 
digô_›töd
 = 
this_›ti⁄_›töd
;

158 
	`¥ötf
 ("›ti⁄ %c\n", 
c
);

162 
	`¥ötf
 ("optioná\n");

166 
	`¥ötf
 ("option b\n");

170 
	`¥ötf
 ("›ti⁄ c wôh vÆuê`%s'\n", 
›èrg
);

174 
	`¥ötf
 ("›ti⁄ d wôh vÆuê`%s'\n", 
›èrg
);

181 
	`¥ötf
 ("?? gë›àªtu∫ed ch¨a˘î codê0%ÿ??\n", 
c
);

185 i‡(
›töd
 < 
¨gc
)

187 
	`¥ötf
 ("non-option ARGV-elements: ");

188 
›töd
 < 
¨gc
)

189 
	`¥ötf
 ("%†", 
¨gv
[
›töd
++]);

190 
	`¥ötf
 ("\n");

193 
	`exô
 (0);

194 
	}
}

	@src/libmissing/inet_ntop.c

29 #i‡
HAVE_CONFIG_H


30 
	~"c⁄fig.h
"

33 #i‚de‡
HAVE_INET_NTOP


35 
	~<î∫o.h
>

36 
	~<°dio.h
>

37 
	~<sys/sockë.h
>

38 
	~"öë_¡›.h
"

41 
	$öë_¡›
 (
af
, c⁄° *
§c
, *
d°
, 
sockÀn_t
 
˙t
)

43 c⁄° *
p
 = 
§c
;

44 
n
;

46 i‡(
af
 !
AF_INET
) {

47 
î∫o
 = 
EAFNOSUPPORT
;

48  (
NULL
);

50 i‡(!
§c
 || !
d°
) {

51 
î∫o
 = 
EINVAL
;

52  (
NULL
);

54 
n
 = 
	`¢¥ötf
 (
d°
, 
˙t
, "%d.%d.%d.%d", 
p
[0],Ö[1],Ö[2],Ö[3]);

55 i‡((
n
 < 0Ë|| (¿>
˙t
)) {

56 
î∫o
 = 
ENOSPC
;

57  (
NULL
);

59  (
d°
);

60 
	}
}

	@src/libmissing/inet_ntop.h

29 #i‚de‡
INET_NTOP_H


30 
	#INET_NTOP_H


	)

32 #i‡
HAVE_CONFIG_H


33 
	~"c⁄fig.h
"

36 #i‚de‡
INET_ADDRSTRLEN


37 
	#INET_ADDRSTRLEN
 16

	)

40 #i‡
HAVE_INET_NTOP


41 
	~<¨∑/öë.h
>

43 
	~<sys/sockë.h
>

44 c⁄° *
öë_¡›
 (
af
, c⁄° *
§c
, *
d°
, 
sockÀn_t
 
˙t
);

	@src/libmissing/missing.h

29 #i‚de‡
MUNGE_MISSING_H


30 
	#MUNGE_MISSING_H


	)

34 
	~"öë_¡›.h
"

35 
	~"°æˇt.h
"

36 
	~"°æ˝y.h
"

	@src/libmissing/strlcat.c

19 #i‡
deföed
(
LIBC_SCCS
Ë&& !deföed(
löt
)

20 *
	grcsid
 = "$OpenBSD: strlcat.c,v 1.11 2003/06/17 21:56:24 millert Exp $";

23 
	~<sys/ty≥s.h
>

24 
	~<°rög.h
>

33 
size_t


34 
	$°æˇt
(*
d°
, c⁄° *
§c
, 
size_t
 
siz
)

36 *
d
 = 
d°
;

37 c⁄° *
s
 = 
§c
;

38 
size_t
 
n
 = 
siz
;

39 
size_t
 
dÀn
;

42 
n
-- !0 && *
d
 != '\0')

43 
d
++;

44 
dÀn
 = 
d
 - 
d°
;

45 
n
 = 
siz
 - 
dÀn
;

47 i‡(
n
 == 0)

48 (
dÀn
 + 
	`°æí
(
s
));

49 *
s
 != '\0') {

50 i‡(
n
 != 1) {

51 *
d
++ = *
s
;

52 
n
--;

54 
s
++;

56 *
d
 = '\0';

58 (
dÀn
 + (
s
 - 
§c
));

59 
	}
}

	@src/libmissing/strlcat.h

1 #i‡
HAVE_CONFIG_H


2 
	~"c⁄fig.h
"

5 #i‡!
HAVE_STRLCAT


6 
size_t
 
°æˇt
(*
d°
, c⁄° *
§c
, size_à
siz
);

	@src/libmissing/strlcpy.c

19 #i‡
deföed
(
LIBC_SCCS
Ë&& !deföed(
löt
)

20 *
	grcsid
 = "$OpenBSD: strlcpy.c,v 1.8 2003/06/17 21:56:24 millert Exp $";

23 
	~<sys/ty≥s.h
>

24 
	~<°rög.h
>

31 
size_t


32 
	$°æ˝y
(*
d°
, c⁄° *
§c
, 
size_t
 
siz
)

34 *
d
 = 
d°
;

35 c⁄° *
s
 = 
§c
;

36 
size_t
 
n
 = 
siz
;

39 i‡(
n
 != 0 && --n != 0) {

41 i‡((*
d
++ = *
s
++) == 0)

43 } --
n
 != 0);

47 i‡(
n
 == 0) {

48 i‡(
siz
 != 0)

49 *
d
 = '\0';

50 *
s
++)

54 (
s
 - 
§c
 - 1);

55 
	}
}

	@src/libmissing/strlcpy.h

1 #i‡
HAVE_CONFIG_H


2 
	~"c⁄fig.h
"

5 #i‡!
HAVE_STRLCPY


6 
size_t
 
°æ˝y
(*
d°
, c⁄° *
§c
, size_à
siz
);

	@src/libmunge/auth_send.c

29 #i‡
HAVE_CONFIG_H


30 
	~<c⁄fig.h
>

33 
	~<munge.h
>

34 
	~"m_msg.h
"

41 #i‡!
deföed
(
AUTH_METHOD_RECVFD_MKFIFO
Ë&& !deföed(
AUTH_METHOD_RECVFD_MKNOD
)

44 
	$auth_£nd
 (
m_msg_t
 
m
)

46  (
EMUNGE_SUCCESS
);

47 
	}
}

56 #i‡
deföed
(
AUTH_METHOD_RECVFD_MKFIFO
Ë|| deföed(
AUTH_METHOD_RECVFD_MKNOD
)

58 
	~<as£π.h
>

59 
	~<î∫o.h
>

60 
	~<f˙é.h
>

61 
	~<°dio.h
>

62 
	~<°dlib.h
>

63 
	~<°rög.h
>

64 
	~<°r›ts.h
>

65 
	~<sys/io˘l.h
>

66 
	~<sys/°©.h
>

67 
	~<uni°d.h
>

68 
	~"missög.h
"

69 
	~"munge_defs.h
"

70 
	~"°r.h
"

72 
_ªcv_auth_ªq
 (
sd
, **
pùe_«me_p
, **
fûe_dú_p
);

73 
_«me_auth_fûe
 (c⁄° *
pùe_«me
, c⁄° *
fûe_dú
,

74 **
fûe_«me_p
);

77 
	$auth_£nd
 (
m_msg_t
 
m
)

79 *
pùe_«me
 = 
NULL
;

80 *
fûe_dú
 = 
NULL
;

81 *
fûe_«me
 = 
NULL
;

82 
fûe_fd
 = -1;

83 
pùe_fd
 = -1;

84 *
e°r
;

86 i‡(
	`_ªcv_auth_ªq
 (
m
->
sd
, &
pùe_«me
, &
fûe_dú
) < 0) {

87 
e°r
 = 
	`°rdup
 ("FailedÅoÑeceiveáuthÑequest");

88 
îr
;

90 
	`as£π
 (
pùe_«me
 !
NULL
);

91 i‡(
	`_«me_auth_fûe
 (
pùe_«me
, 
fûe_dú
, &
fûe_«me
) < 0) {

92 
e°r
 = 
	`°rdup
 ("FailedÅoÇameáuth file");

93 
îr
;

95 
	`as£π
 (
fûe_«me
 !
NULL
);

96 
	`u∆ök
 (
fûe_«me
);

98 i‡((
fûe_fd

	`›í
 (
fûe_«me
, 
O_RDONLY
 | 
O_CREAT
 | 
O_EXCL
, 
S_IRUSR
)) <0) {

99 
e°r
 = 
	`°rdupf
 ("FailedÅo openáuth file \"%s\": %s",

100 
fûe_«me
, 
	`°ªº‹
 (
î∫o
));

101 
îr
;

103 i‡(
	`u∆ök
 (
fûe_«me
) < 0) {

104 
e°r
 = 
	`°rdupf
 ("FailedÅoÑemoveáuth file \"%s\": %s",

105 
fûe_«me
, 
	`°ªº‹
 (
î∫o
));

106 
îr
;

108 i‡((
pùe_fd
 = 
	`›í
 (
pùe_«me
, 
O_WRONLY
)) < 0) {

109 
e°r
 = 
	`°rdupf
 ("FailedÅo openáuthÖipe \"%s\": %s",

110 
pùe_«me
, 
	`°ªº‹
 (
î∫o
));

111 
îr
;

113 i‡(
	`io˘l
 (
pùe_fd
, 
I_SENDFD
, 
fûe_fd
) < 0) {

114 
e°r
 = 
	`°rdupf
 ("FailedÅo send client identity: %s",

115 
	`°ªº‹
 (
î∫o
));

116 
îr
;

118 i‡(
	`˛o£
 (
pùe_fd
) < 0) {

119 
e°r
 = 
	`°rdupf
 ("FailedÅo closeáuthÖipe \"%s\": %s",

120 
pùe_«me
, 
	`°ªº‹
 (
î∫o
));

121 
îr
;

123 i‡(
	`˛o£
 (
fûe_fd
) < 0) {

124 
e°r
 = 
	`°rdupf
 ("FailedÅo closeáuth file \"%s\": %s",

125 
fûe_«me
, 
	`°ªº‹
 (
î∫o
));

126 
îr
;

128 
	`‰ì
 (
pùe_«me
);

129 
	`‰ì
 (
fûe_dú
);

130 
	`‰ì
 (
fûe_«me
);

133 
îr
:

134 i‡(
pùe_fd
 >= 0) {

135 (Ë
	`˛o£
 (
pùe_fd
);

137 i‡(
pùe_«me
 !
NULL
) {

138 
	`‰ì
 (
pùe_«me
);

140 i‡(
fûe_fd
 >= 0) {

141 (Ë
	`˛o£
 (
fûe_fd
);

143 i‡(
fûe_«me
 !
NULL
) {

144 (Ë
	`u∆ök
 (
fûe_«me
);

145 
	`‰ì
 (
fûe_«me
);

147 i‡(
fûe_dú
 !
NULL
) {

148 
	`‰ì
 (
fûe_dú
);

150  (
	`m_msg_£t_îr
 (
m
, 
EMUNGE_SNAFU
, 
e°r
));

151 
	}
}

154 
	$_ªcv_auth_ªq
 (
sd
, **
pùe_«me_p
, **
fûe_dú_p
)

164 
m_msg_t
 
m
;

165 
munge_îr_t
 
e
;

167 *
pùe_«me_p
 = 
NULL
;

168 *
fûe_dú_p
 = 
NULL
;

170 i‡((
e
 = 
	`m_msg_¸óã
 (&
m
)Ë!
EMUNGE_SUCCESS
) {

171 
íd
;

173 i‡((
e
 = 
	`m_msg_böd
 (
m
, 
sd
)Ë!
EMUNGE_SUCCESS
) {

174 
íd
;

176 i‡((
e
 = 
	`m_msg_ªcv
 (
m
, 
MUNGE_MSG_AUTH_FD_REQ
, 0)Ë!
EMUNGE_SUCCESS
) {

177 
íd
;

183 i‡(
m
->
îr‹_°r
 !
NULL
) {

184 
e
 = 
EMUNGE_SOCKET
;

185 
íd
;

187 *
pùe_«me_p
 = 
m
->
auth_s_°r
;

188 
m
->
auth_s_is_c›y
 = 1;

189 *
fûe_dú_p
 = 
m
->
auth_c_°r
;

190 
m
->
auth_c_is_c›y
 = 1;

192 
íd
:

193 i‡(
m
) {

194 
m
->
sd
 = -1;

195 
	`m_msg_de°roy
 (
m
);

197  (
e
 =
EMUNGE_SUCCESS
 ? 0 : -1);

198 
	}
}

201 
	$_«me_auth_fûe
 (c⁄° *
pùe_«me
, c⁄° *
fûe_dú
,

202 **
fûe_«me_p
)

221 *
p
;

222 *
q
;

223 
∫d_bö_Àn
;

224 *
∫d_bö
 = 
NULL
;

225 
∫d_asc_Àn
;

226 *
∫d_asc
 = 
NULL
;

227 
m
;

228 
i
;

229 
d°_Àn
;

230 *
d°
 = 
NULL
;

231 
n
;

233 *
fûe_«me_p
 = 
NULL
;

235 i‡(!
pùe_«me
 || !
fûe_dú
) {

236 
îr
;

238 
p
 = (∞
	`°ºchr
 (
pùe_«me
, '-')Ë?Ö + 1 : 
NULL
;

239 
q
 = 
	`°ºchr
 (
pùe_«me
, '.');

240 i‡(!
p
 || !
q
) {

241 
îr
;

243 
∫d_bö_Àn
 = (
q
 - 
p
) / 2;

244 i‡(!(
∫d_bö
 = 
	`mÆloc
 (
∫d_bö_Àn
))) {

245 
îr
;

247 
∫d_asc_Àn
 = 
∫d_bö_Àn
 + 1;

248 i‡(!(
∫d_asc
 = 
	`mÆloc
 (
∫d_asc_Àn
))) {

249 
îr
;

251 i‡(!(
	`°rhex2bö
 (
∫d_bö
, 
∫d_bö_Àn
, 
p
, 
q
 -Ö))) {

252 
îr
;

254 
m
 = 
∫d_bö_Àn
 / 2;

255 
i
 = 0; i < 
m
; i++) {

256 
∫d_bö
 [
i
] ^∫d_bö [ò+ 
m
];

258 i‡(!(
	`°rbö2hex
 (
∫d_asc
, 
∫d_asc_Àn
, 
∫d_bö
, 
m
))) {

259 
îr
;

261 
d°_Àn
 = 
	`°æí
 (
fûe_dú
)

263 + 
	`°æí
 (
∫d_asc
)

265 i‡(!(
d°
 = 
	`mÆloc
 (
d°_Àn
))) {

266 
îr
;

268 
n
 = 
	`¢¥ötf
 (
d°
, 
d°_Àn
, "%s/.munge-%s.fûe", 
fûe_dú
, 
∫d_asc
);

269 i‡((
n
 < 0Ë|| (¿>
d°_Àn
)) {

270 
îr
;

272 
	`‰ì
 (
∫d_bö
);

273 
	`‰ì
 (
∫d_asc
);

274 *
fûe_«me_p
 = 
d°
;

277 
îr
:

278 i‡(
∫d_bö
) {

279 
	`‰ì
 (
∫d_bö
);

281 i‡(
∫d_asc
) {

282 
	`‰ì
 (
∫d_asc
);

284 i‡(
d°
) {

285 
	`‰ì
 (
d°
);

288 
	}
}

	@src/libmunge/auth_send.h

29 #i‚de‡
MUNGE_AUTH_SEND_H


30 
	#MUNGE_AUTH_SEND_H


	)

32 
	~"m_msg.h
"

35 
auth_£nd
 (
m_msg_t
 
m
);

	@src/libmunge/ctx.c

29 #i‡
HAVE_CONFIG_H


30 
	~<c⁄fig.h
>

33 
	~<as£π.h
>

34 
	~<sys/ty≥s.h
>

35 
	~<√töë/ö.h
>

36 
	~<°d¨g.h
>

37 
	~<°dlib.h
>

38 
	~<°rög.h
>

39 
	~<munge.h
>

40 
	~"˘x.h
"

41 
	~"munge_defs.h
"

48 
munge_˘x_t


49 
	$munge_˘x_¸óã
 ()

51 
munge_˘x_t
 
˘x
;

53 i‡(!(
˘x
 = 
	`mÆloc
 ( (*ctx)))) {

54  (
NULL
);

56 
˘x
->
cùhî
 = 
MUNGE_CIPHER_DEFAULT
;

57 
˘x
->
mac
 = 
MUNGE_MAC_DEFAULT
;

58 
˘x
->
zù
 = 
MUNGE_ZIP_DEFAULT
;

59 
˘x
->
ªÆm_°r
 = 
NULL
;

60 
˘x
->
âl
 = 
MUNGE_TTL_DEFAULT
;

61 
˘x
->
addr
.
s_addr
 = 0;

62 
˘x
->
time0
 = 0;

63 
˘x
->
time1
 = 0;

64 
˘x
->
auth_uid
 = 
MUNGE_UID_ANY
;

65 
˘x
->
auth_gid
 = 
MUNGE_GID_ANY
;

66 
˘x
->
sockë_°r
 = 
	`°rdup
 (
MUNGE_SOCKET_NAME
);

67 
˘x
->
îr‹_num
 = 
EMUNGE_SUCCESS
;

68 
˘x
->
îr‹_°r
 = 
NULL
;

70 i‡(!
˘x
->
sockë_°r
) {

71 
	`munge_˘x_de°roy
 (
˘x
);

72  (
NULL
);

74  (
˘x
);

75 
	}
}

78 
munge_˘x_t


79 
	$munge_˘x_c›y
 (
munge_˘x_t
 
§c
)

81 
munge_˘x_t
 
d°
;

83 i‡(!
§c
) {

84  (
NULL
);

86 i‡(!(
d°
 = 
	`mÆloc
 ( (*dst)))) {

87  (
NULL
);

89 *
d°
 = *
§c
;

97 
d°
->
ªÆm_°r
 = 
NULL
;

98 
d°
->
sockë_°r
 = 
NULL
;

99 
d°
->
îr‹_°r
 = 
NULL
;

103 
d°
->
îr‹_num
 = 
EMUNGE_SUCCESS
;

107 i‡((
§c
->
ªÆm_°r
Ë&& !(
d°
->ªÆm_°∏
	`°rdup
 (src->realm_str))) {

108 
îr
;

110 i‡(!(
d°
->
sockë_°r
 = 
	`°rdup
 (
§c
->socket_str))) {

111 
îr
;

113  (
d°
);

115 
îr
:

116 
	`munge_˘x_de°roy
 (
d°
);

117  (
NULL
);

118 
	}
}

122 
	$munge_˘x_de°roy
 (
munge_˘x_t
 
˘x
)

124 i‡(!
˘x
) {

127 i‡(
˘x
->
ªÆm_°r
) {

128 
	`‰ì
 (
˘x
->
ªÆm_°r
);

130 i‡(
˘x
->
sockë_°r
) {

131 
	`‰ì
 (
˘x
->
sockë_°r
);

133 i‡(
˘x
->
îr‹_°r
) {

134 
	`‰ì
 (
˘x
->
îr‹_°r
);

136 
	`‰ì
 (
˘x
);

138 
	}
}

142 
	$munge_˘x_°ªº‹
 (
munge_˘x_t
 
˘x
)

144 i‡(!
˘x
) {

145  (
NULL
);

147 i‡(
˘x
->
îr‹_num
 =
EMUNGE_SUCCESS
) {

148  (
NULL
);

150 i‡(
˘x
->
îr‹_°r
 !
NULL
) {

151  (
˘x
->
îr‹_°r
);

153  (
	`munge_°ªº‹
 (
˘x
->
îr‹_num
));

154 
	}
}

157 
munge_îr_t


158 
	$munge_˘x_gë
 (
munge_˘x_t
 
˘x
, 
munge_›t_t
 
›t
, ...)

160 *
p2öt
;

161 **
p2°r
;

162 
ö_addr
 *
p2addr
;

163 
time_t
 *
p2time
;

164 
uid_t
 *
p2uid
;

165 
gid_t
 *
p2gid
;

166 
va_li°
 
v¨gs
;

168 i‡(!
˘x
) {

169  (
EMUNGE_BAD_ARG
);

171 
˘x
->
îr‹_num
 = 
EMUNGE_SUCCESS
;

172 i‡(
˘x
->
îr‹_°r
) {

173 
	`‰ì
 (
˘x
->
îr‹_°r
);

174 
˘x
->
îr‹_°r
 = 
NULL
;

176 
	`va_°¨t
 (
v¨gs
, 
›t
);

177 
›t
) {

178 
MUNGE_OPT_CIPHER_TYPE
:

179 
p2öt
 = 
	`va_¨g
 (
v¨gs
, *);

180 *
p2öt
 = 
˘x
->
cùhî
;

182 
MUNGE_OPT_MAC_TYPE
:

183 
p2öt
 = 
	`va_¨g
 (
v¨gs
, *);

184 *
p2öt
 = 
˘x
->
mac
;

186 
MUNGE_OPT_ZIP_TYPE
:

187 
p2öt
 = 
	`va_¨g
 (
v¨gs
, *);

188 *
p2öt
 = 
˘x
->
zù
;

190 
MUNGE_OPT_REALM
:

191 
p2°r
 = 
	`va_¨g
 (
v¨gs
, **);

192 *
p2°r
 = 
˘x
->
ªÆm_°r
;

194 
MUNGE_OPT_TTL
:

195 
p2öt
 = 
	`va_¨g
 (
v¨gs
, *);

196 *
p2öt
 = 
˘x
->
âl
;

198 
MUNGE_OPT_ADDR4
:

199 
p2addr
 = 
	`va_¨g
 (
v¨gs
, 
ö_addr
 *);

200 *
p2addr
 = 
˘x
->
addr
;

202 
MUNGE_OPT_ENCODE_TIME
:

203 
p2time
 = 
	`va_¨g
 (
v¨gs
, 
time_t
 *);

204 *
p2time
 = 
˘x
->
time0
;

206 
MUNGE_OPT_DECODE_TIME
:

207 
p2time
 = 
	`va_¨g
 (
v¨gs
, 
time_t
 *);

208 *
p2time
 = 
˘x
->
time1
;

210 
MUNGE_OPT_SOCKET
:

211 
p2°r
 = 
	`va_¨g
 (
v¨gs
, **);

212 *
p2°r
 = 
˘x
->
sockë_°r
;

214 
MUNGE_OPT_UID_RESTRICTION
:

215 
p2uid
 = 
	`va_¨g
 (
v¨gs
, 
uid_t
 *);

216 *
p2uid
 = 
˘x
->
auth_uid
;

218 
MUNGE_OPT_GID_RESTRICTION
:

219 
p2gid
 = 
	`va_¨g
 (
v¨gs
, 
gid_t
 *);

220 *
p2gid
 = 
˘x
->
auth_gid
;

223 
˘x
->
îr‹_num
 = 
EMUNGE_BAD_ARG
;

226 
	`va_íd
 (
v¨gs
);

227  (
˘x
->
îr‹_num
);

228 
	}
}

231 
munge_îr_t


232 
	$munge_˘x_£t
 (
munge_˘x_t
 
˘x
, 
munge_›t_t
 
›t
, ...)

234 *
°r
;

235 *
p
;

236 
i
;

237 
va_li°
 
v¨gs
;

239 i‡(!
˘x
) {

240  (
EMUNGE_BAD_ARG
);

242 
˘x
->
îr‹_num
 = 
EMUNGE_SUCCESS
;

243 i‡(
˘x
->
îr‹_°r
) {

244 
	`‰ì
 (
˘x
->
îr‹_°r
);

245 
˘x
->
îr‹_°r
 = 
NULL
;

247 
	`va_°¨t
 (
v¨gs
, 
›t
);

248 
›t
) {

249 
MUNGE_OPT_CIPHER_TYPE
:

250 
˘x
->
cùhî
 = 
	`va_¨g
 (
v¨gs
, );

252 
MUNGE_OPT_MAC_TYPE
:

253 
˘x
->
mac
 = 
	`va_¨g
 (
v¨gs
, );

255 
MUNGE_OPT_ZIP_TYPE
:

256 
˘x
->
zù
 = 
	`va_¨g
 (
v¨gs
, );

258 
MUNGE_OPT_REALM
:

259 
°r
 = 
	`va_¨g
 (
v¨gs
, *);

260 i‡(!
°r
) {

261 
p
 = 
NULL
;

263 i‡(
	`°æí
 (
°r
) > 255) {

264 
˘x
->
îr‹_num
 = 
EMUNGE_BAD_LENGTH
;

267 i‡(!(
p
 = 
	`°rdup
 (
°r
))) {

268 
˘x
->
îr‹_num
 = 
EMUNGE_NO_MEMORY
;

271 i‡(
˘x
->
ªÆm_°r
) {

272 
	`‰ì
 (
˘x
->
ªÆm_°r
);

274 
˘x
->
ªÆm_°r
 = 
p
;

276 
MUNGE_OPT_TTL
:

277 
i
 = 
	`va_¨g
 (
v¨gs
, );

278 
˘x
->
âl
 = (
i
 < 0) ? -1 : i;

281 
MUNGE_OPT_SOCKET
:

282 
°r
 = 
	`va_¨g
 (
v¨gs
, *);

283 i‡(!
°r
) {

284 
p
 = 
NULL
;

286 i‡(!(
p
 = 
	`°rdup
 (
°r
))) {

287 
˘x
->
îr‹_num
 = 
EMUNGE_NO_MEMORY
;

290 i‡(
˘x
->
sockë_°r
) {

291 
	`‰ì
 (
˘x
->
sockë_°r
);

293 
˘x
->
sockë_°r
 = 
p
;

295 
MUNGE_OPT_UID_RESTRICTION
:

296 
˘x
->
auth_uid
 = 
	`va_¨g
 (
v¨gs
, 
uid_t
);

298 
MUNGE_OPT_GID_RESTRICTION
:

299 
˘x
->
auth_gid
 = 
	`va_¨g
 (
v¨gs
, 
gid_t
);

301 
MUNGE_OPT_ADDR4
:

303 
MUNGE_OPT_ENCODE_TIME
:

305 
MUNGE_OPT_DECODE_TIME
:

308 
˘x
->
îr‹_num
 = 
EMUNGE_BAD_ARG
;

311 
	`va_íd
 (
v¨gs
);

312  (
˘x
->
îr‹_num
);

313 
	}
}

320 
munge_îr_t


321 
	$_munge_˘x_£t_îr
 (
munge_˘x_t
 
˘x
, 
munge_îr_t
 
e
, *
s
)

329 i‡(
˘x
) {

330 i‡((
˘x
->
îr‹_num
 =
EMUNGE_SUCCESS
Ë&& (
e
 != EMUNGE_SUCCESS)) {

331 
˘x
->
îr‹_num
 = 
e
;

332 
	`as£π
 (
˘x
->
îr‹_°r
 =
NULL
);

333 
˘x
->
îr‹_°r
 = 
s
;

334 
s
 = 
NULL
;

337 
e
 = 
˘x
->
îr‹_num
;

340 i‡(
s
) {

341 
	`‰ì
 (
s
);

343  (
e
);

344 
	}
}

	@src/libmunge/ctx.h

29 #i‚de‡
MUNGE_CTX_H


30 
	#MUNGE_CTX_H


	)

33 
	~<√töë/ö.h
>

34 
	~<sys/ty≥s.h
>

35 
	~<time.h
>

36 
	~<munge.h
>

43 
	smunge_˘x
 {

44 
	mcùhî
;

45 
	mmac
;

46 
	mzù
;

47 *
	mªÆm_°r
;

48 
	mâl
;

49 
ö_addr
 
	maddr
;

50 
time_t
 
	mtime0
;

51 
time_t
 
	mtime1
;

52 
uid_t
 
	mauth_uid
;

53 
gid_t
 
	mauth_gid
;

54 *
	msockë_°r
;

55 
munge_îr_t
 
	mîr‹_num
;

56 *
	mîr‹_°r
;

64 
munge_îr_t
 
_munge_˘x_£t_îr
 (
munge_˘x_t
 
˘x
, munge_îr_à
e
, *
s
);

	@src/libmunge/decode.c

29 #i‡
HAVE_CONFIG_H


30 
	~<c⁄fig.h
>

33 
	~<as£π.h
>

34 
	~<°d¨g.h
>

35 
	~<°dlib.h
>

36 
	~<°rög.h
>

37 
	~<sys/ty≥s.h
>

38 
	~<munge.h
>

39 
	~"˘x.h
"

40 
	~"m_msg.h
"

41 
	~"m_msg_˛õ¡.h
"

42 
	~"°r.h
"

49 
_decode_öô
 (
munge_˘x_t
 
˘x
, **
buf
, *
Àn
,

50 
uid_t
 *
uid
, 
gid_t
 *
gid
);

52 
munge_îr_t
 
_decode_ªq
 (
m_msg_t
 
m
, 
munge_˘x_t
 
˘x
,

53 c⁄° *
¸ed
);

55 
munge_îr_t
 
_decode_r•
 (
m_msg_t
 
m
, 
munge_˘x_t
 
˘x
,

56 **
buf
, *
Àn
, 
uid_t
 *
uid
, 
gid_t
 *
gid
);

63 
munge_îr_t


64 
	$munge_decode
 (c⁄° *
¸ed
, 
munge_˘x_t
 
˘x
,

65 **
buf
, *
Àn
, 
uid_t
 *
uid
, 
gid_t
 *
gid
)

67 
munge_îr_t
 
e
;

68 
m_msg_t
 
m
;

72 
	`_decode_öô
 (
˘x
, 
buf
, 
Àn
, 
uid
, 
gid
);

76 i‡((
¸ed
 =
NULL
) || (*cred == '\0')) {

77  (
	`_munge_˘x_£t_îr
 (
˘x
, 
EMUNGE_BAD_ARG
,

78 
	`°rdup
 ("No credential specified")));

82 i‡((
e
 = 
	`m_msg_¸óã
 (&
m
)Ë!
EMUNGE_SUCCESS
)

84 i‡((
e
 = 
	`_decode_ªq
 (
m
, 
˘x
, 
¸ed
)Ë!
EMUNGE_SUCCESS
)

86 i‡((
e
 = 
	`m_msg_˛õ¡_x„r
 (&
m
, 
MUNGE_MSG_DEC_REQ
, 
˘x
))

87 !
EMUNGE_SUCCESS
)

89 i‡((
e
 = 
	`_decode_r•
 (
m
, 
˘x
, 
buf
, 
Àn
, 
uid
, 
gid
)Ë!
EMUNGE_SUCCESS
)

93 i‡(
˘x
) {

94 
	`_munge_˘x_£t_îr
 (
˘x
, 
e
, 
m
->
îr‹_°r
);

95 
m
->
îr‹_is_c›y
 = 1;

97 
	`m_msg_de°roy
 (
m
);

98  (
e
);

99 
	}
}

107 
	$_decode_öô
 (
munge_˘x_t
 
˘x
, **
buf
, *
Àn
, 
uid_t
 *
uid
, 
gid_t
 *
gid
)

111 i‡(
˘x
) {

112 
˘x
->
cùhî
 = -1;

113 
˘x
->
mac
 = -1;

114 
˘x
->
zù
 = -1;

115 i‡(
˘x
->
ªÆm_°r
) {

116 
	`‰ì
 (
˘x
->
ªÆm_°r
);

117 
˘x
->
ªÆm_°r
 = 
NULL
;

119 
˘x
->
âl
 = -1;

120 
˘x
->
addr
.
s_addr
 = 0;

121 
˘x
->
time0
 = -1;

122 
˘x
->
time1
 = -1;

123 
˘x
->
auth_uid
 = -1;

124 
˘x
->
auth_gid
 = -1;

125 
˘x
->
îr‹_num
 = 
EMUNGE_SUCCESS
;

126 i‡(
˘x
->
îr‹_°r
) {

127 
	`‰ì
 (
˘x
->
îr‹_°r
);

128 
˘x
->
îr‹_°r
 = 
NULL
;

131 i‡(
buf
) {

132 *
buf
 = 
NULL
;

134 i‡(
Àn
) {

135 *
Àn
 = 0;

137 i‡(
uid
) {

138 *
uid
 = -1;

140 i‡(
gid
) {

141 *
gid
 = -1;

144 
	}
}

147 
munge_îr_t


148 
	$_decode_ªq
 (
m_msg_t
 
m
, 
munge_˘x_t
 
˘x
, c⁄° *
¸ed
)

154 
	`as£π
 (
m
 !
NULL
);

155 
	`as£π
 (
¸ed
 !
NULL
);

156 
	`as£π
 (
	`°æí
 (
¸ed
) > 0);

160 
m
->
d©a_Àn
 = 
	`°æí
 (
¸ed
) + 1;

161 
m
->
d©a
 = (*Ë
¸ed
;

162 
m
->
d©a_is_c›y
 = 1;

163  (
EMUNGE_SUCCESS
);

164 
	}
}

167 
munge_îr_t


168 
	$_decode_r•
 (
m_msg_t
 
m
, 
munge_˘x_t
 
˘x
,

169 **
buf
, *
Àn
, 
uid_t
 *
uid
, 
gid_t
 *
gid
)

178 
	`as£π
 (
m
 !
NULL
);

182 i‡(
m
->
ty≥
 !
MUNGE_MSG_DEC_RSP
) {

183 
	`m_msg_£t_îr
 (
m
, 
EMUNGE_SNAFU
,

184 
	`°rdupf
 ("Clõ¡Ñe˚ived invÆid mesßgêty≥ %d", 
m
->
ty≥
));

185  (
EMUNGE_SNAFU
);

189 i‡(
˘x
) {

190 
˘x
->
cùhî
 = 
m
->cipher;

191 
˘x
->
mac
 = 
m
->mac;

192 
˘x
->
zù
 = 
m
->zip;

193 i‡((
˘x
->
ªÆm_°r
 = 
m
->ªÆm_°rË!
NULL
) {

194 
m
->
ªÆm_is_c›y
 = 1;

196 
˘x
->
âl
 = 
m
->ttl;

197 
˘x
->
addr
.
s_addr
 = 
m
->addr.s_addr;;

198 
˘x
->
time0
 = 
m
->time0;

199 
˘x
->
time1
 = 
m
->time1;

200 
˘x
->
auth_uid
 = 
m
->auth_uid;

201 
˘x
->
auth_gid
 = 
m
->auth_gid;

203 i‡(
buf
 && 
Àn
 && (
m
->
d©a_Àn
 > 0)) {

204 
	`as£π
 (* ((*Ë
m
->
d©a
 + m->
d©a_Àn
) == '\0');

205 *
buf
 = 
m
->
d©a
;

206 
m
->
d©a_is_c›y
 = 1;

208 i‡(
Àn
) {

209 *
Àn
 = 
m
->
d©a_Àn
;

211 i‡(
uid
) {

212 *
uid
 = 
m
->
¸ed_uid
;

214 i‡(
gid
) {

215 *
gid
 = 
m
->
¸ed_gid
;

217  (
m
->
îr‹_num
);

218 
	}
}

	@src/libmunge/encode.c

29 #i‡
HAVE_CONFIG_H


30 
	~<c⁄fig.h
>

33 
	~<as£π.h
>

34 
	~<°d¨g.h
>

35 
	~<°dlib.h
>

36 
	~<°rög.h
>

37 
	~<sys/ty≥s.h
>

38 
	~<munge.h
>

39 
	~"˘x.h
"

40 
	~"m_msg.h
"

41 
	~"m_msg_˛õ¡.h
"

42 
	~"°r.h
"

49 
_ícode_öô
 (**
¸ed
, 
munge_˘x_t
 
˘x
);

51 
munge_îr_t
 
_ícode_ªq
 (
m_msg_t
 
m
, 
munge_˘x_t
 
˘x
,

52 c⁄° *
buf
, 
Àn
);

54 
munge_îr_t
 
_ícode_r•
 (
m_msg_t
 
m
, **
¸ed
);

61 
munge_îr_t


62 
	$munge_ícode
 (**
¸ed
, 
munge_˘x_t
 
˘x
, c⁄° *
buf
, 
Àn
)

64 
munge_îr_t
 
e
;

65 
m_msg_t
 
m
;

69 
	`_ícode_öô
 (
¸ed
, 
˘x
);

73 i‡(!
¸ed
) {

74  (
	`_munge_˘x_£t_îr
 (
˘x
, 
EMUNGE_BAD_ARG
,

75 
	`°rdup
 ("Noáddress specified forÑeturningÅhe credential")));

79 i‡((
e
 = 
	`m_msg_¸óã
 (&
m
)Ë!
EMUNGE_SUCCESS
)

81 i‡((
e
 = 
	`_ícode_ªq
 (
m
, 
˘x
, 
buf
, 
Àn
)Ë!
EMUNGE_SUCCESS
)

83 i‡((
e
 = 
	`m_msg_˛õ¡_x„r
 (&
m
, 
MUNGE_MSG_ENC_REQ
, 
˘x
))

84 !
EMUNGE_SUCCESS
)

86 i‡((
e
 = 
	`_ícode_r•
 (
m
, 
¸ed
)Ë!
EMUNGE_SUCCESS
)

90 i‡(
˘x
) {

91 
	`_munge_˘x_£t_îr
 (
˘x
, 
e
, 
m
->
îr‹_°r
);

92 
m
->
îr‹_is_c›y
 = 1;

94 
	`m_msg_de°roy
 (
m
);

95  (
e
);

96 
	}
}

104 
	$_ícode_öô
 (**
¸ed
, 
munge_˘x_t
 
˘x
)

108 i‡(
¸ed
) {

109 *
¸ed
 = 
NULL
;

111 i‡(
˘x
) {

112 
˘x
->
îr‹_num
 = 
EMUNGE_SUCCESS
;

113 i‡(
˘x
->
îr‹_°r
) {

114 
	`‰ì
 (
˘x
->
îr‹_°r
);

115 
˘x
->
îr‹_°r
 = 
NULL
;

119 
	}
}

122 
munge_îr_t


123 
	$_ícode_ªq
 (
m_msg_t
 
m
, 
munge_˘x_t
 
˘x
, c⁄° *
buf
, 
Àn
)

130 
	`as£π
 (
m
 !
NULL
);

134 i‡(
˘x
) {

135 
m
->
cùhî
 = 
˘x
->cipher;

136 
m
->
mac
 = 
˘x
->mac;

137 
m
->
zù
 = 
˘x
->zip;

138 i‡(
˘x
->
ªÆm_°r
) {

139 
m
->
ªÆm_Àn
 = 
	`°æí
 (
˘x
->
ªÆm_°r
) + 1;

140 
m
->
ªÆm_°r
 = 
˘x
->realm_str;

141 
m
->
ªÆm_is_c›y
 = 1;

144 
m
->
ªÆm_Àn
 = 0;

145 
m
->
ªÆm_°r
 = 
NULL
;

147 
m
->
âl
 = 
˘x
->ttl;

148 
m
->
auth_uid
 = 
˘x
->auth_uid;

149 
m
->
auth_gid
 = 
˘x
->auth_gid;

152 
m
->
cùhî
 = 
MUNGE_CIPHER_DEFAULT
;

153 
m
->
zù
 = 
MUNGE_ZIP_DEFAULT
;

154 
m
->
mac
 = 
MUNGE_MAC_DEFAULT
;

155 
m
->
ªÆm_Àn
 = 0;

156 
m
->
ªÆm_°r
 = 
NULL
;

157 
m
->
âl
 = 
MUNGE_TTL_DEFAULT
;

158 
m
->
auth_uid
 = 
MUNGE_UID_ANY
;

159 
m
->
auth_gid
 = 
MUNGE_GID_ANY
;

163 
m
->
d©a_Àn
 = 
Àn
;

164 
m
->
d©a
 = (*Ë
buf
;

165 
m
->
d©a_is_c›y
 = 1;

166  (
EMUNGE_SUCCESS
);

167 
	}
}

170 
munge_îr_t


171 
	$_ícode_r•
 (
m_msg_t
 
m
, **
¸ed
)

180 
	`as£π
 (
m
 !
NULL
);

181 
	`as£π
 (
¸ed
 !
NULL
);

185 i‡(
m
->
ty≥
 !
MUNGE_MSG_ENC_RSP
) {

186 
	`m_msg_£t_îr
 (
m
, 
EMUNGE_SNAFU
,

187 
	`°rdupf
 ("Clõ¡Ñe˚ived invÆid mesßgêty≥ %d", 
m
->
ty≥
));

188  (
EMUNGE_SNAFU
);

190 i‡(
m
->
d©a_Àn
 <= 0) {

191 
	`m_msg_£t_îr
 (
m
, 
EMUNGE_SNAFU
,

192 
	`°rdupf
 ("Clõ¡Ñe˚ived invÆid d©®Àngth %d", 
m
->
d©a_Àn
));

193  (
EMUNGE_SNAFU
);

197 
	`as£π
 (* ((*Ë
m
->
d©a
 + m->
d©a_Àn
) == '\0');

198 *
¸ed
 = 
m
->
d©a
;

199 
m
->
d©a_is_c›y
 = 1;

200  (
m
->
îr‹_num
);

201 
	}
}

	@src/libmunge/enum.c

29 #i‡
HAVE_CONFIG_H


30 
	~<c⁄fig.h
>

33 
	~<î∫o.h
>

34 
	~<°dio.h
>

35 
	~<°dlib.h
>

36 
	~<°rögs.h
>

37 
	~<munge.h
>

38 
	~"comm⁄.h
"

45 #i‡
HAVE_LIBGCRYPT
 || 
HAVE_EVP_AES_128_CBC


46 
	#MUNGE_CIPHER_AES128_FLAG
 1

	)

48 
	#MUNGE_CIPHER_AES128_FLAG
 0

	)

51 #i‡
HAVE_LIBGCRYPT
 || (
HAVE_EVP_AES_256_CBC
 && 
HAVE_EVP_SHA256
)

52 
	#MUNGE_CIPHER_AES256_FLAG
 1

	)

54 
	#MUNGE_CIPHER_AES256_FLAG
 0

	)

57 #i‡
HAVE_LIBGCRYPT
 || 
HAVE_EVP_SHA256


58 
	#MUNGE_MAC_SHA256_FLAG
 1

	)

60 
	#MUNGE_MAC_SHA256_FLAG
 0

	)

63 #i‡
HAVE_LIBGCRYPT
 || 
HAVE_EVP_SHA512


64 
	#MUNGE_MAC_SHA512_FLAG
 1

	)

66 
	#MUNGE_MAC_SHA512_FLAG
 0

	)

69 #i‡
HAVE_PKG_BZLIB


70 
	#MUNGE_ZIP_BZLIB_FLAG
 1

	)

72 
	#MUNGE_ZIP_BZLIB_FLAG
 0

	)

75 #i‡
HAVE_PKG_ZLIB


76 
	#MUNGE_ZIP_ZLIB_FLAG
 1

	)

78 
	#MUNGE_ZIP_ZLIB_FLAG
 0

	)

86 
	smunge_íum_èbÀ
 {

87 
	mvÆue
;

88 c⁄° *
	m°rög
;

89 
	mis_vÆid
;

92 
munge_íum_èbÀ
 * 
	tmunge_íum_èbÀ_t
;

99 
munge_íum_èbÀ
 
	g_munge_cùhî_èbÀ
[] = {

100 { 
MUNGE_CIPHER_NONE
, "none", 1 },

101 { 
MUNGE_CIPHER_DEFAULT
, "default", 1 },

102 { 
MUNGE_CIPHER_BLOWFISH
, "blowfish", 1 },

103 { 
MUNGE_CIPHER_CAST5
, "cast5", 1 },

104 { 
MUNGE_CIPHER_AES128
, "´s128", 
MUNGE_CIPHER_AES128_FLAG
 },

105 { 
MUNGE_CIPHER_AES256
, "´s256", 
MUNGE_CIPHER_AES256_FLAG
 },

106 { -1, 
NULL
, -1 }

109 
munge_íum_èbÀ
 
	g_munge_mac_èbÀ
[] = {

110 { 
MUNGE_MAC_NONE
, "none", 0 },

111 { 
MUNGE_MAC_DEFAULT
, "default", 1 },

112 { 
MUNGE_MAC_MD5
, "md5", 1 },

113 { 
MUNGE_MAC_SHA1
, "sha1", 1 },

114 { 
MUNGE_MAC_RIPEMD160
, "ripemd160", 1 },

115 { 
MUNGE_MAC_SHA256
, "sha256", 
MUNGE_MAC_SHA256_FLAG
 },

116 { 
MUNGE_MAC_SHA512
, "sha512", 
MUNGE_MAC_SHA512_FLAG
 },

117 { -1, 
NULL
, -1 }

120 
munge_íum_èbÀ
 
	g_munge_zù_èbÀ
[] = {

121 { 
MUNGE_ZIP_NONE
, "none", 1 },

122 { 
MUNGE_ZIP_DEFAULT
, "default", 1 },

123 { 
MUNGE_ZIP_BZLIB
, "bzlib", 
MUNGE_ZIP_BZLIB_FLAG
 },

124 { 
MUNGE_ZIP_ZLIB
, "zlib", 
MUNGE_ZIP_ZLIB_FLAG
 },

125 { -1, 
NULL
, -1 }

133 
munge_íum_èbÀ_t
 
_munge_íum_lookup
 (
munge_íum_t
 
ty≥
);

141 
	$munge_íum_is_vÆid
 (
munge_íum_t
 
ty≥
, 
vÆ
)

143 
munge_íum_èbÀ_t
 
ç
;

144 
i
;

146 i‡(!(
ç
 = 
	`_munge_íum_lookup
 (
ty≥
))) {

149 
i
 = 0; 
ç
[i].
°rög
 !
NULL
; i++) {

150 i‡(
vÆ
 =
ç
[
i
].
vÆue
) {

151  (
ç
[
i
].
is_vÆid
);

155 
	}
}

159 
	$munge_íum_öt_to_°r
 (
munge_íum_t
 
ty≥
, 
vÆ
)

161 
munge_íum_èbÀ_t
 
ç
;

162 
i
;

164 i‡(!(
ç
 = 
	`_munge_íum_lookup
 (
ty≥
))) {

165  (
NULL
);

167 
i
 = 0; 
ç
[i].
°rög
 !
NULL
; i++) {

168 i‡(
vÆ
 =
ç
[
i
].
vÆue
) {

169  (
ç
[
i
].
°rög
);

172  (
NULL
);

173 
	}
}

177 
	$munge_íum_°r_to_öt
 (
munge_íum_t
 
ty≥
, c⁄° *
°r
)

179 
munge_íum_èbÀ_t
 
ç
;

180 
i
;

181 
n
;

182 *
p
;

183 
î∫o_bak
, 
î∫o_ßv
;

185 i‡(!
°r
 || !*str) {

188 i‡(!(
ç
 = 
	`_munge_íum_lookup
 (
ty≥
))) {

194 
i
 = 0; 
ç
[i].
°rög
 !
NULL
; i++) {

195 i‡(!
	`°rˇ£cmp
 (
°r
, 
ç
[
i
].
°rög
)) {

196  (
ç
[
i
].
vÆue
);

206 
î∫o_bak
 = 
î∫o
;

207 
î∫o
 = 0;

208 
n
 = 
	`°πﬁ
 (
°r
, &
p
, 10);

209 
î∫o_ßv
 = 
î∫o
;

210 
î∫o
 = 
î∫o_bak
;

212 i‡((
î∫o_ßv
 !0Ë|| (
°r
 =
p
) || (*p != '\0')) {

215 i‡((
n
 < 0Ë|| (¿>
i
)) {

218  (
n
);

219 
	}
}

226 
munge_íum_èbÀ_t


227 
	$_munge_íum_lookup
 (
munge_íum_t
 
ty≥
)

229 
ty≥
) {

230 
MUNGE_ENUM_CIPHER
:

231  (
_munge_cùhî_èbÀ
);

232 
MUNGE_ENUM_MAC
:

233  (
_munge_mac_èbÀ
);

234 
MUNGE_ENUM_ZIP
:

235  (
_munge_zù_èbÀ
);

237  (
NULL
);

239  (
NULL
);

240 
	}
}

	@src/libmunge/m_msg_client.c

29 #i‡
HAVE_CONFIG_H


30 
	~"c⁄fig.h
"

33 
	~<as£π.h
>

34 
	~<î∫o.h
>

35 
	~<°rög.h
>

36 
	~<sys/ty≥s.h
>

37 
	~<sys/sockë.h
>

38 
	~<sys/°©.h
>

39 
	~<sys/un.h
>

40 
	~<uni°d.h
>

41 
	~<munge.h
>

42 
	~"auth_£nd.h
"

43 
	~"˘x.h
"

44 
	~"fd.h
"

45 
	~"missög.h
"

46 
	~"m_msg.h
"

47 
	~"m_msg_˛õ¡.h
"

48 
	~"munge_defs.h
"

49 
	~"°r.h
"

56 
munge_îr_t
 
_m_msg_˛õ¡_c⁄√˘
 (
m_msg_t
 
m
, *
∑th
);

57 
munge_îr_t
 
_m_msg_˛õ¡_disc⁄√˘
 (
m_msg_t
 
m
);

64 
munge_îr_t


65 
	$m_msg_˛õ¡_x„r
 (
m_msg_t
 *
pm
, 
m_msg_ty≥_t
 
mªq_ty≥
, 
munge_˘x_t
 
˘x
)

67 *
sockë
;

68 
i
;

69 
munge_îr_t
 
e
;

70 
m_msg_t
 
mªq
, 
mr•
;

71 
m_msg_ty≥_t
 
mr•_ty≥
;

73 
	`as£π
 (
MUNGE_SOCKET_RETRY_ATTEMPTS
 * 
MUNGE_SOCKET_RETRY_USECS
 < 1000000);

75 i‡(!
pm
 || !*pm) {

76  (
EMUNGE_SNAFU
);

78 i‡(!
˘x
 || !(
sockë
 = ctx->
sockë_°r
)) {

79 
sockë
 = 
MUNGE_SOCKET_NAME
;

81 
mªq
 = *
pm
;

82 
mr•
 = 
NULL
;

83 i‡(
mªq_ty≥
 =
MUNGE_MSG_ENC_REQ
) {

84 
mr•_ty≥
 = 
MUNGE_MSG_ENC_RSP
;

86 i‡(
mªq_ty≥
 =
MUNGE_MSG_DEC_REQ
) {

87 
mr•_ty≥
 = 
MUNGE_MSG_DEC_RSP
;

90  (
EMUNGE_SNAFU
);

93 
i
 = 1;

95 i‡((
e
 = 
	`_m_msg_˛õ¡_c⁄√˘
 (
mªq
, 
sockë
)Ë!
EMUNGE_SUCCESS
) {

98 i‡((
e
 = 
	`m_msg_£nd
 (
mªq
, 
mªq_ty≥
, 
MUNGE_MAXIMUM_REQ_LEN
))

99 !
EMUNGE_SUCCESS
) {

102 i‡(
	`auth_£nd
 (
mªq
) < 0) {

103 
e
 = 
EMUNGE_SOCKET
;

105 i‡((
e
 = 
	`m_msg_¸óã
 (&
mr•
)Ë!
EMUNGE_SUCCESS
) {

108 i‡((
e
 = 
	`m_msg_böd
 (
mr•
, 
mªq
->
sd
)Ë!
EMUNGE_SUCCESS
) {

111 i‡((
e
 = 
	`m_msg_ªcv
 (
mr•
, 
mr•_ty≥
, 0)Ë!
EMUNGE_SUCCESS
) {

114 i‡((
e
 = 
	`_m_msg_˛õ¡_disc⁄√˘
 (
mr•
)Ë!
EMUNGE_SUCCESS
) {

117 i‡(
e
 =
EMUNGE_SUCCESS
) {

121 i‡(
i
 >
MUNGE_SOCKET_RETRY_ATTEMPTS
) {

124 i‡(
e
 =
EMUNGE_BAD_LENGTH
) {

127 i‡(
mr•
 !
NULL
) {

128 
mr•
->
sd
 = -1;

129 
	`m_msg_de°roy
 (
mr•
);

130 
mr•
 = 
NULL
;

132 i‡(
mªq
->
sd
 >= 0) {

133 (Ë
	`˛o£
 (
mªq
->
sd
);

134 
mªq
->
sd
 = -1;

136 
mªq
->
ªåy
 = 
i
;

137 
	`u¶ìp
 (
i
 * 
MUNGE_SOCKET_RETRY_USECS
);

138 
i
++;

140 i‡(
mr•
) {

141 *
pm
 = 
mr•
;

142 
mªq
->
sd
 = -1;

143 
	`m_msg_de°roy
 (
mªq
);

145  (
e
);

146 
	}
}

153 
munge_îr_t


154 
	$_m_msg_˛õ¡_c⁄√˘
 (
m_msg_t
 
m
, *
∑th
)

156 
°©
 
°
;

157 
sockaddr_un
 
addr
;

158 
sd
;

159 
n
;

160 
i
;

161 
dñay
;

163 
	`as£π
 (
m
 !
NULL
);

164 
	`as£π
 (
m
->
sd
 < 0);

166 i‡((
∑th
 =
NULL
) || (*path == '\0')) {

167 
	`m_msg_£t_îr
 (
m
, 
EMUNGE_SOCKET
,

168 
	`°rdup
 ("MUNGE socketÇame is undefined"));

169  (
EMUNGE_SOCKET
);

171 i‡(
	`°©
 (
∑th
, &
°
) < 0) {

172 
	`m_msg_£t_îr
 (
m
, 
EMUNGE_SOCKET
,

173 
	`°rdupf
 ("FaûedÅÿac˚s†\"%s\": %s", 
∑th
, 
	`°ªº‹
 (
î∫o
)));

174  (
EMUNGE_SOCKET
);

176 i‡(!
	`S_ISSOCK
 (
°
.
°_mode
)) {

177 
	`m_msg_£t_îr
 (
m
, 
EMUNGE_SOCKET
,

178 
	`°rdupf
 ("InvÆid fûêty≥ f‹ sockë \"%s\"", 
∑th
));

179  (
EMUNGE_SOCKET
);

181 i‡((
sd
 = 
	`sockë
 (
PF_UNIX
, 
SOCK_STREAM
, 0)) < 0) {

182 
	`m_msg_£t_îr
 (
m
, 
EMUNGE_SOCKET
,

183 
	`°rdupf
 ("FaûedÅÿ¸óã sockë: %s", 
	`°ªº‹
 (
î∫o
)));

184  (
EMUNGE_SOCKET
);

186 i‡(
	`fd_£t_n⁄blockög
 (
sd
) < 0) {

187 
	`˛o£
 (
sd
);

188 
	`m_msg_£t_îr
 (
m
, 
EMUNGE_SOCKET
,

189 
	`°rdupf
 ("FailedÅo setÇonblocking socket: %s",

190 
	`°ªº‹
 (
î∫o
)));

191  (
EMUNGE_SOCKET
);

193 
	`mem£t
 (&
addr
, 0,  (addr));

194 
addr
.
sun_Ámûy
 = 
AF_UNIX
;

195 
n
 = 
	`°æ˝y
 (
addr
.
sun_∑th
, 
∑th
,  (addr.sun_path));

196 i‡(
n
 > (
addr
.
sun_∑th
)) {

197 
	`˛o£
 (
sd
);

198 
	`m_msg_£t_îr
 (
m
, 
EMUNGE_OVERFLOW
,

199 
	`°rdup
 ("Exceeded maximumÜength of socketÖathname"));

200  (
EMUNGE_OVERFLOW
);

202 
i
 = 1;

203 
dñay
 = 1;

211 
n
 = 
	`c⁄√˘
 (
sd
, (
sockaddr
 *Ë&
addr
,  (addr));

213 i‡(
n
 == 0) {

216 i‡(
î∫o
 =
EINTR
) {

219 i‡(
î∫o
 !
ECONNREFUSED
) {

222 i‡(
i
 >
MUNGE_SOCKET_CONNECT_ATTEMPTS
) {

225 
	`¶ìp
 (
dñay
);

226 
dñay
++;

227 
i
++;

229 i‡(
n
 < 0) {

230 
	`˛o£
 (
sd
);

231 
	`m_msg_£t_îr
 (
m
, 
EMUNGE_SOCKET
,

232 
	`°rdupf
 ("FaûedÅÿc⁄√˘Åÿ\"%s\": %s", 
∑th
,

233 
	`°ªº‹
 (
î∫o
)));

234  (
EMUNGE_SOCKET
);

236 
m
->
sd
 = sd;

237  (
EMUNGE_SUCCESS
);

238 
	}
}

241 
munge_îr_t


242 
	$_m_msg_˛õ¡_disc⁄√˘
 (
m_msg_t
 
m
) {

243 
munge_îr_t
 
e
;

245 
	`as£π
 (
m
 !
NULL
);

246 
	`as£π
 (
m
->
sd
 >= 0);

248 i‡(
	`˛o£
 (
m
->
sd
) < 0) {

249 
	`m_msg_£t_îr
 (
m
, 
EMUNGE_SOCKET
,

250 
	`°rdupf
 ("FaûedÅÿ˛o£ sockë: %s", 
	`°ªº‹
 (
î∫o
)));

251 
e
 = 
EMUNGE_SOCKET
;

254 
e
 = 
EMUNGE_SUCCESS
;

256 
m
->
sd
 = -1;

257  (
e
);

258 
	}
}

	@src/libmunge/m_msg_client.h

29 #i‚de‡
M_MSG_CLIENT_H


30 
	#M_MSG_CLIENT_H


	)

33 
	~<munge.h
>

34 
	~"m_msg.h
"

37 
munge_îr_t
 
m_msg_˛õ¡_x„r
 (

38 
m_msg_t
 *
pm
, 
m_msg_ty≥_t
 
mªq_ty≥
, 
munge_˘x_t
 
˘x
);

	@src/libmunge/munge.h

29 #i‚de‡
MUNGE_H


30 
	#MUNGE_H


	)

32 
	~<sys/ty≥s.h
>

39 #unde‡
BEGIN_C_DECLS


40 #unde‡
END_C_DECLS


41 #ifde‡
__˝lu•lus


42 
	#BEGIN_C_DECLS
 "C" {

	)

43 
	#END_C_DECLS
 }

	)

45 
	#BEGIN_C_DECLS


	)

46 
	#END_C_DECLS


	)

56 
munge_˘x
 * 
	tmunge_˘x_t
;

60 
	emunge_›t
 {

61 
	mMUNGE_OPT_CIPHER_TYPE
 = 0,

62 
	mMUNGE_OPT_MAC_TYPE
 = 1,

63 
	mMUNGE_OPT_ZIP_TYPE
 = 2,

64 
	mMUNGE_OPT_REALM
 = 3,

65 
	mMUNGE_OPT_TTL
 = 4,

66 
	mMUNGE_OPT_ADDR4
 = 5,

67 
	mMUNGE_OPT_ENCODE_TIME
 = 6,

68 
	mMUNGE_OPT_DECODE_TIME
 = 7,

69 
	mMUNGE_OPT_SOCKET
 = 8,

70 
	mMUNGE_OPT_UID_RESTRICTION
 = 9,

71 
	mMUNGE_OPT_GID_RESTRICTION
 = 10

72 } 
	tmunge_›t_t
;

76 
	emunge_cùhî
 {

77 
	mMUNGE_CIPHER_NONE
 = 0,

78 
	mMUNGE_CIPHER_DEFAULT
 = 1,

79 
	mMUNGE_CIPHER_BLOWFISH
 = 2,

80 
	mMUNGE_CIPHER_CAST5
 = 3,

81 
	mMUNGE_CIPHER_AES128
 = 4,

82 
	mMUNGE_CIPHER_AES256
 = 5,

83 
	mMUNGE_CIPHER_LAST_ITEM


84 } 
	tmunge_cùhî_t
;

88 
	emunge_mac
 {

89 
	mMUNGE_MAC_NONE
 = 0,

90 
	mMUNGE_MAC_DEFAULT
 = 1,

91 
	mMUNGE_MAC_MD5
 = 2,

92 
	mMUNGE_MAC_SHA1
 = 3,

93 
	mMUNGE_MAC_RIPEMD160
 = 4,

94 
	mMUNGE_MAC_SHA256
 = 5,

95 
	mMUNGE_MAC_SHA512
 = 6,

96 
	mMUNGE_MAC_LAST_ITEM


97 } 
	tmunge_mac_t
;

101 
	emunge_zù
 {

102 
	mMUNGE_ZIP_NONE
 = 0,

103 
	mMUNGE_ZIP_DEFAULT
 = 1,

104 
	mMUNGE_ZIP_BZLIB
 = 2,

105 
	mMUNGE_ZIP_ZLIB
 = 3,

106 
	mMUNGE_ZIP_LAST_ITEM


107 } 
	tmunge_zù_t
;

111 
	emunge_âl
 {

112 
	mMUNGE_TTL_MAXIMUM
 = -1,

113 
	mMUNGE_TTL_DEFAULT
 = 0

114 } 
	tmunge_âl_t
;

118 
	emunge_uid
 {

119 
	mMUNGE_UID_ANY
 = -1

120 } 
	tmunge_uid_t
;

124 
	emunge_gid
 {

125 
	mMUNGE_GID_ANY
 = -1

126 } 
	tmunge_gid_t
;

130 
	emunge_íum
 {

131 
	mMUNGE_ENUM_CIPHER
 = 0,

132 
	mMUNGE_ENUM_MAC
 = 1,

133 
	mMUNGE_ENUM_ZIP
 = 2

134 } 
	tmunge_íum_t
;

141 
	emunge_îr
 {

142 
	mEMUNGE_SUCCESS
 = 0,

143 
	mEMUNGE_SNAFU
 = 1,

144 
	mEMUNGE_BAD_ARG
 = 2,

145 
	mEMUNGE_BAD_LENGTH
 = 3,

146 
	mEMUNGE_OVERFLOW
 = 4,

147 
	mEMUNGE_NO_MEMORY
 = 5,

148 
	mEMUNGE_SOCKET
 = 6,

149 
	mEMUNGE_TIMEOUT
 = 7,

150 
	mEMUNGE_BAD_CRED
 = 8,

151 
	mEMUNGE_BAD_VERSION
 = 9,

152 
	mEMUNGE_BAD_CIPHER
 = 10,

153 
	mEMUNGE_BAD_MAC
 = 11,

154 
	mEMUNGE_BAD_ZIP
 = 12,

155 
	mEMUNGE_BAD_REALM
 = 13,

156 
	mEMUNGE_CRED_INVALID
 = 14,

157 
	mEMUNGE_CRED_EXPIRED
 = 15,

158 
	mEMUNGE_CRED_REWOUND
 = 16,

159 
	mEMUNGE_CRED_REPLAYED
 = 17,

160 
	mEMUNGE_CRED_UNAUTHORIZED
 = 18

161 } 
	tmunge_îr_t
;

165 
	#MUNGE_CIPHER_AES_128
 
MUNGE_CIPHER_AES128


	)

172 
BEGIN_C_DECLS


174 
munge_îr_t
 
munge_ícode
 (**
¸ed
, 
munge_˘x_t
 
˘x
,

175 c⁄° *
buf
, 
Àn
);

189 
munge_îr_t
 
munge_decode
 (c⁄° *
¸ed
, 
munge_˘x_t
 
˘x
,

190 **
buf
, *
Àn
, 
uid_t
 *
uid
, 
gid_t
 *
gid
);

210 c⁄° * 
munge_°ªº‹
 (
munge_îr_t
 
e
);

216 
END_C_DECLS


234 
BEGIN_C_DECLS


236 
munge_˘x_t
 
munge_˘x_¸óã
 ();

243 
munge_˘x_t
 
munge_˘x_c›y
 (munge_˘x_à
˘x
);

250 
munge_˘x_de°roy
 (
munge_˘x_t
 
˘x
);

255 c⁄° * 
munge_˘x_°ªº‹
 (
munge_˘x_t
 
˘x
);

263 
munge_îr_t
 
munge_˘x_gë
 (
munge_˘x_t
 
˘x
, 
munge_›t_t
 
›t
, ...);

273 
munge_îr_t
 
munge_˘x_£t
 (
munge_˘x_t
 
˘x
, 
munge_›t_t
 
›t
, ...);

281 
END_C_DECLS


288 
BEGIN_C_DECLS


290 
munge_íum_is_vÆid
 (
munge_íum_t
 
ty≥
, 
vÆ
);

299 c⁄° * 
munge_íum_öt_to_°r
 (
munge_íum_t
 
ty≥
, 
vÆ
);

307 
munge_íum_°r_to_öt
 (
munge_íum_t
 
ty≥
, c⁄° *
°r
);

314 
	gEND_C_DECLS


	@src/libmunge/strerror.c

29 #i‡
HAVE_CONFIG_H


30 
	~<c⁄fig.h
>

33 
	~<munge.h
>

37 
	$munge_°ªº‹
 (
munge_îr_t
 
î∫um
)

39 
î∫um
) {

40 
EMUNGE_SUCCESS
:

42 
EMUNGE_SNAFU
:

44 
EMUNGE_BAD_ARG
:

46 
EMUNGE_BAD_LENGTH
:

48 
EMUNGE_OVERFLOW
:

50 
EMUNGE_NO_MEMORY
:

52 
EMUNGE_SOCKET
:

54 
EMUNGE_TIMEOUT
:

56 
EMUNGE_BAD_CRED
:

58 
EMUNGE_BAD_VERSION
:

60 
EMUNGE_BAD_CIPHER
:

62 
EMUNGE_BAD_MAC
:

64 
EMUNGE_BAD_ZIP
:

66 
EMUNGE_BAD_REALM
:

68 
EMUNGE_CRED_INVALID
:

70 
EMUNGE_CRED_EXPIRED
:

72 
EMUNGE_CRED_REWOUND
:

74 
EMUNGE_CRED_REPLAYED
:

76 
EMUNGE_CRED_UNAUTHORIZED
:

82 
	}
}

	@src/munge/munge.c

29 #i‡
HAVE_CONFIG_H


30 
	~"c⁄fig.h
"

33 
	~<sys/ty≥s.h
>

34 
	~<as£π.h
>

35 
	~<˘y≥.h
>

36 
	~<î∫o.h
>

37 
	~<gΩ.h
>

38 
	~<limôs.h
>

39 
	~<pwd.h
>

40 
	~<°dio.h
>

41 
	~<°dlib.h
>

42 
	~<°rög.h
>

43 
	~<uni°d.h
>

44 
	~<munge.h
>

45 
	~"comm⁄.h
"

46 
	~"li˚n£.h
"

47 
	~"ªad.h
"

48 
	~"vîsi⁄.h
"

55 c⁄° * c⁄° 
	gsh‹t_›ts
 = ":hLVns:i:o:c:Cm:Mz:Zu:U:g:G:t:S:";

57 
	~<gë›t.h
>

58 
›ti⁄
 
	gl⁄g_›ts
[] = {

59 { "hñp", 
no_¨gumít
, 
NULL
, 'h' },

60 { "li˚n£", 
no_¨gumít
, 
NULL
, 'L' },

61 { "vîsi⁄", 
no_¨gumít
, 
NULL
, 'V' },

62 { "no-öput", 
no_¨gumít
, 
NULL
, 'n' },

63 { "°rög", 
ªquúed_¨gumít
, 
NULL
, 's' },

64 { "öput", 
ªquúed_¨gumít
, 
NULL
, 'i' },

65 { "ouçut", 
ªquúed_¨gumít
, 
NULL
, 'o' },

66 { "cùhî", 
ªquúed_¨gumít
, 
NULL
, 'c' },

67 { "li°-cùhîs", 
no_¨gumít
, 
NULL
, 'C' },

68 { "mac", 
ªquúed_¨gumít
, 
NULL
, 'm' },

69 { "li°-macs", 
no_¨gumít
, 
NULL
, 'M' },

70 { "zù", 
ªquúed_¨gumít
, 
NULL
, 'z' },

71 { "li°-zùs", 
no_¨gumít
, 
NULL
, 'Z' },

72 { "ª°ri˘-uid", 
ªquúed_¨gumít
, 
NULL
, 'u' },

73 { "uid", 
ªquúed_¨gumít
, 
NULL
, 'U' },

74 { "ª°ri˘-gid", 
ªquúed_¨gumít
, 
NULL
, 'g' },

75 { "gid", 
ªquúed_¨gumít
, 
NULL
, 'G' },

76 { "âl", 
ªquúed_¨gumít
, 
NULL
, 't' },

77 { "sockë", 
ªquúed_¨gumít
, 
NULL
, 'S' },

78 { 
NULL
, 0, NULL, 0 }

86 
	sc⁄f
 {

87 
munge_˘x_t
 
	m˘x
;

88 
munge_îr_t
 
	m°©us
;

89 
uid_t
 
	mcuid
;

90 
gid_t
 
	mcgid
;

91 *
	m°rög
;

92 *
	m‚_ö
;

93 *
	m‚_out
;

94 
FILE
 *
	mÂ_ö
;

95 
FILE
 *
	mÂ_out
;

96 
	mdÀn
;

97 *
	md©a
;

98 
	m˛í
;

99 *
	m¸ed
;

102 
c⁄f
 * 
	tc⁄f_t
;

109 
c⁄f_t
 
¸óã_c⁄f
 ();

110 
de°roy_c⁄f
 (
c⁄f_t
 
c⁄f
);

111 
∑r£_cmdlöe
 (
c⁄f_t
 
c⁄f
, 
¨gc
, **
¨gv
);

112 
di•œy_hñp
 (*
¥og
);

113 
di•œy_°rögs
 (c⁄° *
hódî
, 
munge_íum_t
 
ty≥
);

114 
uid_t
 
quîy_uid
 (c⁄° *
u£r
);

115 
gid_t
 
quîy_gid
 (c⁄° *
group
);

116 
›í_fûes
 (
c⁄f_t
 
c⁄f
);

117 
ícode_¸ed
 (
c⁄f_t
 
c⁄f
);

118 
di•œy_¸ed
 (
c⁄f_t
 
c⁄f
);

126 
	$maö
 (
¨gc
, *
¨gv
[])

128 
c⁄f_t
 
c⁄f
;

129 
rc
 = 0;

130 c⁄° *
p
;

132 i‡(
	`posig«l
 (
SIGPIPE
, 
SIG_IGN
Ë=
SIG_ERR
) {

133 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
, "FaûedÅÿign‹êsig«l=%d", 
SIGPIPE
);

135 
	`log_›í_fûe
 (
°dîr
, 
¨gv
[0], 
LOG_INFO
, 
LOG_OPT_PRIORITY
);

136 
c⁄f
 = 
	`¸óã_c⁄f
 ();

137 
	`∑r£_cmdlöe
 (
c⁄f
, 
¨gc
, 
¨gv
);

138 
	`›í_fûes
 (
c⁄f
);

140 i‡(
c⁄f
->
°rög
) {

141 
rc
 = 
	`ªad_d©a_‰om_°rög
 (
c⁄f
->
°rög
, &c⁄f->
d©a
, &c⁄f->
dÀn
);

143 i‡(
c⁄f
->
‚_ö
) {

144 
rc
 = 
	`ªad_d©a_‰om_fûe
 (
c⁄f
->
Â_ö
, &c⁄f->
d©a
, &c⁄f->
dÀn
);

146 i‡(
rc
 < 0) {

147 i‡(
î∫o
 =
ENOMEM
) {

148 
	`log_î∫o
 (
EMUNGE_NO_MEMORY
, 
LOG_ERR
, "FailedÅoÑead input");

151 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
, "ReadÉrror");

154 i‡(
	`ícode_¸ed
 (
c⁄f
) < 0) {

155 i‡(!(
p
 = 
	`munge_˘x_°ªº‹
 (
c⁄f
->
˘x
))) {

156 
p
 = 
	`munge_°ªº‹
 (
c⁄f
->
°©us
);

158 
	`log_îr
 (
c⁄f
->
°©us
, 
LOG_ERR
, "%s", 
p
);

160 
c⁄f
->
˛í
 = 
	`°æí
 (c⁄f->
¸ed
);

162 
	`di•œy_¸ed
 (
c⁄f
);

164 
	`de°roy_c⁄f
 (
c⁄f
);

165 
	`exô
 (
EMUNGE_SUCCESS
);

166 
	}
}

169 
c⁄f_t


170 
	$¸óã_c⁄f
 ()

172 
c⁄f_t
 
c⁄f
;

174 i‡(!(
c⁄f
 = 
	`mÆloc
 ( (conf)))) {

175 
	`log_î∫o
 (
EMUNGE_NO_MEMORY
, 
LOG_ERR
, "FailedÅoállocate conf");

177 i‡(!(
c⁄f
->
˘x
 = 
	`munge_˘x_¸óã
 ())) {

178 
	`log_î∫o
 (
EMUNGE_NO_MEMORY
, 
LOG_ERR
, "FailedÅo create conf ctx");

180 
c⁄f
->
°©us
 = -1;

181 
c⁄f
->
cuid
 = 
	`gëeuid
 ();

182 
c⁄f
->
cgid
 = 
	`gëegid
 ();

183 
c⁄f
->
°rög
 = 
NULL
;

184 
c⁄f
->
‚_ö
 = "-";

185 
c⁄f
->
‚_out
 = "-";

186 
c⁄f
->
Â_ö
 = 
NULL
;

187 
c⁄f
->
Â_out
 = 
NULL
;

188 
c⁄f
->
dÀn
 = 0;

189 
c⁄f
->
d©a
 = 
NULL
;

190 
c⁄f
->
˛í
 = 0;

191 
c⁄f
->
¸ed
 = 
NULL
;

192  (
c⁄f
);

193 
	}
}

197 
	$de°roy_c⁄f
 (
c⁄f_t
 
c⁄f
)

202 i‡(
c⁄f
->
Â_ö
 !
NULL
) {

203 i‡(
	`f˛o£
 (
c⁄f
->
Â_ö
) < 0) {

204 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
, "FailedÅo close input file");

206 
c⁄f
->
Â_ö
 = 
NULL
;

208 i‡(
c⁄f
->
Â_out
 !
NULL
) {

209 i‡((
	`f˛o£
 (
c⁄f
->
Â_out
Ë< 0Ë&& (
î∫o
 !
EPIPE
)) {

210 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
, "FailedÅo close output file");

212 
c⁄f
->
Â_out
 = 
NULL
;

214 i‡(
c⁄f
->
d©a
 !
NULL
) {

215 
	`membu∫
 (
c⁄f
->
d©a
, 0, c⁄f->
dÀn
);

216 
	`‰ì
 (
c⁄f
->
d©a
);

217 
c⁄f
->
d©a
 = 
NULL
;

219 i‡(
c⁄f
->
¸ed
 !
NULL
) {

220 
	`membu∫
 (
c⁄f
->
¸ed
, 0, c⁄f->
˛í
);

221 
	`‰ì
 (
c⁄f
->
¸ed
);

222 
c⁄f
->
¸ed
 = 
NULL
;

224 
	`munge_˘x_de°roy
 (
c⁄f
->
˘x
);

225 
	`‰ì
 (
c⁄f
);

227 
	}
}

231 
	$∑r£_cmdlöe
 (
c⁄f_t
 
c⁄f
, 
¨gc
, **
¨gv
)

233 *
¥og
;

234 
c
;

235 *
p
;

236 
munge_îr_t
 
e
;

237 
i
;

238 
l
;

240 
›ãº
 = 0;

242 
¥og
 = (¥og = 
	`°ºchr
 (
¨gv
[0], '/')) ?Örog + 1 :árgv[0];

246 
c
 = 
	`gë›t_l⁄g
 (
¨gc
, 
¨gv
, 
sh‹t_›ts
, 
l⁄g_›ts
, 
NULL
);

248 i‡(
c
 == -1) {

251 
c
) {

253 
	`di•œy_hñp
 (
¥og
);

254 
	`exô
 (
EMUNGE_SUCCESS
);

257 
	`di•œy_li˚n£
 ();

258 
	`exô
 (
EMUNGE_SUCCESS
);

261 
	`di•œy_vîsi⁄
 ();

262 
	`exô
 (
EMUNGE_SUCCESS
);

265 
c⁄f
->
‚_ö
 = 
NULL
;

266 
c⁄f
->
°rög
 = 
NULL
;

269 
c⁄f
->
‚_ö
 = 
NULL
;

270 
c⁄f
->
°rög
 = 
›èrg
;

273 
c⁄f
->
‚_ö
 = 
›èrg
;

274 
c⁄f
->
°rög
 = 
NULL
;

277 
c⁄f
->
‚_out
 = 
›èrg
;

280 
i
 = 
	`munge_íum_°r_to_öt
 (
MUNGE_ENUM_CIPHER
, 
›èrg
);

281 i‡((
i
 < 0Ë|| !
	`munge_íum_is_vÆid
 (
MUNGE_ENUM_CIPHER
, i)) {

282 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

283 "InvÆid cùhîÅy≥ \"%s\"", 
›èrg
);

285 
e
 = 
	`munge_˘x_£t
 (
c⁄f
->
˘x
, 
MUNGE_OPT_CIPHER_TYPE
, 
i
);

286 i‡(
e
 !
EMUNGE_SUCCESS
) {

287 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

289 
	`munge_˘x_°ªº‹
 (
c⁄f
->
˘x
));

293 
	`di•œy_°rögs
 ("CùhîÅy≥s", 
MUNGE_ENUM_CIPHER
);

294 
	`exô
 (
EMUNGE_SUCCESS
);

297 
i
 = 
	`munge_íum_°r_to_öt
 (
MUNGE_ENUM_MAC
, 
›èrg
);

298 i‡((
i
 < 0Ë|| !
	`munge_íum_is_vÆid
 (
MUNGE_ENUM_MAC
, i)) {

299 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

300 "InvÆid MACÅy≥ \"%s\"", 
›èrg
);

302 
e
 = 
	`munge_˘x_£t
 (
c⁄f
->
˘x
, 
MUNGE_OPT_MAC_TYPE
, 
i
);

303 i‡(
e
 !
EMUNGE_SUCCESS
) {

304 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

306 
	`munge_˘x_°ªº‹
 (
c⁄f
->
˘x
));

310 
	`di•œy_°rögs
 ("MACÅy≥s", 
MUNGE_ENUM_MAC
);

311 
	`exô
 (
EMUNGE_SUCCESS
);

314 
i
 = 
	`munge_íum_°r_to_öt
 (
MUNGE_ENUM_ZIP
, 
›èrg
);

315 i‡((
i
 < 0Ë|| !
	`munge_íum_is_vÆid
 (
MUNGE_ENUM_ZIP
, i)) {

316 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

317 "InvÆid com¥essi⁄Åy≥ \"%s\"", 
›èrg
);

319 
e
 = 
	`munge_˘x_£t
 (
c⁄f
->
˘x
, 
MUNGE_OPT_ZIP_TYPE
, 
i
);

320 i‡(
e
 !
EMUNGE_SUCCESS
) {

321 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

323 
	`munge_˘x_°ªº‹
 (
c⁄f
->
˘x
));

327 
	`di•œy_°rögs
 ("Com¥essi⁄Åy≥s", 
MUNGE_ENUM_ZIP
);

328 
	`exô
 (
EMUNGE_SUCCESS
);

331 
i
 = 
	`quîy_uid
 (
›èrg
);

332 i‡(
i
 < 0) {

333 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

334 "Uƒecognized u£∏\"%s\"", 
›èrg
);

336 
e
 = 
	`munge_˘x_£t
 (
c⁄f
->
˘x
, 
MUNGE_OPT_UID_RESTRICTION
, 
i
);

337 i‡(
e
 !
EMUNGE_SUCCESS
) {

338 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

340 
	`munge_˘x_°ªº‹
 (
c⁄f
->
˘x
));

344 
i
 = 
	`quîy_uid
 (
›èrg
);

345 i‡(
i
 < 0) {

346 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

347 "Uƒecognized u£∏\"%s\"", 
›èrg
);

349 
c⁄f
->
cuid
 = 
i
;

352 
i
 = 
	`quîy_gid
 (
›èrg
);

353 i‡(
i
 < 0) {

354 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

355 "Uƒecognized grou∞\"%s\"", 
›èrg
);

357 
e
 = 
	`munge_˘x_£t
 (
c⁄f
->
˘x
, 
MUNGE_OPT_GID_RESTRICTION
, 
i
);

358 i‡(
e
 !
EMUNGE_SUCCESS
) {

359 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

361 
	`munge_˘x_°ªº‹
 (
c⁄f
->
˘x
));

365 
i
 = 
	`quîy_gid
 (
›èrg
);

366 i‡(
i
 < 0) {

367 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

368 "Uƒecognized grou∞\"%s\"", 
›èrg
);

370 
c⁄f
->
cgid
 = 
i
;

373 
î∫o
 = 0;

374 
l
 = 
	`°πﬁ
 (
›èrg
, &
p
, 10);

375 i‡((
›èrg
 =
p
) || (*p != '\0')) {

376 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

377 "InvÆidÅime-to-livê'%s'", 
›èrg
);

379 i‡(((
î∫o
 =
ERANGE
Ë&& (
l
 =
LONG_MAX
)Ë|| (»> 
INT_MAX
)) {

380 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

382 
INT_MAX
);

384 i‡(
l
 < 0) {

385 
l
 = 
MUNGE_TTL_MAXIMUM
;

387 
e
 = 
	`munge_˘x_£t
 (
c⁄f
->
˘x
, 
MUNGE_OPT_TTL
, (Ë
l
);

388 i‡(
e
 !
EMUNGE_SUCCESS
) {

389 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

391 
	`munge_˘x_°ªº‹
 (
c⁄f
->
˘x
));

395 
e
 = 
	`munge_˘x_£t
 (
c⁄f
->
˘x
, 
MUNGE_OPT_SOCKET
, 
›èrg
);

396 i‡(
e
 !
EMUNGE_SUCCESS
) {

397 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

399 
	`munge_˘x_°ªº‹
 (
c⁄f
->
˘x
));

403 i‡(
›t›t
 > 0) {

404 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

405 "InvÆid o±i⁄ \"-%c\"", 
›t›t
);

407 i‡(
›töd
 > 1) {

408 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

409 "InvÆid o±i⁄ \"%s\"", 
¨gv
[
›töd
 - 1]);

412 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

417 i‡((
›töd
 > 1)

418 && (
	`°∫cmp
 (
¨gv
[
›töd
 - 1], "--", 2) == 0)) {

419 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

421 
¨gv
[
›töd
 - 1]);

423 i‡(
›t›t
 > 0) {

424 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

425 "Missögárgumíàf‹ o±i⁄ \"-%c\"", 
›t›t
);

428 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

433 i‡((
›töd
 > 1)

434 && (
	`°∫cmp
 (
¨gv
[
›töd
 - 1], "--", 2) == 0)) {

435 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

436 "Unim∂emíãd o±i⁄ \"%s\"", 
¨gv
[
›töd
 - 1]);

439 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

440 "Unim∂emíãd o±i⁄ \"-%c\"", 
c
);

445 i‡(
¨gv
[
›töd
]) {

446 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

447 "UƒecognizedÖ¨amëî \"%s\"", 
¨gv
[
›töd
]);

450 
	}
}

454 
	$di•œy_hñp
 (*
¥og
)

458 c⁄° 
w
 = -25;

460 
	`as£π
 (
¥og
 !
NULL
);

462 
	`¥ötf
 ("Ußge: %†[OPTIONS]\n", 
¥og
);

463 
	`¥ötf
 ("\n");

465 
	`¥ötf
 (" %*†%s\n", 
w
, "-h, --help",

468 
	`¥ötf
 (" %*†%s\n", 
w
, "-L, --license",

471 
	`¥ötf
 (" %*†%s\n", 
w
, "-V, --version",

474 
	`¥ötf
 ("\n");

476 
	`¥ötf
 (" %*†%s\n", 
w
, "-n, --no-input",

479 
	`¥ötf
 (" %*†%s\n", 
w
, "-s, --string=STRING",

482 
	`¥ötf
 (" %*†%s\n", 
w
, "-i, --input=FILE",

485 
	`¥ötf
 (" %*†%s\n", 
w
, "-o, --output=FILE",

488 
	`¥ötf
 ("\n");

490 
	`¥ötf
 (" %*†%s\n", 
w
, "-c, --cipher=STRING",

493 
	`¥ötf
 (" %*†%s\n", 
w
, "-C, --list-ciphers",

496 
	`¥ötf
 (" %*†%s\n", 
w
, "-m, --mac=STRING",

499 
	`¥ötf
 (" %*†%s\n", 
w
, "-M, --list-macs",

502 
	`¥ötf
 (" %*†%s\n", 
w
, "-z, --zip=STRING",

505 
	`¥ötf
 (" %*†%s\n", 
w
, "-Z, --list-zips",

508 
	`¥ötf
 ("\n");

510 
	`¥ötf
 (" %*†%s\n", 
w
, "-u, --restrict-uid=UID",

513 
	`¥ötf
 (" %*†%s\n", 
w
, "-U, --uid=UID",

516 
	`¥ötf
 (" %*†%s\n", 
w
, "-g, --restrict-gid=GID",

519 
	`¥ötf
 (" %*†%s\n", 
w
, "-G, --gid=GID",

522 
	`¥ötf
 (" %*†%s\n", 
w
, "-t, --ttl=INTEGER",

525 
	`¥ötf
 (" %*†%s\n", 
w
, "-S, --socket=STRING",

528 
	`¥ötf
 ("\n");

529 
	`¥ötf
 ("By default,ÖayloadÑead from stdin, "

532 
	}
}

536 
	$di•œy_°rögs
 (c⁄° *
hódî
, 
munge_íum_t
 
ty≥
)

538 
i
;

539 c⁄° *
p
;

541 i‡(
hódî
) {

542 
	`¥ötf
 ("%s:\n\n", 
hódî
);

544 
i
 = 0; (
p
 = 
	`munge_íum_öt_to_°r
 (
ty≥
, i)); i++) {

545 i‡(
	`munge_íum_is_vÆid
 (
ty≥
, 
i
)) {

546 
	`¥ötf
 (" %†(%d)\n", 
p
, 
i
);

549 
	`¥ötf
 ("\n");

551 
	}
}

554 
uid_t


555 
	$quîy_uid
 (c⁄° *
u£r
)

559 
∑sswd
 *
pw_±r
;

560 
uid_t
 
uid
;

561 
luid
;

562 *
íd_±r
;

564 i‡(
u£r
 =
NULL
) {

565 
î∫o
 = 
EINVAL
;

568 
pw_±r
 = 
	`gëpw«m
 (
u£r
);

569 i‡(
pw_±r
 !
NULL
) {

570 
uid
 = 
pw_±r
->
pw_uid
;

573 
î∫o
 = 0;

574 
luid
 = 
	`°πﬁ
 (
u£r
, &
íd_±r
, 10);

575 i‡((
î∫o
 =
ERANGE
Ë&& ((
luid
 =
LONG_MIN
Ë|| (luid =
LONG_MAX
))) {

578 i‡((
u£r
 =
íd_±r
) || (*end_ptr != '\0')) {

581 i‡((
luid
 < 0Ë|| (luid > 
INT_MAX
)) {

584 
uid
 = (Ë
luid
;

586  (
uid
);

587 
	}
}

590 
gid_t


591 
	$quîy_gid
 (c⁄° *
group
)

595 
group
 *
gr_±r
;

596 
gid_t
 
gid
;

597 
lgid
;

598 *
íd_±r
;

600 i‡(
group
 =
NULL
) {

601 
î∫o
 = 
EINVAL
;

604 
gr_±r
 = 
	`gëg∫am
 (
group
);

605 i‡(
gr_±r
 !
NULL
) {

606 
gid
 = 
gr_±r
->
gr_gid
;

609 
î∫o
 = 0;

610 
lgid
 = 
	`°πﬁ
 (
group
, &
íd_±r
, 10);

611 i‡((
î∫o
 =
ERANGE
Ë&& ((
lgid
 =
LONG_MIN
Ë|| (lgid =
LONG_MAX
))) {

614 i‡((
group
 =
íd_±r
) || (*end_ptr != '\0')) {

617 i‡((
lgid
 < 0Ë|| (lgid > 
INT_MAX
)) {

620 
gid
 = (Ë
lgid
;

622  (
gid
);

623 
	}
}

627 
	$›í_fûes
 (
c⁄f_t
 
c⁄f
)

629 i‡(
c⁄f
->
‚_ö
) {

630 i‡(!
	`°rcmp
 (
c⁄f
->
‚_ö
, "-")) {

631 
c⁄f
->
Â_ö
 = 
°dö
;

633 i‡(!(
c⁄f
->
Â_ö
 = 
	`f›í
 (c⁄f->
‚_ö
, "r"))) {

634 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

635 "FaûedÅÿªad from \"%s\"", 
c⁄f
->
‚_ö
);

638 i‡(
c⁄f
->
‚_out
) {

639 i‡(!
	`°rcmp
 (
c⁄f
->
‚_out
, "-")) {

640 
c⁄f
->
Â_out
 = 
°dout
;

642 i‡(!(
c⁄f
->
Â_out
 = 
	`f›í
 (c⁄f->
‚_out
, "w"))) {

643 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

644 "FaûedÅÿwrôêtÿ\"%s\"", 
c⁄f
->
‚_out
);

648 
	}
}

652 
	$ícode_¸ed
 (
c⁄f_t
 
c⁄f
)

657 
uid_t
 
euid
;

658 
gid_t
 
egid
;

660 
euid
 = 
	`gëeuid
 ();

661 
egid
 = 
	`gëegid
 ();

663 i‡(
egid
 !
c⁄f
->
cgid
) {

664 i‡(
	`£ãgid
 (
c⁄f
->
cgid
) < 0) {

665 
	`log_î∫o
 (
î∫o
, 
LOG_ERR
,

666 "FaûedÅÿ¸óã cªdítü»f‹ GID %u", 
c⁄f
->
cgid
);

669 i‡(
euid
 !
c⁄f
->
cuid
) {

670 i‡(
	`£ãuid
 (
c⁄f
->
cuid
) < 0) {

671 
	`log_î∫o
 (
î∫o
, 
LOG_ERR
,

672 "FaûedÅÿ¸óã cªdítü»f‹ UID %u", 
c⁄f
->
cuid
);

675 
c⁄f
->
°©us
 = 
	`munge_ícode
 (&c⁄f->
¸ed
, c⁄f->
˘x
,

676 
c⁄f
->
d©a
, c⁄f->
dÀn
);

678 i‡(
euid
 !
c⁄f
->
cuid
) {

679 i‡(
	`£ãuid
 (
euid
) < 0) {

680 
	`log_î∫o
 (
î∫o
, 
LOG_ERR
,

681 "FaûedÅÿª°‹ê¥ivûege†f‹ UID %u", 
euid
);

684 i‡(
egid
 !
c⁄f
->
cgid
) {

685 i‡(
	`£ãgid
 (
egid
) < 0) {

686 
	`log_î∫o
 (
î∫o
, 
LOG_ERR
,

687 "FaûedÅÿª°‹ê¥ivûege†f‹ GID %u", 
egid
);

690  ((
c⁄f
->
°©us
 =
EMUNGE_SUCCESS
) ? 0 : -1);

691 
	}
}

695 
	$di•œy_¸ed
 (
c⁄f_t
 
c⁄f
)

697 i‡(!
c⁄f
->
Â_out
) {

700 i‡(
	`Ârötf
 (
c⁄f
->
Â_out
, "%s\n", c⁄f->
¸ed
) < 0) {

701 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
, "WriteÉrror");

704 
	}
}

	@src/munge/read.c

29 #i‡
HAVE_CONFIG_H


30 
	~"c⁄fig.h
"

33 
	~<as£π.h
>

34 
	~<î∫o.h
>

35 
	~<°dio.h
>

36 
	~<°dlib.h
>

37 
	~<°rög.h
>

40 
	#INIT_BUFSIZ
 4096

	)

44 
	$ªad_d©a_‰om_fûe
 (
FILE
 *
Â
, **
buf
, *
Àn
)

46 *
bufmem
;

47 *
bu·mp
;

48 *
buÂå
;

49 
buÊí
;

50 
bufsiz
;

51 
n
;

53 
	`as£π
 (
Â
 !
NULL
);

54 
	`as£π
 (
buf
 !
NULL
);

55 
	`as£π
 (
Àn
 !
NULL
);

57 *
buf
 = 
NULL
;

58 *
Àn
 = 0;

59 
î∫o
 = 0;

61 i‡(!(
bufmem
 = 
buÂå
 = 
	`mÆloc
 (
INIT_BUFSIZ
)))

63 
buÊí
 = 
bufsiz
 = 
INIT_BUFSIZ
;

66 
n
 = 
	`‰ód
 (
buÂå
, 1, 
buÊí
, 
Â
);

67 
buÂå
 +
n
;

68 
buÊí
 -
n
;

69 i‡(
buÊí
 > 0) {

70 i‡(
	`„of
 (
Â
))

72 i‡(
	`„º‹
 (
Â
)) {

73 i‡(!
î∫o
)

74 
î∫o
 = 
EIO
;

75 
îr
;

79 i‡(!(
bu·mp
 = 
	`ªÆloc
 (
bufmem
, 
bufsiz
 * 2)))

80 
îr
;

81 
bufmem
 = 
bu·mp
;

82 
buÂå
 = 
bufmem
 + 
bufsiz
;

83 
buÊí
 = 
bufsiz
;

84 
bufsiz
 *= 2;

87 
n
 = 
buÂå
 - 
bufmem
;

88 i‡(!
n
) {

89 
	`‰ì
 (
bufmem
);

96 i‡(!(
bu·mp
 = 
	`ªÆloc
 (
bufmem
, 
n
 + 1)))

97 
îr
;

98 
bu·mp
[
n
] = '\0';

99 *
buf
 = 
bu·mp
;

100 *
Àn
 = 
n
;

101  (
n
);

103 
îr
:

104 
	`‰ì
 (
bufmem
);

106 
	}
}

110 
	$ªad_d©a_‰om_°rög
 (c⁄° *
s
, **
buf
, *
Àn
)

112 *
p
;

113 
n
;

115 
	`as£π
 (
buf
 !
NULL
);

116 
	`as£π
 (
Àn
 !
NULL
);

118 *
buf
 = 
NULL
;

119 *
Àn
 = 0;

121 i‡(!
s
)

123 
n
 = 
	`°æí
 (
s
);

124 i‡(
n
 == 0)

127 i‡(!(
p
 = 
	`mÆloc
 (
n
 + 1)))

129 
	`°r˝y
 (
p
, 
s
);

130 
p
[
n
] = '\0';

132 *
buf
 = 
p
;

133 *
Àn
 = 
n
;

134  (
n
);

135 
	}
}

	@src/munge/read.h

29 #i‚de‡
MUNGE_READ_H


30 
	#MUNGE_READ_H


	)

32 
	~<°dio.h
>

35 
ªad_d©a_‰om_fûe
 (
FILE
 *
Â
, **
buf
, *
Àn
);

47 
ªad_d©a_‰om_°rög
 (c⁄° *
s
, **
buf
, *
Àn
);

	@src/munge/remunge.c

29 #i‡
HAVE_CONFIG_H


30 
	~"c⁄fig.h
"

33 
	~<as£π.h
>

34 
	~<î∫o.h
>

35 
	~<gΩ.h
>

36 
	~<limôs.h
>

37 
	~<±hªad.h
>

38 
	~<pwd.h
>

39 
	~<°d¨g.h
>

40 
	~<°dio.h
>

41 
	~<°dlib.h
>

42 
	~<°rög.h
>

43 
	~<sys/time.h
>

44 
	~<sys/ty≥s.h
>

45 
	~<uni°d.h
>

46 
	~<munge.h
>

47 
	~"li˚n£.h
"

48 
	~"log.h
"

49 
	~"posig«l.h
"

50 
	~"vîsi⁄.h
"

57 
	#DEF_DO_DECODE
 0

	)

58 
	#DEF_NUM_THREADS
 1

	)

59 
	#DEF_PAYLOAD_LENGTH
 0

	)

60 
	#DEF_WARNING_TIME
 5

	)

61 
	#MIN_DURATION
 0.5

	)

68 c⁄° * c⁄° 
	gsh‹t_›ts
 = ":hLVqc:Cm:Mz:Zedl:u:g:t:S:D:N:T:W:";

70 
	~<gë›t.h
>

71 
›ti⁄
 
	gl⁄g_›ts
[] = {

72 { "hñp", 
no_¨gumít
, 
NULL
, 'h' },

73 { "li˚n£", 
no_¨gumít
, 
NULL
, 'L' },

74 { "vîsi⁄", 
no_¨gumít
, 
NULL
, 'V' },

75 { "quõt", 
no_¨gumít
, 
NULL
, 'q' },

76 { "cùhî", 
ªquúed_¨gumít
, 
NULL
, 'c' },

77 { "li°-cùhîs", 
no_¨gumít
, 
NULL
, 'C' },

78 { "mac", 
ªquúed_¨gumít
, 
NULL
, 'm' },

79 { "li°-macs", 
no_¨gumít
, 
NULL
, 'M' },

80 { "zù", 
ªquúed_¨gumít
, 
NULL
, 'z' },

81 { "li°-zùs", 
no_¨gumít
, 
NULL
, 'Z' },

82 { "ícode", 
no_¨gumít
, 
NULL
, 'e' },

83 { "decode", 
no_¨gumít
, 
NULL
, 'd' },

84 { "Àngth", 
ªquúed_¨gumít
, 
NULL
, 'l' },

85 { "ª°ri˘-uid", 
ªquúed_¨gumít
, 
NULL
, 'u' },

86 { "ª°ri˘-gid", 
ªquúed_¨gumít
, 
NULL
, 'g' },

87 { "âl", 
ªquúed_¨gumít
, 
NULL
, 't' },

88 { "sockë", 
ªquúed_¨gumít
, 
NULL
, 'S' },

89 { "duøti⁄", 
ªquúed_¨gumít
, 
NULL
, 'D' },

90 { "num-¸eds", 
ªquúed_¨gumít
, 
NULL
, 'N' },

91 { "num-thªads", 
ªquúed_¨gumít
, 
NULL
, 'T' },

92 { "w¨n-time", 
ªquúed_¨gumít
, 
NULL
, 'W' },

93 { 
NULL
, 0, NULL, 0 }

107 
	sc⁄f
 {

108 
munge_˘x_t
 
	m˘x
;

109 
	mdo_decode
;

110 *
	m∑ylﬂd
;

111 
	mnum_∑ylﬂd
;

112 
	mmax_thªads
;

113 
	mnum_thªads
;

114 
	mnum_ru¬ög
;

115 
	mnum_£c⁄ds
;

116 
	mnum_¸eds
;

117 
	mw¨n_time
;

118 
timevÆ
 
	mt_maö_°¨t
;

119 
timevÆ
 
	mt_maö_°›
;

120 
±hªad_t
 *
	mtids
;

121 
±hªad_muãx_t
 
	mmuãx
;

122 
±hªad_c⁄d_t
 
	mc⁄d_d⁄e
;

125 
	mnum_¸eds_d⁄e
;

126 
	mnum_ícode_îrs
;

127 
	mnum_decode_îrs
;

128 } 
	msh¨ed
;

130 
c⁄f
 * 
	tc⁄f_t
;

132 
	sthªad_d©a
 {

133 
c⁄f_t
 
	mc⁄f
;

134 
munge_˘x_t
 
	me˘x
;

135 
munge_˘x_t
 
	md˘x
;

137 
thªad_d©a
 * 
	ttd©a_t
;

139 * (*
	tthªad_f
) (*);

140 (*
	tthªad_˛ónup_f
) (*);

147 
g_gŸ_quõt
 = 0;

154 
c⁄f_t
 
	`¸óã_c⁄f
 ();

155 
	`de°roy_c⁄f
 (
c⁄f_t
 
c⁄f
);

156 
td©a_t
 
	`¸óã_td©a
 (
c⁄f_t
 
c⁄f
);

157 
	`de°roy_td©a
 (
td©a_t
 
td©a
);

158 
	`∑r£_cmdlöe
 (
c⁄f_t
 
c⁄f
, 
¨gc
, **
¨gv
);

159 
	`di•œy_hñp
 (*
¥og
);

160 
	`di•œy_°rögs
 (c⁄° *
hódî
, 
munge_íum_t
 
ty≥
);

161 
	`gë_si_mu…ùÀ
 (
c
);

162 
	`gë_time_mu…ùÀ
 (
c
);

163 
	`°¨t_thªads
 (
c⁄f_t
 
c⁄f
);

164 
	`¥o˚ss_¸eds
 (
c⁄f_t
 
c⁄f
);

165 
	`°›_thªads
 (
c⁄f_t
 
c⁄f
);

166 * 
	`ªmunge
 (
c⁄f_t
 
c⁄f
);

167 
	`ªmunge_˛ónup
 (
td©a_t
 
td©a
);

168 
	`ouçut_msg
 (c⁄° *
f‹m©
, ...);

175 
	#GET_TIMEVAL
(
TV
) \

177 i‡(
	`gëtimeofday
 ((&
TV
), 
NULL
) == -1) { \

178 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
, \

181 
	}
} 0)

	)

183 
	#DIFF_TIMEVAL
(
TV1
, 
TV0
) \

184 –((
TV1
).
tv_£c
 - (
TV0
).tv_sec ) + \

185 (((
TV1
).
tv_u£c
 - (
TV0
).tv_u£cË/ 1e6Ë)

	)

193 
	$maö
 (
¨gc
, *
¨gv
[])

195 
c⁄f_t
 
c⁄f
;

199 i‡(
	`posig«l
 (
SIGHUP
, 
SIG_IGN
Ë=
SIG_ERR
) {

200 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
, "FaûedÅÿign‹êsig«l=%d", 
SIGHUP
);

202 i‡(
	`posig«l
 (
SIGPIPE
, 
SIG_IGN
Ë=
SIG_ERR
) {

203 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
, "FaûedÅÿign‹êsig«l=%d", 
SIGPIPE
);

207 i‡(
	`˛o£
 (
STDIN_FILENO
) < 0) {

208 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
, "FailedÅo close standard input");

212 i‡(
	`£tvbuf
 (
°dout
, 
NULL
, 
_IOLBF
, 0) < 0) {

213 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

216 
	`log_›í_fûe
 (
°dîr
, 
¨gv
[0], 
LOG_INFO
, 
LOG_OPT_PRIORITY
);

217 
c⁄f
 = 
	`¸óã_c⁄f
 ();

218 
	`∑r£_cmdlöe
 (
c⁄f
, 
¨gc
, 
¨gv
);

220 
	`°¨t_thªads
 (
c⁄f
);

221 
	`¥o˚ss_¸eds
 (
c⁄f
);

222 
	`°›_thªads
 (
c⁄f
);

224 
	`de°roy_c⁄f
 (
c⁄f
);

225 
	`exô
 (
EMUNGE_SUCCESS
);

226 
	}
}

229 
c⁄f_t


230 
	$¸óã_c⁄f
 ()

235 
c⁄f_t
 
c⁄f
;

236 
n
;

238 i‡(!(
c⁄f
 = 
	`mÆloc
 ( (*conf)))) {

239 
	`log_î∫o
 (
EMUNGE_NO_MEMORY
, 
LOG_ERR
, "FailedÅoállocate conf");

241 i‡(!(
c⁄f
->
˘x
 = 
	`munge_˘x_¸óã
 ())) {

242 
	`log_î∫o
 (
EMUNGE_NO_MEMORY
, 
LOG_ERR
, "FailedÅo create conf ctx");

244 i‡((
î∫o
 = 
	`±hªad_muãx_öô
 (&
c⁄f
->
muãx
, 
NULL
)) != 0) {

245 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
, "FailedÅo init mutex");

247 i‡((
î∫o
 = 
	`±hªad_c⁄d_öô
 (&
c⁄f
->
c⁄d_d⁄e
, 
NULL
)) != 0) {

248 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
, "FailedÅo init condition");

250 
c⁄f
->
do_decode
 = 
DEF_DO_DECODE
;

251 
c⁄f
->
∑ylﬂd
 = 
NULL
;

252 
c⁄f
->
num_∑ylﬂd
 = 
DEF_PAYLOAD_LENGTH
;;

253 
c⁄f
->
num_thªads
 = 
DEF_NUM_THREADS
;

254 
c⁄f
->
num_ru¬ög
 = 0;

255 
c⁄f
->
num_£c⁄ds
 = 0;

256 
c⁄f
->
num_¸eds
 = 0;

257 
c⁄f
->
sh¨ed
.
num_¸eds_d⁄e
 = 0;

258 
c⁄f
->
sh¨ed
.
num_ícode_îrs
 = 0;

259 
c⁄f
->
sh¨ed
.
num_decode_îrs
 = 0;

260 
c⁄f
->
w¨n_time
 = 
DEF_WARNING_TIME
;

261 
c⁄f
->
tids
 = 
NULL
;

268 
î∫o
 = 0;

269 i‡(((
n
 = 
	`sysc⁄f
 (
_SC_OPEN_MAX
)Ë=-1Ë&& (
î∫o
 != 0)) {

270 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

273 i‡((
c⁄f
->
max_thªads
 = 
n
 - 2 - 2) < 1) {

274 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

277  (
c⁄f
);

278 
	}
}

282 
	$de°roy_c⁄f
 (
c⁄f_t
 
c⁄f
)

286 
	`as£π
 (
c⁄f
 !
NULL
);

288 i‡(
c⁄f
->
∑ylﬂd
) {

289 
	`as£π
 (
c⁄f
->
num_∑ylﬂd
 > 0);

290 
	`‰ì
 (
c⁄f
->
∑ylﬂd
);

292 i‡((
î∫o
 = 
	`±hªad_c⁄d_de°roy
 (&
c⁄f
->
c⁄d_d⁄e
)) != 0) {

293 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
, "FailedÅo destroy condition");

295 i‡((
î∫o
 = 
	`±hªad_muãx_de°roy
 (&
c⁄f
->
muãx
)) != 0) {

296 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
, "FailedÅo destroy mutex");

298 
	`munge_˘x_de°roy
 (
c⁄f
->
˘x
);

299 
	`‰ì
 (
c⁄f
->
tids
);

300 
	`‰ì
 (
c⁄f
);

302 
	}
}

305 
td©a_t


306 
	$¸óã_td©a
 (
c⁄f_t
 
c⁄f
)

313 
td©a_t
 
td©a
;

315 
	`as£π
 (
c⁄f
 !
NULL
);

317 i‡(!(
td©a
 = 
	`mÆloc
 ( (*tdata)))) {

318 
	`log_î∫o
 (
EMUNGE_NO_MEMORY
, 
LOG_ERR
,

321 
td©a
->
c⁄f
 = conf;

331 i‡(!(
td©a
->
e˘x
 = 
	`munge_˘x_c›y
 (
c⁄f
->
˘x
))) {

332 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
, "FailedÅo copy mungeÉncode context");

334 i‡((
c⁄f
->
do_decode
Ë&& !(
td©a
->
d˘x
 = 
	`munge_˘x_c›y
 (c⁄f->
˘x
))) {

335 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
, "FailedÅo copy munge decode context");

337  (
td©a
);

338 
	}
}

342 
	$de°roy_td©a
 (
td©a_t
 
td©a
)

346 
	`as£π
 (
td©a
 !
NULL
);

348 i‡(
td©a
->
c⁄f
->
do_decode
) {

349 
	`munge_˘x_de°roy
 (
td©a
->
d˘x
);

351 
	`munge_˘x_de°roy
 (
td©a
->
e˘x
);

352 
	`‰ì
 (
td©a
);

354 
	}
}

358 
	$∑r£_cmdlöe
 (
c⁄f_t
 
c⁄f
, 
¨gc
, **
¨gv
)

362 *
¥og
;

363 
c
;

364 *
p
;

365 
i
;

366 
l
;

367 
u
;

368 
mu…ùlõr
;

369 
∑sswd
 *
pw_±r
;

370 
group
 *
gr_±r
;

371 
munge_îr_t
 
e
;

373 
›ãº
 = 0;

375 
¥og
 = (¥og = 
	`°ºchr
 (
¨gv
[0], '/')) ?Örog + 1 :árgv[0];

379 
c
 = 
	`gë›t_l⁄g
 (
¨gc
, 
¨gv
, 
sh‹t_›ts
, 
l⁄g_›ts
, 
NULL
);

381 i‡(
c
 == -1) {

384 
c
) {

386 
	`di•œy_hñp
 (
¥og
);

387 
	`exô
 (
EMUNGE_SUCCESS
);

390 
	`di•œy_li˚n£
 ();

391 
	`exô
 (
EMUNGE_SUCCESS
);

394 
	`di•œy_vîsi⁄
 ();

395 
	`exô
 (
EMUNGE_SUCCESS
);

398 
g_gŸ_quõt
 = 1;

401 
i
 = 
	`munge_íum_°r_to_öt
 (
MUNGE_ENUM_CIPHER
, 
›èrg
);

402 i‡((
i
 < 0Ë|| !
	`munge_íum_is_vÆid
 (
MUNGE_ENUM_CIPHER
, i)) {

403 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

404 "InvÆid cùhîÅy≥ \"%s\"", 
›èrg
);

406 
e
 = 
	`munge_˘x_£t
 (
c⁄f
->
˘x
, 
MUNGE_OPT_CIPHER_TYPE
, 
i
);

407 i‡(
e
 !
EMUNGE_SUCCESS
) {

408 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

410 
	`munge_˘x_°ªº‹
 (
c⁄f
->
˘x
));

414 
	`di•œy_°rögs
 ("CùhîÅy≥s", 
MUNGE_ENUM_CIPHER
);

415 
	`exô
 (
EMUNGE_SUCCESS
);

418 
i
 = 
	`munge_íum_°r_to_öt
 (
MUNGE_ENUM_MAC
, 
›èrg
);

419 i‡((
i
 < 0Ë|| !
	`munge_íum_is_vÆid
 (
MUNGE_ENUM_MAC
, i)) {

420 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

421 "InvÆid MACÅy≥ \"%s\"", 
›èrg
);

423 
e
 = 
	`munge_˘x_£t
 (
c⁄f
->
˘x
, 
MUNGE_OPT_MAC_TYPE
, 
i
);

424 i‡(
e
 !
EMUNGE_SUCCESS
) {

425 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

427 
	`munge_˘x_°ªº‹
 (
c⁄f
->
˘x
));

431 
	`di•œy_°rögs
 ("MACÅy≥s", 
MUNGE_ENUM_MAC
);

432 
	`exô
 (
EMUNGE_SUCCESS
);

435 
i
 = 
	`munge_íum_°r_to_öt
 (
MUNGE_ENUM_ZIP
, 
›èrg
);

436 i‡((
i
 < 0Ë|| !
	`munge_íum_is_vÆid
 (
MUNGE_ENUM_ZIP
, i)) {

437 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

438 "InvÆid com¥essi⁄Åy≥ \"%s\"", 
›èrg
);

440 
e
 = 
	`munge_˘x_£t
 (
c⁄f
->
˘x
, 
MUNGE_OPT_ZIP_TYPE
, 
i
);

441 i‡(
e
 !
EMUNGE_SUCCESS
) {

442 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

444 
	`munge_˘x_°ªº‹
 (
c⁄f
->
˘x
));

448 
	`di•œy_°rögs
 ("Com¥essi⁄Åy≥s", 
MUNGE_ENUM_ZIP
);

449 
	`exô
 (
EMUNGE_SUCCESS
);

452 
c⁄f
->
do_decode
 = 0;

455 
c⁄f
->
do_decode
 = 1;

458 
î∫o
 = 0;

459 
l
 = 
	`°πﬁ
 (
›èrg
, &
p
, 10);

460 i‡((
›èrg
 =
p
) || ((*p != '\0') && (*(p+1) != '\0'))

461 || (
l
 < 0)) {

462 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

463 "InvÆidÇumbî o‡byã†'%s'", 
›èrg
);

465 i‡(((
î∫o
 =
ERANGE
Ë&& (
l
 =
LONG_MAX
)Ë|| (»> 
INT_MAX
)) {

466 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

467 "Ex˚eded maximumÇumbî o‡%d byãs", 
INT_MAX
);

469 i‡(!(
mu…ùlõr
 = 
	`gë_si_mu…ùÀ
 (*
p
))) {

470 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

471 "InvÆidÇumbî s≥cifõ∏'%c'", *
p
);

473 i‡(
l
 > (
INT_MAX
 / 
mu…ùlõr
)) {

474 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

475 "Ex˚eded maximumÇumbî o‡%d byãs", 
INT_MAX
);

477 
c⁄f
->
num_∑ylﬂd
 = (Ë(
l
 * 
mu…ùlõr
);

480 i‡((
pw_±r
 = 
	`gëpw«m
 (
›èrg
)Ë!
NULL
) {

481 
i
 = 
pw_±r
->
pw_uid
;

484 
î∫o
 = 0;

485 
l
 = 
	`°πﬁ
 (
›èrg
, &
p
, 10);

486 i‡(((
î∫o
 =
ERANGE
)

487 && ((
l
 =
LONG_MIN
Ë|| (»=
LONG_MAX
)))

488 || (
›èrg
 =
p
) || (*p != '\0')

489 || (
l
 < 0Ë|| (»> 
INT_MAX
)) {

490 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

491 "Uƒecognized u£∏\"%s\"", 
›èrg
);

493 
i
 = (Ë
l
;

495 
e
 = 
	`munge_˘x_£t
 (
c⁄f
->
˘x
, 
MUNGE_OPT_UID_RESTRICTION
, 
i
);

496 i‡(
e
 !
EMUNGE_SUCCESS
) {

497 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

499 
	`munge_˘x_°ªº‹
 (
c⁄f
->
˘x
));

503 i‡((
gr_±r
 = 
	`gëg∫am
 (
›èrg
)Ë!
NULL
) {

504 
i
 = 
gr_±r
->
gr_gid
;

507 
î∫o
 = 0;

508 
l
 = 
	`°πﬁ
 (
›èrg
, &
p
, 10);

509 i‡(((
î∫o
 =
ERANGE
)

510 && ((
l
 =
LONG_MIN
Ë|| (»=
LONG_MAX
)))

511 || (
›èrg
 =
p
) || (*p != '\0')

512 || (
l
 < 0Ë|| (»> 
INT_MAX
)) {

513 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

514 "Uƒecognized grou∞\"%s\"", 
›èrg
);

516 
i
 = (Ë
l
;

518 
e
 = 
	`munge_˘x_£t
 (
c⁄f
->
˘x
, 
MUNGE_OPT_GID_RESTRICTION
, 
i
);

519 i‡(
e
 !
EMUNGE_SUCCESS
) {

520 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

522 
	`munge_˘x_°ªº‹
 (
c⁄f
->
˘x
));

526 
î∫o
 = 0;

527 
l
 = 
	`°πﬁ
 (
›èrg
, &
p
, 10);

528 i‡((
›èrg
 =
p
) || (*p != '\0')) {

529 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

530 "InvÆidÅime-to-livê'%s'", 
›èrg
);

532 i‡(((
î∫o
 =
ERANGE
Ë&& (
l
 =
LONG_MAX
)Ë|| (»> 
INT_MAX
)) {

533 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

535 
INT_MAX
);

537 i‡(
l
 < 0) {

538 
l
 = 
MUNGE_TTL_MAXIMUM
;

540 
e
 = 
	`munge_˘x_£t
 (
c⁄f
->
˘x
, 
MUNGE_OPT_TTL
, (Ë
l
);

541 i‡(
e
 !
EMUNGE_SUCCESS
) {

542 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

544 
	`munge_˘x_°ªº‹
 (
c⁄f
->
˘x
));

548 
e
 = 
	`munge_˘x_£t
 (
c⁄f
->
˘x
, 
MUNGE_OPT_SOCKET
, 
›èrg
);

549 i‡(
e
 !
EMUNGE_SUCCESS
) {

550 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

552 
	`munge_˘x_°ªº‹
 (
c⁄f
->
˘x
));

556 
î∫o
 = 0;

557 
l
 = 
	`°πﬁ
 (
›èrg
, &
p
, 10);

558 i‡((
›èrg
 =
p
) || ((*p != '\0') && (*(p+1) != '\0'))

559 || (
l
 <= 0)) {

560 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

561 "InvÆid duøti⁄ '%s'", 
›èrg
);

563 i‡(((
î∫o
 =
ERANGE
Ë&& (
l
 =
LONG_MAX
)Ë|| (»> 
INT_MAX
)) {

564 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

565 "Ex˚eded maximum duøti⁄ o‡%d sec⁄ds", 
INT_MAX
);

567 i‡(!(
mu…ùlõr
 = 
	`gë_time_mu…ùÀ
 (*
p
))) {

568 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

569 "InvÆid duøti⁄ s≥cifõ∏'%c'", *
p
);

571 i‡(
l
 > (
INT_MAX
 / 
mu…ùlõr
)) {

572 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

573 "Ex˚eded maximum duøti⁄ o‡%d sec⁄ds", 
INT_MAX
);

575 
c⁄f
->
num_£c⁄ds
 = (Ë(
l
 * 
mu…ùlõr
);

578 
î∫o
 = 0;

579 
u
 = 
	`°πoul
 (
›èrg
, &
p
, 10);

580 i‡((
›èrg
 =
p
) || ((*p != '\0') && (*(p+1) != '\0'))

581 || (
u
 == 0)) {

582 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

583 "InvÆidÇumbî o‡¸edítül†'%s'", 
›èrg
);

585 i‡((
î∫o
 =
ERANGE
Ë&& (
u
 =
ULONG_MAX
)) {

586 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

588 
ULONG_MAX
);

590 i‡(!(
mu…ùlõr
 = 
	`gë_si_mu…ùÀ
 (*
p
))) {

591 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

592 "InvÆidÇumbî s≥cifõ∏'%c'", *
p
);

594 i‡(
u
 > (
ULONG_MAX
 / 
mu…ùlõr
)) {

595 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

597 
ULONG_MAX
);

599 
c⁄f
->
num_¸eds
 = 
u
 * 
mu…ùlõr
;

602 
î∫o
 = 0;

603 
l
 = 
	`°πﬁ
 (
›èrg
, &
p
, 10);

604 i‡((
›èrg
 =
p
Ë|| (*∞!'\0'Ë|| (
l
 <= 0)) {

605 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

606 "InvÆidÇumbî o‡thªad†'%s'", 
›èrg
);

608 i‡(((
î∫o
 =
ERANGE
Ë&& (
l
 =
LONG_MAX
)Ë|| (»> 
INT_MAX
)

609 || (
l
 > 
c⁄f
->
max_thªads
)) {

610 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

612 
c⁄f
->
max_thªads
,

613 (
c⁄f
->
max_thªads
 == 1) ? "" : "s");

615 
c⁄f
->
num_thªads
 = (Ë
l
;

618 
î∫o
 = 0;

619 
l
 = 
	`°πﬁ
 (
›èrg
, &
p
, 10);

620 i‡((
›èrg
 =
p
Ë|| (*∞!'\0'Ë|| (
l
 <= 0)) {

621 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

622 "InvÆidÇumbî o‡£c⁄d†'%s'", 
›èrg
);

624 i‡(((
î∫o
 =
ERANGE
Ë&& (
l
 =
LONG_MAX
)Ë|| (»> 
INT_MAX
)) {

625 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

626 "Ex˚eded maximumÇumbî o‡%d sec⁄ds", 
INT_MAX
);

628 
c⁄f
->
w¨n_time
 = (Ë
l
;

631 i‡(
›t›t
 > 0) {

632 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

633 "InvÆid o±i⁄ \"-%c\"", 
›t›t
);

635 i‡(
›töd
 > 1) {

636 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

637 "InvÆid o±i⁄ \"%s\"", 
¨gv
[
›töd
 - 1]);

640 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

645 i‡((
›töd
 > 1)

646 && (
	`°∫cmp
 (
¨gv
[
›töd
 - 1], "--", 2) == 0)) {

647 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

649 
¨gv
[
›töd
 - 1]);

651 i‡(
›t›t
 > 0) {

652 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

653 "Missögárgumíàf‹ o±i⁄ \"-%c\"", 
›t›t
);

656 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

661 i‡((
›töd
 > 1)

662 && (
	`°∫cmp
 (
¨gv
[
›töd
 - 1], "--", 2) == 0)) {

663 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

664 "Unim∂emíãd o±i⁄ \"%s\"", 
¨gv
[
›töd
 - 1]);

667 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

668 "Unim∂emíãd o±i⁄ \"-%c\"", 
c
);

673 i‡(
¨gv
[
›töd
]) {

674 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

675 "UƒecognizedÖ¨amëî \"%s\"", 
¨gv
[
›töd
]);

679 i‡(
c⁄f
->
num_∑ylﬂd
 > 0) {

680 i‡(!(
c⁄f
->
∑ylﬂd
 = 
	`mÆloc
 (c⁄f->
num_∑ylﬂd
 + 1))) {

681 
	`log_îr
 (
EMUNGE_NO_MEMORY
, 
LOG_ERR
,

683 
c⁄f
->
num_∑ylﬂd
, (conf->num_payload == 1 ? "" : "s"));

685 
i
 = 0, 
c
 = 'A'; i < 
c⁄f
->
num_∑ylﬂd
; i++) {

686 i‡((
c⁄f
->
∑ylﬂd
[
i
] = 
c
++) == 'Z') {

687 
c
 = 'A';

690 
c⁄f
->
∑ylﬂd
[c⁄f->
num_∑ylﬂd
] = '\0';

693 
	}
}

697 
	$di•œy_hñp
 (*
¥og
)

701 c⁄° 
w
 = -25;

703 
	`as£π
 (
¥og
 !
NULL
);

705 
	`¥ötf
 ("Ußge: %†[OPTIONS]\n", 
¥og
);

706 
	`¥ötf
 ("\n");

708 
	`¥ötf
 (" %*†%s\n", 
w
, "-h, --help",

711 
	`¥ötf
 (" %*†%s\n", 
w
, "-L, --license",

714 
	`¥ötf
 (" %*†%s\n", 
w
, "-V, --version",

717 
	`¥ötf
 (" %*†%s\n", 
w
, "-q, --quiet",

720 
	`¥ötf
 ("\n");

722 
	`¥ötf
 (" %*†%s\n", 
w
, "-c, --cipher=STRING",

725 
	`¥ötf
 (" %*†%s\n", 
w
, "-C, --list-ciphers",

728 
	`¥ötf
 (" %*†%s\n", 
w
, "-m, --mac=STRING",

731 
	`¥ötf
 (" %*†%s\n", 
w
, "-M, --list-macs",

734 
	`¥ötf
 (" %*†%s\n", 
w
, "-z, --zip=STRING",

737 
	`¥ötf
 (" %*†%s\n", 
w
, "-Z, --list-zips",

740 
	`¥ötf
 ("\n");

742 
	`¥ötf
 (" %*†%s\n", 
w
, "-e, --encode",

745 
	`¥ötf
 (" %*†%s\n", 
w
, "-d, --decode",

748 
	`¥ötf
 (" %*†%s\n", 
w
, "-l, --length=INTEGER",

751 
	`¥ötf
 (" %*†%s\n", 
w
, "-u, --restrict-uid=UID",

754 
	`¥ötf
 (" %*†%s\n", 
w
, "-g, --restrict-gid=GID",

757 
	`¥ötf
 (" %*†%s\n", 
w
, "-t, --ttl=INTEGER",

760 
	`¥ötf
 (" %*†%s\n", 
w
, "-S, --socket=STRING",

763 
	`¥ötf
 ("\n");

765 
	`¥ötf
 (" %*†%s\n", 
w
, "-D, --duration=INTEGER",

768 
	`¥ötf
 (" %*†%s\n", 
w
, "-N, --num-creds=INTEGER",

771 
	`¥ötf
 (" %*†%s\n", 
w
, "-T, --num-threads=INTEGER",

774 
	`¥ötf
 (" %*†%s\n", 
w
, "-W, --warn-time=INTEGER",

777 
	`¥ötf
 ("\n");

779 
	}
}

783 
	$di•œy_°rögs
 (c⁄° *
hódî
, 
munge_íum_t
 
ty≥
)

785 
i
;

786 c⁄° *
p
;

788 i‡(
hódî
) {

789 
	`¥ötf
 ("%s:\n\n", 
hódî
);

791 
i
 = 0; (
p
 = 
	`munge_íum_öt_to_°r
 (
ty≥
, i)); i++) {

792 i‡(
	`munge_íum_is_vÆid
 (
ty≥
, 
i
)) {

793 
	`¥ötf
 (" %†(%d)\n", 
p
, 
i
);

796 
	`¥ötf
 ("\n");

798 
	}
}

802 
	$gë_si_mu…ùÀ
 (
c
)

807 
mu…ùÀ
;

809 
c
) {

811 
mu…ùÀ
 = 1;

814 
mu…ùÀ
 = 1e3;

817 
mu…ùÀ
 = 1 << 10;

820 
mu…ùÀ
 = 1e6;

823 
mu…ùÀ
 = 1 << 20;

826 
mu…ùÀ
 = 1e9;

829 
mu…ùÀ
 = 1 << 30;

832 
mu…ùÀ
 = 0;

835  (
mu…ùÀ
);

836 
	}
}

840 
	$gë_time_mu…ùÀ
 (
c
)

846 
mu…ùÀ
;

848 
c
) {

852 
mu…ùÀ
 = 1;

856 
mu…ùÀ
 = 60;

860 
mu…ùÀ
 = 60 * 60;

864 
mu…ùÀ
 = 60 * 60 * 24;

867 
mu…ùÀ
 = 0;

870  (
mu…ùÀ
);

871 
	}
}

875 
	$°¨t_thªads
 (
c⁄f_t
 
c⁄f
)

879 
±hªad_©å_t
 
èâr
;

880 
size_t
 
°acksize
 = 256 * 1024;

881 
i
;

883 i‡(!(
c⁄f
->
tids
 = 
	`mÆloc
 ( (*c⁄f->tidsË* c⁄f->
num_thªads
))) {

884 
	`log_îr
 (
EMUNGE_NO_MEMORY
, 
LOG_ERR
, "FailedÅoállocateÅidárray");

886 i‡((
î∫o
 = 
	`±hªad_©å_öô
 (&
èâr
)) != 0) {

887 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
, "FailedÅo initÅhreadáttribute");

889 #ifde‡
_POSIX_THREAD_ATTR_STACKSIZE


890 i‡((
î∫o
 = 
	`±hªad_©å_£t°acksize
 (&
èâr
, 
°acksize
)) != 0) {

891 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
, "FailedÅo setÅhread stacksize");

899 i‡((
î∫o
 = 
	`±hªad_muãx_lock
 (&
c⁄f
->
muãx
)) != 0) {

900 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
, "FailedÅoÜock mutex");

912 
	`as£π
 (
c⁄f
->
num_thªads
 > 0);

913 
c⁄f
->
num_ru¬ög
 = c⁄f->
num_thªads
;

915 
	`ouçut_msg
 ("Spawning %dÅhread%s for %s",

916 
c⁄f
->
num_thªads
, ((conf->num_threads == 1) ? "" : "s"),

917 (
c⁄f
->
do_decode
 ? "encoding/decoding" : "encoding"));

919 
i
 = 0; i < 
c⁄f
->
num_thªads
; i++) {

920 i‡((
î∫o
 = 
±hªad_¸óã


921 (&
c⁄f
->
tids
[
i
], &
èâr
, (
thªad_f
Ë
ªmunge
, conf)) != 0) {

922 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

923 "FaûedÅÿ¸óãÅhªad #%d", 
i
+1);

926 i‡((
î∫o
 = 
	`±hªad_©å_de°roy
 (&
èâr
)) != 0) {

927 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

931 
	}
}

935 
	$¥o˚ss_¸eds
 (
c⁄f_t
 
c⁄f
)

941 
n_£cs
;

942 
n_¸eds
;

943 
time•ec
 
to
;

947 
	`GET_TIMEVAL
 (
c⁄f
->
t_maö_°¨t
);

951 i‡(!
c⁄f
->
num_¸eds
 && !c⁄f->
num_£c⁄ds
) {

952 
c⁄f
->
num_£c⁄ds
 = 1;

956 
n_£cs
 = 
c⁄f
->
num_£c⁄ds
;

957 
n_¸eds
 = 
c⁄f
->
num_¸eds
;

963 i‡(
c⁄f
->
num_£c⁄ds
) {

964 
to
.
tv_£c
 = 
c⁄f
->
t_maö_°¨t
.tv_£¯+ c⁄f->
num_£c⁄ds
;

965 i‡(
to
.
tv_£c
 < 
c⁄f
->
t_maö_°¨t
.tv_sec) {

966 
to
.
tv_£c
 = ( (to.tv_£cË=4Ë? 
INT_MAX
 : 
LONG_MAX
;

968 
to
.
tv_n£c
 = 
c⁄f
->
t_maö_°¨t
.
tv_u£c
 * 1e3;

971 
to
.
tv_£c
 = ( (to.tv_£cË=4Ë? 
INT_MAX
 : 
LONG_MAX
;

972 
to
.
tv_n£c
 = 0;

977 
c⁄f
->
num_£c⁄ds
 = 
to
.
tv_£c
 - c⁄f->
t_maö_°¨t
.tv_sec;

981 i‡(!
c⁄f
->
num_¸eds
) {

982 
c⁄f
->
num_¸eds
 = 
ULONG_MAX
;

986 i‡(
n_¸eds
 && !
n_£cs
) {

987 
	`ouçut_msg
 ("Processing %lu credential%s",

988 
c⁄f
->
num_¸eds
, ((conf->num_creds == 1) ? "" : "s"));

990 i‡(
n_£cs
 && !
n_¸eds
) {

991 
	`ouçut_msg
 ("Processing credentials for %d second%s",

992 
c⁄f
->
num_£c⁄ds
, ((conf->num_seconds == 1) ? "" : "s"));

995 
	`ouçut_msg
 ("Processing %lu credential%s for upÅo %d second%s",

996 
c⁄f
->
num_¸eds
, ((conf->num_creds == 1) ? "" : "s"),

997 
c⁄f
->
num_£c⁄ds
, ((conf->num_seconds == 1) ? "" : "s"));

1001 
c⁄f
->
num_ru¬ög
 > 0) {

1003 
î∫o
 = 
	`±hªad_c⁄d_timedwaô
 (&
c⁄f
->
c⁄d_d⁄e
, &c⁄f->
muãx
, &
to
);

1005 i‡(!
î∫o
 || (î∫ÿ=
ETIMEDOUT
)) {

1008 i‡(
î∫o
 =
EINTR
) {

1012 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
, "FailedÅo wait on condition");

1016 
	}
}

1020 
	$°›_thªads
 (
c⁄f_t
 
c⁄f
)

1024 
i
;

1025 
n
;

1026 
dñè
;

1027 
øã
;

1032 i‡((
î∫o
 = 
	`±hªad_muãx_u∆ock
 (&
c⁄f
->
muãx
)) != 0) {

1033 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
, "FailedÅo unlock mutex");

1035 
i
 = 0; i < 
c⁄f
->
num_thªads
; i++) {

1036 
î∫o
 = 
	`±hªad_ˇn˚l
 (
c⁄f
->
tids
[
i
]);

1037 i‡((
î∫o
 !0Ë&& (î∫ÿ!
ESRCH
)) {

1038 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

1039 "FaûedÅÿˇn˚»thªad #%d", 
i
+1);

1042 
i
 = 0; i < 
c⁄f
->
num_thªads
; i++) {

1043 i‡((
î∫o
 = 
	`±hªad_joö
 (
c⁄f
->
tids
[
i
], 
NULL
)) != 0) {

1044 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

1045 "FaûedÅÿjoöÅhªad #%d", 
i
+1);

1047 
c⁄f
->
tids
[
i
] = 0;

1051 
	`GET_TIMEVAL
 (
c⁄f
->
t_maö_°›
);

1052 
dñè
 = 
	`DIFF_TIMEVAL
 (
c⁄f
->
t_maö_°›
, c⁄f->
t_maö_°¨t
);

1056 i‡(
c⁄f
->
sh¨ed
.
num_ícode_îrs
 && c⁄f->sh¨ed.
num_decode_îrs
) {

1057 
	`ouçut_msg
 ("Generated %luÉncodingÉrror%sánd %lu decodingÉrror%s",

1058 
c⁄f
->
sh¨ed
.
num_ícode_îrs
,

1059 ((
c⁄f
->
sh¨ed
.
num_ícode_îrs
 == 1) ? "" : "s"),

1060 
c⁄f
->
sh¨ed
.
num_decode_îrs
,

1061 ((
c⁄f
->
sh¨ed
.
num_decode_îrs
 == 1) ? "" : "s"));

1063 i‡(
c⁄f
->
sh¨ed
.
num_ícode_îrs
) {

1064 
	`ouçut_msg
 ("Generated %luÉncodingÉrror%s",

1065 
c⁄f
->
sh¨ed
.
num_ícode_îrs
,

1066 ((
c⁄f
->
sh¨ed
.
num_ícode_îrs
 == 1) ? "" : "s"));

1068 i‡(
c⁄f
->
sh¨ed
.
num_decode_îrs
) {

1069 
	`ouçut_msg
 ("Generated %lu decodingÉrror%s",

1070 
c⁄f
->
sh¨ed
.
num_decode_îrs
,

1071 ((
c⁄f
->
sh¨ed
.
num_decode_îrs
 == 1) ? "" : "s"));

1075 
n
 = 
c⁄f
->
sh¨ed
.
num_¸eds_d⁄e


1076 - 
c⁄f
->
sh¨ed
.
num_ícode_îrs


1077 - 
c⁄f
->
sh¨ed
.
num_decode_îrs
;

1078 
øã
 = 
n
 / 
dñè
;

1079 
	`ouçut_msg
 ("Processed %lu credential%s in %0.3fs (%0.0f creds/sec)",

1080 
n
, (“ =1Ë? "" : "s"), 
dñè
, 
øã
);

1081 i‡(
g_gŸ_quõt
) {

1082 
	`¥ötf
 ("%0.0f\n", 
øã
);

1086 i‡(
dñè
 < 
MIN_DURATION
) {

1087 
	`¥ötf
 ("\nWARNING: Results based on suchá shortÅime interval "

1091 
	}
}

1095 
	$ªmunge
 (
c⁄f_t
 
c⁄f
)

1099 
td©a_t
 
td©a
;

1100 
ˇn˚l_°©e
;

1101 
n
;

1102 
gŸ_ícode_îr
;

1103 
gŸ_decode_îr
;

1104 
timevÆ
 
t_°¨t
;

1105 
timevÆ
 
t_°›
;

1106 
dñè
;

1107 
munge_îr_t
 
e
;

1108 *
¸ed
;

1109 *
d©a
;

1110 
dÀn
;

1111 
uid_t
 
uid
;

1112 
gid_t
 
gid
;

1114 
td©a
 = 
	`¸óã_td©a
 (
c⁄f
);

1116 
	`±hªad_˛ónup_push
 ((
thªad_˛ónup_f
Ë
ªmunge_˛ónup
, 
td©a
);

1118 i‡((
î∫o
 = 
	`±hªad_muãx_lock
 (&
c⁄f
->
muãx
)) != 0) {

1119 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
, "FailedÅoÜock mutex");

1121 
c⁄f
->
num_¸eds
 - c⁄f->
sh¨ed
.
num_¸eds_d⁄e
 > 0) {

1123 
	`±hªad_ã°ˇn˚l
 ();

1125 i‡((
î∫o
 = 
±hªad_£tˇn˚l°©e


1126 (
PTHREAD_CANCEL_DISABLE
, &
ˇn˚l_°©e
)) != 0) {

1127 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

1130 
n
 = ++
c⁄f
->
sh¨ed
.
num_¸eds_d⁄e
;

1132 i‡((
î∫o
 = 
	`±hªad_muãx_u∆ock
 (&
c⁄f
->
muãx
)) != 0) {

1133 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
, "FailedÅo unlock mutex");

1135 
gŸ_ícode_îr
 = 0;

1136 
gŸ_decode_îr
 = 0;

1137 
d©a
 = 
NULL
;

1139 
	`GET_TIMEVAL
 (
t_°¨t
);

1140 
e
 = 
	`munge_ícode
(&
¸ed
, 
td©a
->
e˘x
, 
c⁄f
->
∑ylﬂd
, c⁄f->
num_∑ylﬂd
);

1141 
	`GET_TIMEVAL
 (
t_°›
);

1143 
dñè
 = 
	`DIFF_TIMEVAL
 (
t_°›
, 
t_°¨t
);

1144 i‡(
dñè
 > 
c⁄f
->
w¨n_time
) {

1145 
	`ouçut_msg
 ("Credential #%luÉncodingÅook %0.3f seconds",

1146 
n
, 
dñè
);

1148 i‡(
e
 !
EMUNGE_SUCCESS
) {

1149 
	`ouçut_msg
 ("Credential #%luÉncoding failed: %s (err=%d)",

1150 
n
, 
	`munge_˘x_°ªº‹
 (
td©a
->
e˘x
), 
e
);

1151 ++
gŸ_ícode_îr
;

1153 i‡(
c⁄f
->
do_decode
) {

1155 
	`GET_TIMEVAL
 (
t_°¨t
);

1156 
e
 = 
	`munge_decode
 (
¸ed
, 
td©a
->
d˘x
, &
d©a
, &
dÀn
, &
uid
, &
gid
);

1157 
	`GET_TIMEVAL
 (
t_°›
);

1159 
dñè
 = 
	`DIFF_TIMEVAL
 (
t_°›
, 
t_°¨t
);

1160 i‡(
dñè
 > 
c⁄f
->
w¨n_time
) {

1161 
	`ouçut_msg
 ("Credential #%lu decodingÅook %0.3f seconds",

1162 
n
, 
dñè
);

1164 i‡(
e
 !
EMUNGE_SUCCESS
) {

1165 
	`ouçut_msg
 ("Credential #%lu decoding failed: %s (err=%d)",

1166 
n
, 
	`munge_˘x_°ªº‹
 (
td©a
->
d˘x
), 
e
);

1167 ++
gŸ_decode_îr
;

1182 i‡(
c⁄f
->
do_vÆid©e
) {

1183 i‡(
	`gëuid
 (Ë!
uid
) {

1184 
	`ouçut_msg
 (

1186 
n
, 
uid
, 
	`gëuid
 ());

1188 i‡(
	`gëgid
 (Ë!
gid
) {

1189 
	`ouçut_msg
 (

1191 
n
, 
gid
, 
	`gëgid
 ());

1193 i‡(
c⁄f
->
num_∑ylﬂd
 !
dÀn
) {

1194 
	`ouçut_msg
 (

1196 
n
, 
c⁄f
->
num_∑ylﬂd
, 
dÀn
);

1198 i‡(
d©a
 && 
	`memcmp
 (
c⁄f
->
∑ylﬂd
, d©a, 
dÀn
) != 0) {

1199 
	`ouçut_msg
 ("Cªdítü»#%luÖaylﬂd mism©ch", 
n
);

1206 i‡(
d©a
 !
NULL
) {

1207 
	`‰ì
 (
d©a
);

1210 i‡(
¸ed
 !
NULL
) {

1211 
	`‰ì
 (
¸ed
);

1213 i‡((
î∫o
 = 
±hªad_£tˇn˚l°©e


1214 (
ˇn˚l_°©e
, &cancel_state)) != 0) {

1215 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

1218 i‡((
î∫o
 = 
	`±hªad_muãx_lock
 (&
c⁄f
->
muãx
)) != 0) {

1219 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
, "FailedÅoÜock mutex");

1221 
c⁄f
->
sh¨ed
.
num_ícode_îrs
 +
gŸ_ícode_îr
;

1222 
c⁄f
->
sh¨ed
.
num_decode_îrs
 +
gŸ_decode_îr
;

1224 
	`±hªad_˛ónup_p›
 (1);

1225  (
NULL
);

1226 
	}
}

1230 
	$ªmunge_˛ónup
 (
td©a_t
 
td©a
)

1235 i‡(--
td©a
->
c⁄f
->
num_ru¬ög
 == 0) {

1236 i‡((
î∫o
 = 
	`±hªad_c⁄d_sig«l
 (&
td©a
->
c⁄f
->
c⁄d_d⁄e
)) != 0) {

1237 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
, "FailedÅo signal condition");

1240 i‡((
î∫o
 = 
	`±hªad_muãx_u∆ock
 (&
td©a
->
c⁄f
->
muãx
)) != 0) {

1241 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
, "FailedÅo unlock mutex");

1243 
	`de°roy_td©a
 (
td©a
);

1245 
	}
}

1249 
	$ouçut_msg
 (c⁄° *
f‹m©
, ...)

1254 
time_t
 
t
;

1255 
tm
Åm;

1256 
tm
 *
tm_±r
;

1257 
buf
[256];

1258 *
p
 = 
buf
;

1259 
Àn
 =  (
buf
);

1260 
n
;

1261 
va_li°
 
v¨gs
;

1263 i‡(
g_gŸ_quõt
) {

1266 i‡(!
f‹m©
) {

1269 i‡(
	`time
 (&
t
Ë=((
time_t
) -1)) {

1270 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
, "FailedÅo query currentÅime");

1272 #i‡
HAVE_LOCALTIME_R


1273 
tm_±r
 = 
	`loˇ…ime_r
 (&
t
, &
tm
);

1275 
tm_±r
 = 
	`loˇ…ime
 (&
t
);

1278 i‡(
tm_±r
 !
NULL
) {

1279 
n
 = 
	`°r·ime
 (
p
, 
Àn
, "%Y-%m-%d %H:%M:%S ", 
tm_±r
);

1280 i‡((
n
 <0Ë|| (¿>
Àn
)) {

1281 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

1284 
p
 +
n
;

1285 
Àn
 -
n
;

1287 
	`va_°¨t
 (
v¨gs
, 
f‹m©
);

1288 
n
 = 
	`v¢¥ötf
 (
p
, 
Àn
, 
f‹m©
, 
v¨gs
);

1289 
	`va_íd
 (
v¨gs
);

1291 i‡((
n
 < 0Ë|| (¿>
Àn
)) {

1292 
buf
[ (buf) - 2] = '+';

1293 
buf
[ (buf) - 1] = '\0';

1295 
	`¥ötf
 ("%s\n", 
buf
);

1297 
	}
}

	@src/munge/unmunge.c

29 #i‡
HAVE_CONFIG_H


30 
	~"c⁄fig.h
"

33 
	~<sys/ty≥s.h
>

34 
	~<√töë/ö.h
>

35 
	~<as£π.h
>

36 
	~<î∫o.h
>

37 
	~<f˙é.h
>

38 
	~<gΩ.h
>

39 
	~<limôs.h
>

40 
	~<√tdb.h
>

41 
	~<pwd.h
>

42 
	~<°dio.h
>

43 
	~<°dlib.h
>

44 
	~<°rög.h
>

45 
	~<sys/sockë.h
>

46 
	~<sys/°©.h
>

47 
	~<time.h
>

48 
	~<uni°d.h
>

49 
	~<munge.h
>

50 
	~"comm⁄.h
"

51 
	~"li˚n£.h
"

52 
	~"missög.h
"

53 
	~"ªad.h
"

54 
	~"vîsi⁄.h
"

61 
	#MAX_TIME_STR
 64

	)

68 c⁄° * c⁄° 
	gsh‹t_›ts
 = ":hLVi:nm:o:k:KS:";

70 
	~<gë›t.h
>

71 
›ti⁄
 
	gl⁄g_›ts
[] = {

72 { "hñp", 
no_¨gumít
, 
NULL
, 'h' },

73 { "li˚n£", 
no_¨gumít
, 
NULL
, 'L' },

74 { "vîsi⁄", 
no_¨gumít
, 
NULL
, 'V' },

75 { "öput", 
ªquúed_¨gumít
, 
NULL
, 'i' },

76 { "no-ouçut", 
no_¨gumít
, 
NULL
, 'n' },

77 { "mëad©a", 
ªquúed_¨gumít
, 
NULL
, 'm' },

78 { "ouçut", 
ªquúed_¨gumít
, 
NULL
, 'o' },

79 { "keys", 
ªquúed_¨gumít
, 
NULL
, 'k' },

80 { "li°-keys", 
no_¨gumít
, 
NULL
, 'K' },

81 { "sockë", 
ªquúed_¨gumít
, 
NULL
, 'S' },

82 { 
NULL
, 0, NULL, 0 }

91 
	mvÆ
;

92 *
	m°r
;

93 } 
	t°rvÆ_t
;

96 
	mMUNGE_KEY_STATUS
,

97 
	mMUNGE_KEY_ENCODE_HOST
,

98 
	mMUNGE_KEY_ENCODE_TIME
,

99 
	mMUNGE_KEY_DECODE_TIME
,

100 
	mMUNGE_KEY_TTL
,

101 
	mMUNGE_KEY_CIPHER_TYPE
,

102 
	mMUNGE_KEY_MAC_TYPE
,

103 
	mMUNGE_KEY_ZIP_TYPE
,

104 
	mMUNGE_KEY_UID
,

105 
	mMUNGE_KEY_GID
,

106 
	mMUNGE_KEY_UID_RESTRICTION
,

107 
	mMUNGE_KEY_GID_RESTRICTION
,

108 
	mMUNGE_KEY_LENGTH
,

109 
	mMUNGE_KEY_LAST


110 } 
	tmunge_key_t
;

112 
°rvÆ_t
 
	gmunge_keys
[] = {

113 { 
MUNGE_KEY_STATUS
, "STATUS" },

114 { 
MUNGE_KEY_ENCODE_HOST
, "ENCODE_HOST" },

115 { 
MUNGE_KEY_ENCODE_TIME
, "ENCODE_TIME" },

116 { 
MUNGE_KEY_DECODE_TIME
, "DECODE_TIME" },

117 { 
MUNGE_KEY_TTL
, "TTL" },

118 { 
MUNGE_KEY_CIPHER_TYPE
, "CIPHER" },

119 { 
MUNGE_KEY_MAC_TYPE
, "MAC" },

120 { 
MUNGE_KEY_ZIP_TYPE
, "ZIP" },

121 { 
MUNGE_KEY_UID
, "UID" },

122 { 
MUNGE_KEY_GID
, "GID" },

123 { 
MUNGE_KEY_UID_RESTRICTION
, "UID_RESTRICTION" },

124 { 
MUNGE_KEY_GID_RESTRICTION
, "GID_RESTRICTION" },

125 { 
MUNGE_KEY_LENGTH
, "LENGTH" },

126 { 
MUNGE_KEY_LAST
, 
NULL
 }

134 
	sc⁄f
 {

135 
munge_˘x_t
 
	m˘x
;

136 
munge_îr_t
 
	m°©us
;

137 *
	m‚_ö
;

138 *
	m‚_mëa
;

139 *
	m‚_out
;

140 
FILE
 *
	mÂ_ö
;

141 
FILE
 *
	mÂ_mëa
;

142 
FILE
 *
	mÂ_out
;

143 
	m˛í
;

144 *
	m¸ed
;

145 
	mdÀn
;

146 *
	md©a
;

147 
uid_t
 
	muid
;

148 
gid_t
 
	mgid
;

149 
	mkey
[
MUNGE_KEY_LAST
];

150 
	mkey_max_°r_Àn
;

153 
c⁄f
 * 
	tc⁄f_t
;

160 
c⁄f_t
 
¸óã_c⁄f
 ();

161 
de°roy_c⁄f
 (
c⁄f_t
 
c⁄f
);

162 
∑r£_cmdlöe
 (
c⁄f_t
 
c⁄f
, 
¨gc
, **
¨gv
);

163 
di•œy_hñp
 (*
¥og
);

164 
∑r£_keys
 (
c⁄f_t
 
c⁄f
, *
keys
);

165 
di•œy_keys
 ();

166 
›í_fûes
 (
c⁄f_t
 
c⁄f
);

167 
di•œy_mëa
 (
c⁄f_t
 
c⁄f
);

168 
di•œy_d©a
 (
c⁄f_t
 
c⁄f
);

169 
key_°r_to_vÆ
 (*
°r
);

170 * 
key_vÆ_to_°r
 (
vÆ
);

178 
	$maö
 (
¨gc
, *
¨gv
[])

180 
c⁄f_t
 
c⁄f
;

181 
rc
;

182 c⁄° *
p
;

184 i‡(
	`posig«l
 (
SIGPIPE
, 
SIG_IGN
Ë=
SIG_ERR
) {

185 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
, "FaûedÅÿign‹êsig«l=%d", 
SIGPIPE
);

187 
	`log_›í_fûe
 (
°dîr
, 
¨gv
[0], 
LOG_INFO
, 
LOG_OPT_PRIORITY
);

188 
c⁄f
 = 
	`¸óã_c⁄f
 ();

189 
	`∑r£_cmdlöe
 (
c⁄f
, 
¨gc
, 
¨gv
);

190 
	`›í_fûes
 (
c⁄f
);

192 
rc
 = 
	`ªad_d©a_‰om_fûe
 (
c⁄f
->
Â_ö
,

193 (**Ë&
c⁄f
->
¸ed
, &c⁄f->
˛í
);

194 i‡(
rc
 < 0) {

195 i‡(
î∫o
 =
ENOMEM
) {

196 
	`log_î∫o
 (
EMUNGE_NO_MEMORY
, 
LOG_ERR
, "FailedÅoÑead input");

199 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
, "ReadÉrror");

202 
c⁄f
->
°©us
 = 
	`munge_decode
 (c⁄f->
¸ed
, c⁄f->
˘x
,

203 &
c⁄f
->
d©a
, &c⁄f->
dÀn
, &c⁄f->
uid
, &c⁄f->
gid
);

210 i‡–(
c⁄f
->
°©us
 !
EMUNGE_SUCCESS
)

211 && (
c⁄f
->
°©us
 !
EMUNGE_CRED_EXPIRED
)

212 && (
c⁄f
->
°©us
 !
EMUNGE_CRED_REWOUND
)

213 && (
c⁄f
->
°©us
 !
EMUNGE_CRED_REPLAYED
) )

215 i‡(!(
p
 = 
	`munge_˘x_°ªº‹
 (
c⁄f
->
˘x
)))

216 
p
 = 
	`munge_°ªº‹
 (
c⁄f
->
°©us
);

217 
	`log_îr
 (
c⁄f
->
°©us
, 
LOG_ERR
, "%s", 
p
);

220 
	`di•œy_mëa
 (
c⁄f
);

221 
	`di•œy_d©a
 (
c⁄f
);

223 
rc
 = 
c⁄f
->
°©us
;

224 
	`de°roy_c⁄f
 (
c⁄f
);

225 
	`exô
 (
rc
);

226 
	}
}

229 
c⁄f_t


230 
	$¸óã_c⁄f
 ()

232 
c⁄f_t
 
c⁄f
;

233 
i
;

234 
Àn
;

235 
maxÀn
;

237 i‡(!(
c⁄f
 = 
	`mÆloc
 ( (conf)))) {

238 
	`log_î∫o
 (
EMUNGE_NO_MEMORY
, 
LOG_ERR
, "FailedÅoállocate conf");

240 i‡(!(
c⁄f
->
˘x
 = 
	`munge_˘x_¸óã
 ())) {

241 
	`log_î∫o
 (
EMUNGE_NO_MEMORY
, 
LOG_ERR
, "FailedÅo create conf ctx");

243 
c⁄f
->
°©us
 = -1;

244 
c⁄f
->
‚_ö
 = "-";

245 
c⁄f
->
‚_mëa
 = "-";

246 
c⁄f
->
‚_out
 = "-";

247 
c⁄f
->
Â_ö
 = 
NULL
;

248 
c⁄f
->
Â_mëa
 = 
NULL
;

249 
c⁄f
->
Â_out
 = 
NULL
;

250 
c⁄f
->
˛í
 = 0;

251 
c⁄f
->
¸ed
 = 
NULL
;

252 
c⁄f
->
dÀn
 = 0;

253 
c⁄f
->
d©a
 = 
NULL
;

254 
c⁄f
->
uid
 = -1;

255 
c⁄f
->
gid
 = -1;

256 
i
=0, 
maxÀn
=0; i<
MUNGE_KEY_LAST
; i++) {

257 
c⁄f
->
key
[
i
] = 0;

258 
Àn
 = 
	`°æí
 (
	`key_vÆ_to_°r
 (
i
));

259 
maxÀn
 = 
	`MAX
 (maxÀn, 
Àn
);

261 
c⁄f
->
key_max_°r_Àn
 = 
maxÀn
;

263  (
c⁄f
);

264 
	}
}

268 
	$de°roy_c⁄f
 (
c⁄f_t
 
c⁄f
)

273 i‡(
c⁄f
->
Â_ö
 !
NULL
) {

274 i‡(
	`f˛o£
 (
c⁄f
->
Â_ö
) < 0) {

275 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

278 
c⁄f
->
Â_ö
 = 
NULL
;

280 i‡(
c⁄f
->
Â_mëa
 !
NULL
) {

281 i‡((
	`f˛o£
 (
c⁄f
->
Â_mëa
Ë< 0Ë&& (
î∫o
 !
EPIPE
)) {

282 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

285 
c⁄f
->
Â_mëa
 = 
NULL
;

287 i‡(
c⁄f
->
Â_out
 !
NULL
) {

288 i‡(
c⁄f
->
‚_out
 && c⁄f->
‚_mëa


289 && 
	`°rcmp
 (
c⁄f
->
‚_out
, c⁄f->
‚_mëa
)) {

290 i‡((
	`f˛o£
 (
c⁄f
->
Â_out
Ë< 0Ë&& (
î∫o
 !
EPIPE
)) {

291 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

295 
c⁄f
->
Â_out
 = 
NULL
;

297 i‡(
c⁄f
->
¸ed
) {

298 
	`as£π
 (
c⁄f
->
˛í
 > 0);

299 
	`membu∫
 (
c⁄f
->
¸ed
, 0, c⁄f->
˛í
);

300 
	`‰ì
 (
c⁄f
->
¸ed
);

301 
c⁄f
->
¸ed
 = 
NULL
;

303 i‡(
c⁄f
->
d©a
) {

304 
	`as£π
 (
c⁄f
->
dÀn
 > 0);

305 
	`membu∫
 (
c⁄f
->
d©a
, 0, c⁄f->
dÀn
);

306 
	`‰ì
 (
c⁄f
->
d©a
);

307 
c⁄f
->
d©a
 = 
NULL
;

309 
	`munge_˘x_de°roy
 (
c⁄f
->
˘x
);

310 
	`‰ì
 (
c⁄f
);

312 
	}
}

316 
	$∑r£_cmdlöe
 (
c⁄f_t
 
c⁄f
, 
¨gc
, **
¨gv
)

318 
gŸ_keys
 = 0;

319 *
¥og
;

320 
c
;

321 
munge_îr_t
 
e
;

322 
i
;

324 
›ãº
 = 0;

326 
¥og
 = (¥og = 
	`°ºchr
 (
¨gv
[0], '/')) ?Örog + 1 :árgv[0];

330 
c
 = 
	`gë›t_l⁄g
 (
¨gc
, 
¨gv
, 
sh‹t_›ts
, 
l⁄g_›ts
, 
NULL
);

332 i‡(
c
 == -1) {

335 
c
) {

337 
	`di•œy_hñp
 (
¥og
);

338 
	`exô
 (
EMUNGE_SUCCESS
);

341 
	`di•œy_li˚n£
 ();

342 
	`exô
 (
EMUNGE_SUCCESS
);

345 
	`di•œy_vîsi⁄
 ();

346 
	`exô
 (
EMUNGE_SUCCESS
);

349 
c⁄f
->
‚_ö
 = 
›èrg
;

352 
c⁄f
->
‚_mëa
 = 
NULL
;

353 
c⁄f
->
‚_out
 = 
NULL
;

356 
c⁄f
->
‚_mëa
 = 
›èrg
;

359 
c⁄f
->
‚_out
 = 
›èrg
;

362 
gŸ_keys
 = 1;

363 
	`∑r£_keys
 (
c⁄f
, 
›èrg
);

366 
	`di•œy_keys
 ();

367 
	`exô
 (
EMUNGE_SUCCESS
);

370 
e
 = 
	`munge_˘x_£t
 (
c⁄f
->
˘x
, 
MUNGE_OPT_SOCKET
, 
›èrg
);

371 i‡(
e
 !
EMUNGE_SUCCESS
) {

372 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

374 
	`munge_˘x_°ªº‹
 (
c⁄f
->
˘x
));

378 i‡(
›t›t
 > 0) {

379 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

380 "InvÆid o±i⁄ \"-%c\"", 
›t›t
);

382 i‡(
›töd
 > 1) {

383 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

384 "InvÆid o±i⁄ \"%s\"", 
¨gv
[
›töd
 - 1]);

387 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

392 i‡((
›töd
 > 1)

393 && (
	`°∫cmp
 (
¨gv
[
›töd
 - 1], "--", 2) == 0)) {

394 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

396 
¨gv
[
›töd
 - 1]);

398 i‡(
›t›t
 > 0) {

399 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

400 "Missögárgumíàf‹ o±i⁄ \"-%c\"", 
›t›t
);

403 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

408 i‡((
›töd
 > 1)

409 && (
	`°∫cmp
 (
¨gv
[
›töd
 - 1], "--", 2) == 0)) {

410 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

411 "Unim∂emíãd o±i⁄ \"%s\"", 
¨gv
[
›töd
 - 1]);

414 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

415 "Unim∂emíãd o±i⁄ \"-%c\"", 
c
);

420 i‡(
¨gv
[
›töd
]) {

421 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

422 "UƒecognizedÖ¨amëî \"%s\"", 
¨gv
[
›töd
]);

426 i‡(!
gŸ_keys
) {

427 
i
=0; i<
MUNGE_KEY_LAST
; i++) {

428 
c⁄f
->
key
[
i
] = 1;

432 
	}
}

436 
	$di•œy_hñp
 (*
¥og
)

438 c⁄° 
w
 = -25;

440 
	`as£π
 (
¥og
 !
NULL
);

442 
	`¥ötf
 ("Ußge: %†[OPTIONS]\n", 
¥og
);

443 
	`¥ötf
 ("\n");

445 
	`¥ötf
 (" %*†%s\n", 
w
, "-h, --help",

448 
	`¥ötf
 (" %*†%s\n", 
w
, "-L, --license",

451 
	`¥ötf
 (" %*†%s\n", 
w
, "-V, --version",

454 
	`¥ötf
 ("\n");

456 
	`¥ötf
 (" %*†%s\n", 
w
, "-i, --input=FILE",

459 
	`¥ötf
 (" %*†%s\n", 
w
, "-n, --no-output",

462 
	`¥ötf
 (" %*†%s\n", 
w
, "-m, --metadata=FILE",

465 
	`¥ötf
 (" %*†%s\n", 
w
, "-o, --output=FILE",

468 
	`¥ötf
 ("\n");

470 
	`¥ötf
 (" %*†%s\n", 
w
, "-k, --keys=STRING",

473 
	`¥ötf
 (" %*†%s\n", 
w
, "-K, --list-keys",

476 
	`¥ötf
 (" %*†%s\n", 
w
, "-S, --socket=STRING",

479 
	`¥ötf
 ("\n");

480 
	`¥ötf
 ("By default, credentialÑead from stdin, "

483 
	}
}

487 
	$∑r£_keys
 (
c⁄f_t
 
c⁄f
, *
keys
)

489 c⁄° *
£∑øt‹s
 = " \t\n.,;";

490 *
key
;

491 
vÆ
;

493 i‡(!
keys
 || !*keys) {

496 
key
 = 
	`°πok
 (
keys
, 
£∑øt‹s
);

497 
key
 !
NULL
) {

498 
vÆ
 = 
	`key_°r_to_vÆ
 (
key
);

499 i‡(
vÆ
 >= 0) {

500 
c⁄f
->
key
[
vÆ
] = 1;

502 
key
 = 
	`°πok
 (
NULL
, 
£∑øt‹s
);

505 
	}
}

509 
	$di•œy_keys
 ()

511 
i
;

513 
	`¥ötf
 ("Metadata keys:\n\n");

514 
i
=0; i<
MUNGE_KEY_LAST
; i++) {

515 
	`¥ötf
 (" %s\n", 
munge_keys
[
i
].
°r
);

517 
	`¥ötf
 ("\n");

519 
	}
}

523 
	$›í_fûes
 (
c⁄f_t
 
c⁄f
)

525 i‡(
c⁄f
->
‚_ö
) {

526 i‡(!
	`°rcmp
 (
c⁄f
->
‚_ö
, "-")) {

527 
c⁄f
->
Â_ö
 = 
°dö
;

529 i‡(!(
c⁄f
->
Â_ö
 = 
	`f›í
 (c⁄f->
‚_ö
, "r"))) {

530 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

531 "FaûedÅÿªad from \"%s\"", 
c⁄f
->
‚_ö
);

534 i‡(
c⁄f
->
‚_mëa
) {

535 i‡(!
	`°rcmp
 (
c⁄f
->
‚_mëa
, "-")) {

536 
c⁄f
->
Â_mëa
 = 
°dout
;

538 i‡(
c⁄f
->
‚_ö
 && !
	`°rcmp
 (c⁄f->
‚_mëa
, conf->fn_in)) {

539 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

541 
c⁄f
->
‚_mëa
);

543 i‡(!(
c⁄f
->
Â_mëa
 = 
	`f›í
 (c⁄f->
‚_mëa
, "w"))) {

544 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

545 "FaûedÅÿwrôêtÿ\"%s\"", 
c⁄f
->
‚_mëa
);

548 i‡(
c⁄f
->
‚_out
) {

549 i‡(!
	`°rcmp
 (
c⁄f
->
‚_out
, "-")) {

550 
c⁄f
->
Â_out
 = 
°dout
;

552 i‡(
c⁄f
->
‚_ö
 && !
	`°rcmp
 (c⁄f->
‚_out
, conf->fn_in)) {

553 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

555 
c⁄f
->
‚_out
);

557 i‡(
c⁄f
->
‚_mëa
 && !
	`°rcmp
 (c⁄f->
‚_out
, conf->fn_meta)) {

558 
c⁄f
->
Â_out
 = c⁄f->
Â_mëa
;

560 i‡(!(
c⁄f
->
Â_out
 = 
	`f›í
 (c⁄f->
‚_out
, "w"))) {

561 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

562 "FaûedÅÿwrôêtÿ\"%s\"", 
c⁄f
->
‚_out
);

566 
	}
}

570 
	$di•œy_mëa
 (
c⁄f_t
 
c⁄f
)

572 
∑d
;

573 *
s
;

574 
w
;

575 
munge_îr_t
 
e
;

576 
ö_addr
 
addr
;

577 
ho°ít
 *
h±r
;

578 
ù_buf
[
INET_ADDRSTRLEN
];

579 
time_t
 
t
;

580 
tm
 *
tm_±r
;

581 
t_Àn
;

582 
t_buf
[
MAX_TIME_STR
];

583 
i
;

584 
∑sswd
 *
pw_±r
;

585 
group
 *
gr_±r
;

587 i‡(!
c⁄f
->
Â_mëa
) {

590 
∑d
 = 
c⁄f
->
key_max_°r_Àn
 + 2;

592 i‡(
c⁄f
->
key
[
MUNGE_KEY_STATUS
]) {

593 
s
 = 
	`key_vÆ_to_°r
 (
MUNGE_KEY_STATUS
);

594 
w
 = 
∑d
 - 
	`°æí
 (
s
);

595 
	`Ârötf
 (
c⁄f
->
Â_mëa
, "%s:%*c%†(%d)\n", 
s
, 
w
, 0x20,

596 
	`munge_°ªº‹
 (
c⁄f
->
°©us
), conf->status);

598 i‡(
c⁄f
->
key
[
MUNGE_KEY_ENCODE_HOST
]) {

599 c⁄° 
ö_addr
 
addr_£¡öñ
 = {0};

600 
e
 = 
	`munge_˘x_gë
 (
c⁄f
->
˘x
, 
MUNGE_OPT_ADDR4
, &
addr
);

601 i‡(
e
 !
EMUNGE_SUCCESS
) {

602 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

604 
	`munge_˘x_°ªº‹
 (
c⁄f
->
˘x
));

606 
h±r
 = (
	`memcmp
 (&
addr
, &
addr_£¡öñ
,  (addr)))

607 ? 
	`gëho°byaddr
 ((*Ë&
addr
,  (addr), 
AF_INET
)

608 : 
NULL
;

609 i‡(!
	`öë_¡›
 (
AF_INET
, &
addr
, 
ù_buf
,  (ip_buf))) {

610 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

613 
s
 = 
	`key_vÆ_to_°r
 (
MUNGE_KEY_ENCODE_HOST
);

614 
w
 = 
∑d
 - 
	`°æí
 (
s
);

615 
	`Ârötf
 (
c⁄f
->
Â_mëa
, "%s:%*c%†(%s)\n", 
s
, 
w
, 0x20,

616 (
h±r
 ? h±r->
h_«me
 : "???"), 
ù_buf
);

618 i‡(
c⁄f
->
key
[
MUNGE_KEY_ENCODE_TIME
]) {

619 
e
 = 
	`munge_˘x_gë
 (
c⁄f
->
˘x
, 
MUNGE_OPT_ENCODE_TIME
, &
t
);

620 i‡(
e
 !
EMUNGE_SUCCESS
) {

621 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

623 
	`munge_˘x_°ªº‹
 (
c⁄f
->
˘x
));

625 
tm_±r
 = 
	`loˇ…ime
 (&
t
);

626 
t_Àn
 = 
	`°r·ime
 (
t_buf
,  (t_buf),

627 "%Y-%m-%d %H:%M:%S %z", 
tm_±r
);

628 i‡((
t_Àn
 =0Ë|| (t_À¿> (
t_buf
))) {

629 
	`log_îr
 (
EMUNGE_OVERFLOW
, 
LOG_ERR
,

634 i‡(
	`°rˇtf
 (
t_buf
,  (t_buf), " (%ld)", (Ë
t
) < 0) {

635 
	`log_îr
 (
EMUNGE_OVERFLOW
, 
LOG_ERR
,

638 
s
 = 
	`key_vÆ_to_°r
 (
MUNGE_KEY_ENCODE_TIME
);

639 
w
 = 
∑d
 - 
	`°æí
 (
s
);

640 
	`Ârötf
 (
c⁄f
->
Â_mëa
, "%s:%*c%s\n", 
s
, 
w
, 0x20, 
t_buf
);

642 i‡(
c⁄f
->
key
[
MUNGE_KEY_DECODE_TIME
]) {

643 
e
 = 
	`munge_˘x_gë
 (
c⁄f
->
˘x
, 
MUNGE_OPT_DECODE_TIME
, &
t
);

644 i‡(
e
 !
EMUNGE_SUCCESS
) {

645 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

647 
	`munge_˘x_°ªº‹
 (
c⁄f
->
˘x
));

649 
tm_±r
 = 
	`loˇ…ime
 (&
t
);

650 
t_Àn
 = 
	`°r·ime
 (
t_buf
,  (t_buf),

651 "%Y-%m-%d %H:%M:%S %z", 
tm_±r
);

652 i‡((
t_Àn
 =0Ë|| (t_À¿> (
t_buf
))) {

653 
	`log_îr
 (
EMUNGE_OVERFLOW
, 
LOG_ERR
,

658 i‡(
	`°rˇtf
 (
t_buf
,  (t_buf), " (%ld)", (Ë
t
) < 0) {

659 
	`log_îr
 (
EMUNGE_OVERFLOW
, 
LOG_ERR
,

662 
s
 = 
	`key_vÆ_to_°r
 (
MUNGE_KEY_DECODE_TIME
);

663 
w
 = 
∑d
 - 
	`°æí
 (
s
);

664 
	`Ârötf
 (
c⁄f
->
Â_mëa
, "%s:%*c%s\n", 
s
, 
w
, 0x20, 
t_buf
);

666 i‡(
c⁄f
->
key
[
MUNGE_KEY_TTL
]) {

667 
e
 = 
	`munge_˘x_gë
 (
c⁄f
->
˘x
, 
MUNGE_OPT_TTL
, &
i
);

668 i‡(
e
 !
EMUNGE_SUCCESS
) {

669 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

671 
	`munge_˘x_°ªº‹
 (
c⁄f
->
˘x
));

673 
s
 = 
	`key_vÆ_to_°r
 (
MUNGE_KEY_TTL
);

674 
w
 = 
∑d
 - 
	`°æí
 (
s
);

675 
	`Ârötf
 (
c⁄f
->
Â_mëa
, "%s:%*c%d\n", 
s
, 
w
, 0x20, 
i
);

677 i‡(
c⁄f
->
key
[
MUNGE_KEY_CIPHER_TYPE
]) {

678 
e
 = 
	`munge_˘x_gë
 (
c⁄f
->
˘x
, 
MUNGE_OPT_CIPHER_TYPE
, &
i
);

679 i‡(
e
 !
EMUNGE_SUCCESS
) {

680 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

682 
	`munge_˘x_°ªº‹
 (
c⁄f
->
˘x
));

684 
s
 = 
	`key_vÆ_to_°r
 (
MUNGE_KEY_CIPHER_TYPE
);

685 
w
 = 
∑d
 - 
	`°æí
 (
s
);

686 
	`Ârötf
 (
c⁄f
->
Â_mëa
, "%s:%*c%†(%d)\n", 
s
, 
w
, 0x20,

687 
	`munge_íum_öt_to_°r
 (
MUNGE_ENUM_CIPHER
, 
i
), i);

689 i‡(
c⁄f
->
key
[
MUNGE_KEY_MAC_TYPE
]) {

690 
e
 = 
	`munge_˘x_gë
 (
c⁄f
->
˘x
, 
MUNGE_OPT_MAC_TYPE
, &
i
);

691 i‡(
e
 !
EMUNGE_SUCCESS
) {

692 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

694 
	`munge_˘x_°ªº‹
 (
c⁄f
->
˘x
));

696 
s
 = 
	`key_vÆ_to_°r
 (
MUNGE_KEY_MAC_TYPE
);

697 
w
 = 
∑d
 - 
	`°æí
 (
s
);

698 
	`Ârötf
 (
c⁄f
->
Â_mëa
, "%s:%*c%†(%d)\n", 
s
, 
w
, 0x20,

699 
	`munge_íum_öt_to_°r
 (
MUNGE_ENUM_MAC
, 
i
), i);

701 i‡(
c⁄f
->
key
[
MUNGE_KEY_ZIP_TYPE
]) {

702 
e
 = 
	`munge_˘x_gë
 (
c⁄f
->
˘x
, 
MUNGE_OPT_ZIP_TYPE
, &
i
);

703 i‡(
e
 !
EMUNGE_SUCCESS
) {

704 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

706 
	`munge_˘x_°ªº‹
 (
c⁄f
->
˘x
));

708 
s
 = 
	`key_vÆ_to_°r
 (
MUNGE_KEY_ZIP_TYPE
);

709 
w
 = 
∑d
 - 
	`°æí
 (
s
);

710 
	`Ârötf
 (
c⁄f
->
Â_mëa
, "%s:%*c%†(%d)\n", 
s
, 
w
, 0x20,

711 
	`munge_íum_öt_to_°r
 (
MUNGE_ENUM_ZIP
, 
i
), i);

713 i‡(
c⁄f
->
key
[
MUNGE_KEY_UID
]) {

714 
pw_±r
 = 
	`gëpwuid
 (
c⁄f
->
uid
);

715 
s
 = 
	`key_vÆ_to_°r
 (
MUNGE_KEY_UID
);

716 
w
 = 
∑d
 - 
	`°æí
 (
s
);

717 
	`Ârötf
 (
c⁄f
->
Â_mëa
, "%s:%*c%†(%d)\n", 
s
, 
w
, 0x20,

718 (
pw_±r
 ?Öw_±r->
pw_«me
 : "???"), (Ë
c⁄f
->
uid
);

720 i‡(
c⁄f
->
key
[
MUNGE_KEY_GID
]) {

721 
gr_±r
 = 
	`gëgrgid
 (
c⁄f
->
gid
);

722 
s
 = 
	`key_vÆ_to_°r
 (
MUNGE_KEY_GID
);

723 
w
 = 
∑d
 - 
	`°æí
 (
s
);

724 
	`Ârötf
 (
c⁄f
->
Â_mëa
, "%s:%*c%†(%d)\n", 
s
, 
w
, 0x20,

725 (
gr_±r
 ? gr_±r->
gr_«me
 : "???"), (Ë
c⁄f
->
gid
);

727 i‡(
c⁄f
->
key
[
MUNGE_KEY_UID_RESTRICTION
]) {

728 
e
 = 
	`munge_˘x_gë
 (
c⁄f
->
˘x
, 
MUNGE_OPT_UID_RESTRICTION
, &
i
);

729 i‡(
e
 !
EMUNGE_SUCCESS
) {

730 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

732 
	`munge_˘x_°ªº‹
 (
c⁄f
->
˘x
));

734 i‡(
i
 !
MUNGE_UID_ANY
) {

735 
pw_±r
 = 
	`gëpwuid
 (
i
);

736 
s
 = 
	`key_vÆ_to_°r
 (
MUNGE_KEY_UID_RESTRICTION
);

737 
w
 = 
∑d
 - 
	`°æí
 (
s
);

738 
	`Ârötf
 (
c⁄f
->
Â_mëa
, "%s:%*c%†(%d)\n", 
s
, 
w
, 0x20,

739 (
pw_±r
 ?Öw_±r->
pw_«me
 : "???"), 
i
);

742 i‡(
c⁄f
->
key
[
MUNGE_KEY_GID_RESTRICTION
]) {

743 
e
 = 
	`munge_˘x_gë
 (
c⁄f
->
˘x
, 
MUNGE_OPT_GID_RESTRICTION
, &
i
);

744 i‡(
e
 !
EMUNGE_SUCCESS
) {

745 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

747 
	`munge_˘x_°ªº‹
 (
c⁄f
->
˘x
));

749 i‡(
i
 !
MUNGE_GID_ANY
) {

750 
gr_±r
 = 
	`gëgrgid
 (
i
);

751 
s
 = 
	`key_vÆ_to_°r
 (
MUNGE_KEY_GID_RESTRICTION
);

752 
w
 = 
∑d
 - 
	`°æí
 (
s
);

753 
	`Ârötf
 (
c⁄f
->
Â_mëa
, "%s:%*c%†(%d)\n", 
s
, 
w
, 0x20,

754 (
gr_±r
 ? gr_±r->
gr_«me
 : "???"), 
i
);

757 i‡(
c⁄f
->
key
[
MUNGE_KEY_LENGTH
]) {

758 
s
 = 
	`key_vÆ_to_°r
 (
MUNGE_KEY_LENGTH
);

759 
w
 = 
∑d
 - 
	`°æí
 (
s
);

760 
	`Ârötf
 (
c⁄f
->
Â_mëa
, "%s:%*c%d\n", 
s
, 
w
, 0x20, c⁄f->
dÀn
);

765 i‡(
	`„º‹
 (
c⁄f
->
Â_mëa
)) {

766 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
, "WriteÉrror");

771 i‡(
c⁄f
->
Â_mëa
 =c⁄f->
Â_out
) {

772 
	`Ârötf
 (
c⁄f
->
Â_mëa
, "\n");

775 
	}
}

779 
	$di•œy_d©a
 (
c⁄f_t
 
c⁄f
)

781 i‡((
c⁄f
->
dÀn
 <0Ë|| (!c⁄f->
d©a
)) {

784 i‡(!
c⁄f
->
Â_out
) {

787 i‡(
	`fwrôe
 (
c⁄f
->
d©a
, 1, c⁄f->
dÀn
, c⁄f->
Â_out
) != conf->dlen) {

788 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
, "WriteÉrror");

792 i‡(
	`ißây
 (
	`fûío
 (
c⁄f
->
Â_out
)) &&

793 ((*Ë
c⁄f
->
d©a
Ë[c⁄f->
dÀn
 - 1] != '\n') {

794 
	`Ârötf
 (
c⁄f
->
Â_out
, "\n");

797 
	}
}

801 
	$key_°r_to_vÆ
 (*
°r
)

803 
i
;

805 i‡(!
°r
 || !*str) {

808 
i
=0; i<
MUNGE_KEY_LAST
; i++) {

809 i‡(!
	`°rˇ£cmp
 (
°r
, 
munge_keys
[
i
].str)) {

810  (
i
);

814 
	}
}

818 
	$key_vÆ_to_°r
 (
vÆ
)

820 
i
;

822 
i
=0; i<
MUNGE_KEY_LAST
; i++) {

823 i‡(
vÆ
 =
munge_keys
[
i
].val) {

824  (
munge_keys
[
i
].
°r
);

827  (
NULL
);

828 
	}
}

	@src/munged/auth_recv.c

29 #i‡
HAVE_CONFIG_H


30 
	~<c⁄fig.h
>

33 
	~<î∫o.h
>

34 
	~<°rög.h
>

35 
	~<sys/°©.h
>

36 
	~<uni°d.h
>

37 
	~<munge.h
>

38 
	~"log.h
"

39 
	~"m_msg.h
"

40 
	~"∑th.h
"

47 
_check_auth_£rvî_dú
 (c⁄° *
dú
, 
gŸ_f‹˚
);

48 
_check_auth_˛õ¡_dú
 (c⁄° *
dú
, 
gŸ_f‹˚
);

51 
	$auth_ªcv_öô
 (c⁄° *
§vrdú
, c⁄° *
˛¡dú
, 
gŸ_f‹˚
)

53 #ifde‡
AUTH_METHOD_RECVFD_MKNOD


54 i‡(
	`gëeuid
 () != 0) {

55 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

60 
	`_check_auth_£rvî_dú
 (
§vrdú
, 
gŸ_f‹˚
);

61 
	`_check_auth_˛õ¡_dú
 (
˛¡dú
, 
gŸ_f‹˚
);

64 
	}
}

67 
	$_check_auth_£rvî_dú
 (c⁄° *
dú
, 
gŸ_f‹˚
)

69 #i‡
	`deföed
(
AUTH_METHOD_RECVFD_MKFIFO
Ë|| deföed(
AUTH_METHOD_RECVFD_MKNOD
)

70 
gŸ_symlök
;

71 
°©
 
°
;

72 
n
;

73 
ebuf
 [1024];

75 i‡((
dú
 =
NULL
) || (*dir == '\0')) {

76 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

81 
gŸ_symlök
 = (
	`l°©
 (
dú
, &
°
Ë=0Ë? 
	`S_ISLNK
 (°.
°_mode
) : 0;

83 i‡(
	`°©
 (
dú
, &
°
) < 0) {

84 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

85 "FaûedÅÿ°©áuth sîvî dú \"%s\"", 
dú
);

87 i‡(!
	`S_ISDIR
 (
°
.
°_mode
Ë|| 
gŸ_symlök
) {

88 i‡(!
gŸ_f‹˚
 || !
gŸ_symlök
)

89 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

91 "\"%s\" mu° bê®dúe˘‹y", 
dú
);

93 
	`log_msg
 (
LOG_WARNING
,

95 "\"%s\" shouldÇŸ bê®symlök", 
dú
);

97 i‡(
°
.
°_uid
 !
	`gëeuid
 ()) {

98 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

100 "\"%s\" mu° bêow√d by UID %u", 
dú
, (Ë
	`gëeuid
 ());

102 i‡(!(
°
.
°_mode
 & 
S_IWUSR
)) {

103 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

105 "\"%s\" mu° bêwrôabÀ by u£r", 
dú
);

107 i‡(
°
.
°_mode
 & (
S_IRGRP
 | 
S_IROTH
)) {

108 i‡(!
gŸ_f‹˚
)

109 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

111 "\"%s\" shouldÇŸ bêªadabÀ by grou∞‹ w‹ld", 
dú
);

113 
	`log_msg
 (
LOG_WARNING
,

115 "\"%s\" shouldÇŸ bêªadabÀ by grou∞‹ w‹ld", 
dú
);

119 
n
 = 
	`∑th_is_£cuª
 (
dú
, 
ebuf
,  (ebuf));

120 i‡(
n
 < 0) {

121 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

122 "FaûedÅÿcheckáuth sîvî dú \"%s\": %s", 
dú
, 
ebuf
);

124 i‡((
n
 =0Ë&& (!
gŸ_f‹˚
)) {

125 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

126 "Thêauth sîvî dú i†ö£cuª: %s", 
ebuf
);

128 i‡(
n
 == 0) {

129 
	`log_msg
 (
LOG_WARNING
,

130 "Thêauth sîvî dú i†ö£cuª: %s", 
ebuf
);

134 
n
 = 
	`∑th_is_ac˚ssibÀ
 (
dú
, 
ebuf
,  (ebuf));

135 i‡(
n
 < 0) {

136 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

137 "FaûedÅÿcheckáuth sîvî dú \"%s\": %s", 
dú
, 
ebuf
);

139 i‡((
n
 =0Ë&& (!
gŸ_f‹˚
)) {

140 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

141 "Thêauth sîvî dú i†öac˚ssibÀ: %s", 
ebuf
);

143 i‡(
n
 == 0) {

144 
	`log_msg
 (
LOG_WARNING
,

145 "Thêauth sîvî dú i†öac˚ssibÀ: %s", 
ebuf
);

149 
	}
}

152 
	$_check_auth_˛õ¡_dú
 (c⁄° *
dú
, 
gŸ_f‹˚
)

154 #i‡
	`deföed
(
AUTH_METHOD_RECVFD_MKFIFO
Ë|| deföed(
AUTH_METHOD_RECVFD_MKNOD
)

155 
gŸ_symlök
;

156 
°©
 
°
;

157 
n
;

158 
dúdú
 [
PATH_MAX
];

159 
ebuf
 [1024];

161 i‡((
dú
 =
NULL
) || (*dir == '\0')) {

162 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

167 
gŸ_symlök
 = (
	`l°©
 (
dú
, &
°
Ë=0Ë? 
	`S_ISLNK
 (°.
°_mode
) : 0;

169 i‡(
	`°©
 (
dú
, &
°
) < 0) {

170 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

171 "FaûedÅÿcheckáuth clõ¡ dú \"%s\"", 
dú
);

173 i‡(!
	`S_ISDIR
 (
°
.
°_mode
Ë|| 
gŸ_symlök
) {

174 i‡(!
gŸ_f‹˚
 || !
gŸ_symlök
)

175 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

177 "\"%s\" mu° bê®dúe˘‹y", 
dú
);

179 
	`log_msg
 (
LOG_WARNING
,

181 "\"%s\" shouldÇŸ bê®symlök", 
dú
);

183 i‡((
°
.
°_uid
 !0Ë&& (°.°_uid !
	`gëeuid
 ())) {

184 i‡(!
gŸ_f‹˚
)

185 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

187 "övÆid ow√rshù o‡\"%s\"", 
dú
);

189 
	`log_msg
 (
LOG_WARNING
,

191 "övÆid ow√rshù o‡\"%s\"", 
dú
);

193 i‡((
°
.
°_mode
 & (
S_IWUSR
 | 
S_IWGRP
 | 
S_IWOTH
 | 
S_ISVTX
))

194 !(
S_IWUSR
 | 
S_IWGRP
 | 
S_IWOTH
 | 
S_ISVTX
)) {

195 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

197 "\"%s\" mu° bêwrôabÀ byáŒ wôhÅhê°icky bô së", 
dú
);

201 i‡(
	`∑th_dú«me
 (
dú
, 
dúdú
,  (dirdir)) < 0) {

202 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

203 "FaûedÅÿdëîmöêdú«mêo‡auth clõ¡ dú \"%s\"", 
dú
);

205 
n
 = 
	`∑th_is_£cuª
 (
dúdú
, 
ebuf
,  (ebuf));

206 i‡(
n
 < 0) {

207 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

208 "FaûedÅÿcheckáuth clõ¡Ö¨íàdú \"%s\": %s", 
dúdú
, 
ebuf
);

210 i‡((
n
 =0Ë&& (!
gŸ_f‹˚
)) {

211 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

212 "Thêauth clõ¡ dú i†ö£cuª: %s", 
ebuf
);

214 i‡(
n
 == 0) {

215 
	`log_msg
 (
LOG_WARNING
,

216 "Thêauth clõ¡ dú i†ö£cuª: %s", 
ebuf
);

220 
n
 = 
	`∑th_is_ac˚ssibÀ
 (
dú
, 
ebuf
,  (ebuf));

221 i‡(
n
 < 0) {

222 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

223 "FaûedÅÿcheckáuth clõ¡ dú \"%s\": %s", 
dú
, 
ebuf
);

225 i‡((
n
 =0Ë&& (!
gŸ_f‹˚
)) {

226 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

227 "Thêauth clõ¡ dú i†öac˚ssibÀ: %s", 
ebuf
);

229 i‡(
n
 == 0) {

230 
	`log_msg
 (
LOG_WARNING
,

231 "Thêauth clõ¡ dú i†öac˚ssibÀ: %s", 
ebuf
);

235 
	}
}

242 #ifde‡
AUTH_METHOD_GETPEEREID


244 
	~<sys/sockë.h
>

245 
	~<sys/ty≥s.h
>

248 
	$auth_ªcv
 (
m_msg_t
 
m
, 
uid_t
 *
uid
, 
gid_t
 *
gid
)

250 i‡(
	`gë≥îeid
 (
m
->
sd
, 
uid
, 
gid
) < 0) {

251 
	`log_msg
 (
LOG_ERR
, "FaûedÅÿgëÖì∏idítôy: %s", 
	`°ªº‹
 (
î∫o
));

255 
	}
}

264 #ifde‡
AUTH_METHOD_GETPEERUCRED


266 
	~<u¸ed.h
>

269 
	$auth_ªcv
 (
m_msg_t
 
m
, 
uid_t
 *
uid
, 
gid_t
 *
gid
)

271 
u¸ed_t
 *
u¸ed
 = 
NULL
;

272 
uid_t
 
uid_tmp
;

273 
gid_t
 
gid_tmp
;

274 
rc
 = -1;

276 i‡(
	`gë≥îu¸ed
 (
m
->
sd
, &
u¸ed
) < 0) {

277 
	`log_msg
 (
LOG_ERR
, "FaûedÅÿgëÖì∏u¸ed: %s", 
	`°ªº‹
 (
î∫o
));

279 i‡((
uid_tmp
 = 
	`u¸ed_gëeuid
 (
u¸ed
)) < 0) {

280 
	`log_msg
 (
LOG_ERR
, "FaûedÅÿgëÖì∏UID: %s", 
	`°ªº‹
 (
î∫o
));

282 i‡((
gid_tmp
 = 
	`u¸ed_gëegid
 (
u¸ed
)) < 0) {

283 
	`log_msg
 (
LOG_ERR
, "FaûedÅÿgëÖì∏GID: %s", 
	`°ªº‹
 (
î∫o
));

286 *
uid
 = 
uid_tmp
;

287 *
gid
 = 
gid_tmp
;

288 
rc
 = 0;

291 i‡(
u¸ed
) {

292 
	`u¸ed_‰ì
 (
u¸ed
);

294  (
rc
);

295 
	}
}

304 #ifde‡
AUTH_METHOD_SO_PEERCRED


306 
	~<sys/sockë.h
>

308 #i‚de‡
HAVE_SOCKLEN_T


309 
	tsockÀn_t
;

313 
	$auth_ªcv
 (
m_msg_t
 
m
, 
uid_t
 *
uid
, 
gid_t
 *
gid
)

315 
u¸ed
 
¸ed
;

316 
sockÀn_t
 
Àn
 =  (
¸ed
);

318 i‡(
	`gësock›t
 (
m
->
sd
, 
SOL_SOCKET
, 
SO_PEERCRED
, &
¸ed
, &
Àn
) < 0) {

319 
	`log_msg
 (
LOG_ERR
, "FaûedÅÿgëÖì∏idítôy: %s", 
	`°ªº‹
 (
î∫o
));

322 *
uid
 = 
¸ed
.uid;

323 *
gid
 = 
¸ed
.gid;

325 
	}
}

334 #ifde‡
AUTH_METHOD_LOCAL_PEERCRED


336 
	~<sys/∑øm.h
>

337 
	~<sys/sockë.h
>

338 
	~<sys/u¸ed.h
>

339 
	~<sys/un.h
>

341 #i‚de‡
HAVE_SOCKLEN_T


342 
	tsockÀn_t
;

346 
	$auth_ªcv
 (
m_msg_t
 
m
, 
uid_t
 *
uid
, 
gid_t
 *
gid
)

348 
xu¸ed
 
¸ed
;

349 
sockÀn_t
 
Àn
 =  (
¸ed
);

351 i‡(
	`gësock›t
 (
m
->
sd
, 0, 
LOCAL_PEERCRED
, &
¸ed
, &
Àn
) < 0) {

352 
	`log_msg
 (
LOG_ERR
, "FaûedÅÿgëÖì∏idítôy: %s", 
	`°ªº‹
 (
î∫o
));

355 i‡(
¸ed
.
¸_vîsi⁄
 !
XUCRED_VERSION
) {

356 
	`log_msg
 (
LOG_ERR
, "FailedÅo getÖeer identity: invalid xucred v%d",

357 
¸ed
.
¸_vîsi⁄
);

360 *
uid
 = 
¸ed
.
¸_uid
;

361 *
gid
 = 
¸ed
.
¸_gid
;

363 
	}
}

372 #ifde‡
AUTH_METHOD_RECVFD_MKFIFO


374 
	~<as£π.h
>

375 
	~<f˙é.h
>

376 
	~<°dlib.h
>

377 
	~<°r›ts.h
>

378 
	~<sys/io˘l.h
>

379 
	~<sys/°©.h
>

381 
_«me_auth_pùe
 (**
pùe_«me_p
);

382 
_£nd_auth_ªq
 (
sd
, c⁄° *
pùe_«me
);

385 
	$auth_ªcv
 (
m_msg_t
 
m
, 
uid_t
 *
uid
, 
gid_t
 *
gid
)

387 *
pùe_«me
 = 
NULL
;

388 
pùe_fd
 = -1;

389 
°ºecvfd
 
ªcvfd
;

391 i‡(
	`_«me_auth_pùe
 (&
pùe_«me
) < 0) {

392 
	`log_msg
 (
LOG_ERR
, "FailedÅoÇameáuthÖipe");

393 
îr
;

395 
	`as£π
 (
pùe_«me
 !
NULL
);

396 (Ë
	`u∆ök
 (
pùe_«me
);

401 i‡(
	`mkfifo
 (
pùe_«me
, 
S_IWUSR
 | 
S_IRUSR
 | 
S_IRGRP
 | 
S_IROTH
) < 0) {

402 
	`log_msg
 (
LOG_ERR
, "FailedÅo createáuthÖipe \"%s\": %s",

403 
pùe_«me
, 
	`°ªº‹
 (
î∫o
));

404 
îr
;

406 i‡(
	`_£nd_auth_ªq
 (
m
->
sd
, 
pùe_«me
) < 0) {

407 
	`log_msg
 (
LOG_ERR
, "FailedÅo sendáuthÑequest");

408 
îr
;

414 i‡((
pùe_fd
 = 
	`›í
 (
pùe_«me
, 
O_RDONLY
)) < 0) {

415 
	`log_msg
 (
LOG_ERR
, "FailedÅo openáuthÖipe \"%s\": %s",

416 
pùe_«me
, 
	`°ªº‹
 (
î∫o
));

417 
îr
;

419 i‡(
	`io˘l
 (
pùe_fd
, 
I_RECVFD
, &
ªcvfd
) < 0) {

420 
	`log_msg
 (
LOG_ERR
, "FailedÅoÑeceive client identity: %s",

421 
	`°ªº‹
 (
î∫o
));

422 
îr
;

427 i‡(
	`˛o£
 (
ªcvfd
.
fd
) < 0) {

428 
	`log_msg
 (
LOG_WARNING
, "FailedÅo closeáuth fd from \"%s\": %s",

429 
pùe_«me
, 
	`°ªº‹
 (
î∫o
));

431 i‡(
	`˛o£
 (
pùe_fd
) < 0) {

432 
	`log_msg
 (
LOG_WARNING
, "FailedÅo closeáuthÖipe \"%s\": %s",

433 
pùe_«me
, 
	`°ªº‹
 (
î∫o
));

435 i‡(
	`u∆ök
 (
pùe_«me
) < 0) {

436 
	`log_msg
 (
LOG_WARNING
, "FailedÅoÑemoveáuthÖipe \"%s\": %s",

437 
pùe_«me
, 
	`°ªº‹
 (
î∫o
));

439 *
uid
 = 
ªcvfd
.uid;

440 *
gid
 = 
ªcvfd
.gid;

441 
	`‰ì
 (
pùe_«me
);

444 
îr
:

445 i‡(
pùe_fd
 >= 0) {

446 (Ë
	`˛o£
 (
pùe_fd
);

448 i‡(
pùe_«me
 !
NULL
) {

449 (Ë
	`u∆ök
 (
pùe_«me
);

450 
	`‰ì
 (
pùe_«me
);

453 
	}
}

462 #ifde‡
AUTH_METHOD_RECVFD_MKNOD


464 
	~<as£π.h
>

465 
	~<f˙é.h
>

466 
	~<°dlib.h
>

467 
	~<°r›ts.h
>

468 
	~<sys/io˘l.h
>

469 
	~<sys/°©.h
>

470 
	~<sys/°ªam.h
>

471 
	~<sys/uio.h
>

473 
_ns_pùe
 (c⁄° *
«me
, 
fds
[2]);

474 
_s_pùe
 (
fd
[2]);

475 
_«me_auth_pùe
 (**
d°
);

476 
_£nd_auth_ªq
 (
sd
, c⁄° *
pùe_«me
);

479 
	$auth_ªcv
 (
m_msg_t
 
m
, 
uid_t
 *
uid
, 
gid_t
 *
gid
)

481 *
pùe_«me
 = 
NULL
;

482 
pùe_fds
[2] = {-1, -1};

483 
°ºecvfd
 
ªcvfd
;

485 i‡(
	`_«me_auth_pùe
 (&
pùe_«me
) < 0) {

486 
	`log_msg
 (
LOG_ERR
, "FailedÅoÇameáuthÖipe");

487 
îr
;

489 
	`as£π
 (
pùe_«me
 !
NULL
);

494 i‡((
	`_ns_pùe
 (
pùe_«me
, 
pùe_fds
)) < 0) {

495 
	`log_msg
 (
LOG_ERR
, "FaûedÅÿ¸óãáuthÖùê\"%s\"", 
pùe_«me
);

496 
îr
;

498 i‡(
	`_£nd_auth_ªq
 (
m
->
sd
, 
pùe_«me
) < 0) {

499 
	`log_msg
 (
LOG_ERR
, "FailedÅo sendáuthÑequest");

500 
îr
;

504 i‡(
	`io˘l
 (
pùe_fds
[0], 
I_RECVFD
, &
ªcvfd
) < 0) {

505 
	`log_msg
 (
LOG_ERR
, "FailedÅoÑeceive client identity: %s",

506 
	`°ªº‹
 (
î∫o
));

507 
îr
;

512 i‡(
	`˛o£
 (
ªcvfd
.
fd
) < 0) {

513 
	`log_msg
 (
LOG_WARNING
, "FailedÅo closeáuth fd from \"%s\": %s",

514 
pùe_«me
, 
	`°ªº‹
 (
î∫o
));

516 i‡(
	`˛o£
 (
pùe_fds
[0]) < 0) {

517 
	`log_msg
 (
LOG_WARNING
,

519 
pùe_«me
, 
	`°ªº‹
 (
î∫o
));

521 i‡(
	`˛o£
 (
pùe_fds
[1]) < 0) {

522 
	`log_msg
 (
LOG_WARNING
,

524 
pùe_«me
, 
	`°ªº‹
 (
î∫o
));

526 i‡(
	`u∆ök
 (
pùe_«me
) < 0) {

527 
	`log_msg
 (
LOG_WARNING
, "FailedÅoÑemoveáuthÖipe \"%s\": %s",

528 
pùe_«me
, 
	`°ªº‹
 (
î∫o
));

530 *
uid
 = 
ªcvfd
.uid;

531 *
gid
 = 
ªcvfd
.gid;

532 
	`‰ì
 (
pùe_«me
);

535 
îr
:

536 i‡(
pùe_fds
[0] >= 0) {

537 (Ë
	`˛o£
 (
pùe_fds
[0]);

539 i‡(
pùe_fds
[1] >= 0) {

540 (Ë
	`˛o£
 (
pùe_fds
[1]);

542 i‡(
pùe_«me
 !
NULL
) {

543 (Ë
	`u∆ök
 (
pùe_«me
);

544 
	`‰ì
 (
pùe_«me
);

547 
	}
}

550 
	$_ns_pùe
 (c⁄° *
«me
, 
fd
[2])

561 
omask
;

562 
°©
 
°buf
;

566 i‡(
	`_s_pùe
 (
fd
) < 0) {

571 
omask
 = 
	`umask
 (0);

575 (Ë
	`u∆ök
 (
«me
);

579 i‡(
	`f°©
 (
fd
[1], &
°buf
) < 0) {

580 (Ë
	`˛o£
 (
fd
[0]);

581 (Ë
	`˛o£
 (
fd
[1]);

587 i‡(
	`mknod
 (
«me
, 
S_IFCHR
 | 0666, 
°buf
.
°_rdev
) < 0) {

588 (Ë
	`˛o£
 (
fd
[0]);

589 (Ë
	`˛o£
 (
fd
[1]);

590 
	`umask
 (
omask
);

593 
	`umask
 (
omask
);

595 
	}
}

598 
	$_s_pùe
 (
fd
[2])

603 
°rfdö£π
 
ös
;

604 
queue_t
 *
poöãr
;

608 i‡((
fd
[0] = 
	`›í
 ("/dev/•x", 
O_RDWR
)) < 0) {

611 i‡((
fd
[1] = 
	`›í
 ("/dev/•x", 
O_RDWR
)) < 0) {

612 (Ë
	`˛o£
 (
fd
[0]);

617 
ös
.
˘lbuf
.
buf
 = (*Ë&
poöãr
;

618 
ös
.
˘lbuf
.
Àn
 =  (
queue_t
 *);

619 
ös
.
˘lbuf
.
maxÀn
 =  (
queue_t
 *);

621 
ös
.
d©abuf
.
buf
 = (*) 0;

622 
ös
.
d©abuf
.
Àn
 = -1;

623 
ös
.
d©abuf
.
maxÀn
 = 0;

625 
ös
.
fûdes
 = 
fd
[1];

626 
ös
.
Êags
 = 0;

627 
ös
.
off£t
 = 0;

629 i‡(
	`io˘l
 (
fd
[0], 
I_FDINSERT
, (*Ë&
ös
) < 0) {

630 (Ë
	`˛o£
 (
fd
[0]);

631 (Ë
	`˛o£
 (
fd
[1]);

635 
	}
}

644 #i‡
deföed
(
AUTH_METHOD_RECVFD_MKFIFO
Ë|| deföed(
AUTH_METHOD_RECVFD_MKNOD
)

646 
	~<as£π.h
>

647 
	~<°dio.h
>

648 
	~<°dlib.h
>

649 
	~<°rög.h
>

650 
	~"c⁄f.h
"

651 
	~"øndom.h
"

652 
	~"°r.h
"

655 
	$_«me_auth_pùe
 (**
pùe_«me_p
)

663 *
n⁄˚_bö
 = 
NULL
;

664 
n⁄˚_bö_Àn
;

665 *
n⁄˚_asc
 = 
NULL
;

666 
n⁄˚_asc_Àn
;

667 *
d°
 = 
NULL
;

668 
d°_Àn
;

669 
n
;

671 *
pùe_«me_p
 = 
NULL
;

672 
	`as£π
 (
c⁄f
->
auth_∫d_byãs
 > 0);

673 
	`as£π
 (
c⁄f
->
auth_£rvî_dú
 !
NULL
);

675 
n⁄˚_bö_Àn
 = 
c⁄f
->
auth_∫d_byãs
;

676 i‡(!(
n⁄˚_bö
 = 
	`mÆloc
 (
n⁄˚_bö_Àn
))) {

677 
îr
;

679 
n⁄˚_asc_Àn
 = (2 * 
n⁄˚_bö_Àn
) + 1;

680 i‡(!(
n⁄˚_asc
 = 
	`mÆloc
 (
n⁄˚_asc_Àn
))) {

681 
îr
;

683 
d°_Àn
 = 
	`°æí
 (
c⁄f
->
auth_£rvî_dú
)

685 + (2 * 
c⁄f
->
auth_∫d_byãs
)

687 i‡(!(
d°
 = 
	`mÆloc
 (
d°_Àn
))) {

688 
îr
;

690 
	`øndom_p£udo_byãs
 (
n⁄˚_bö
, 
n⁄˚_bö_Àn
);

691 i‡(!(
	`°rbö2hex
 (
n⁄˚_asc
, 
n⁄˚_asc_Àn
, 
n⁄˚_bö
, 
n⁄˚_bö_Àn
))) {

692 
îr
;

694 
n
 = 
	`¢¥ötf
 (
d°
, 
d°_Àn
, "%s/.munge-%s.pipe",

695 
c⁄f
->
auth_£rvî_dú
, 
n⁄˚_asc
);

696 i‡((
n
 < 0Ë|| (¿>
d°_Àn
)) {

697 
îr
;

699 
	`‰ì
 (
n⁄˚_bö
);

700 
	`‰ì
 (
n⁄˚_asc
);

701 *
pùe_«me_p
 = 
d°
;

704 
îr
:

705 i‡(
n⁄˚_bö
) {

706 
	`‰ì
 (
n⁄˚_bö
);

708 i‡(
n⁄˚_asc
) {

709 
	`‰ì
 (
n⁄˚_asc
);

711 i‡(
d°
) {

712 
	`‰ì
 (
d°
);

715 
	}
}

718 
	$_£nd_auth_ªq
 (
sd
, c⁄° *
pùe_«me
)

730 
m_msg_t
 
m
;

731 
munge_îr_t
 
e
;

733 i‡((
e
 = 
	`m_msg_¸óã
 (&
m
)Ë!
EMUNGE_SUCCESS
) {

734 
íd
;

736 i‡((
e
 = 
	`m_msg_böd
 (
m
, 
sd
)Ë!
EMUNGE_SUCCESS
) {

737 
íd
;

739 
m
->
auth_s_°r
 = (*Ë
pùe_«me
;

740 
m
->
auth_s_Àn
 = 
	`°æí
 (m->
auth_s_°r
) + 1;

741 
m
->
auth_s_is_c›y
 = 1;

742 
m
->
auth_c_°r
 = 
c⁄f
->
auth_˛õ¡_dú
;

743 
m
->
auth_c_Àn
 = 
	`°æí
 (m->
auth_c_°r
) + 1;

744 
m
->
auth_c_is_c›y
 = 1;

746 
e
 = 
	`m_msg_£nd
 (
m
, 
MUNGE_MSG_AUTH_FD_REQ
, 0);

748 
íd
:

749 i‡(
m
) {

750 
m
->
sd
 = -1;

751 
	`m_msg_de°roy
 (
m
);

753  (
e
 =
EMUNGE_SUCCESS
 ? 0 : -1);

754 
	}
}

	@src/munged/auth_recv.h

29 #i‚de‡
MUNGE_AUTH_RECV_H


30 
	#MUNGE_AUTH_RECV_H


	)

33 
	~<sys/ty≥s.h
>

34 
	~"m_msg.h
"

37 
auth_ªcv_öô
 (c⁄° *
§vrdú
, c⁄° *
˛¡dú
, 
gŸ_f‹˚
);

42 
auth_ªcv
 (
m_msg_t
 
m
, 
uid_t
 *
uid
, 
gid_t
 *
gid
);

	@src/munged/base64.c

29 #i‡
HAVE_CONFIG_H


30 
	~<c⁄fig.h
>

33 
	~<as£π.h
>

34 
	~<°rög.h
>

35 
	~"ba£64.h
"

61 
	#BASE64_MAGIC
 0xDEADBEEF

	)

62 
	#BASE64_ERR
 0xFF

	)

63 
	#BASE64_IGN
 0xFE

	)

64 
	#BASE64_PAD
 0xFD

	)

65 
	#BASE64_PAD_CHAR
 '='

	)

72 c⁄° 
	gbö2asc
[] = \

75 c⁄° 
	gasc2bö
[256] = {

106 
	$ba£64_öô
 (
ba£64_˘x
 *
x
)

108 
	`as£π
 (
x
 !
NULL
);

110 
x
->
num
 = 0;

111 
x
->
∑d
 = 0;

112 
	`as£π
 (
x
->
magic
 = 
BASE64_MAGIC
);

113 
	`as£π
 (!(
x
->
föÆized
 = 0));

115 
	}
}

119 
	$ba£64_ícode_upd©e
 (
ba£64_˘x
 *
x
, *
vd°
, *
d°Àn
,

120 c⁄° *
v§c
, 
§˛í
)

122 
n
;

123 
num_ªad
;

124 
num_wrôe
;

125 *
d°
 = (*Ë
vd°
;

126 *
§c
 = (*Ë
v§c
;

128 
	`as£π
 (
x
 !
NULL
);

129 
	`as£π
 (
x
->
magic
 =
BASE64_MAGIC
);

130 
	`as£π
 (
x
->
föÆized
 != 1);

131 
	`as£π
 (
d°
 !
NULL
);

132 
	`as£π
 (
d°Àn
 !
NULL
);

133 
	`as£π
 (
§c
 !
NULL
);

135 
num_wrôe
 = 0;

137 i‡(
§˛í
 <= 0) {

142 i‡((
x
->
num
 > 0Ë&& (
§˛í
 >(
num_ªad
 = 3 - x->num))) {

143 
	`mem˝y
 (&
x
->
buf
[x->
num
], 
§c
, 
num_ªad
);

144 
§c
 +
num_ªad
;

145 
§˛í
 -
num_ªad
;

146 
	`ba£64_ícode_block
 (
d°
, &
n
, 
x
->
buf
, 3);

147 
x
->
num
 = 0;

148 
d°
 +
n
;

149 
num_wrôe
 +
n
;

153 i‡(
§˛í
 >= 3) {

154 
num_ªad
 = (
§˛í
 / 3) * 3;

155 
	`ba£64_ícode_block
 (
d°
, &
n
, 
§c
, 
num_ªad
);

156 
§c
 +
num_ªad
;

157 
§˛í
 -
num_ªad
;

158 
num_wrôe
 +
n
;

162 i‡(
§˛í
 > 0) {

163 
	`mem˝y
 (&
x
->
buf
[x->
num
], 
§c
, 
§˛í
);

164 
x
->
num
 +
§˛í
;

166 *
d°Àn
 = 
num_wrôe
;

168 
	}
}

172 
	$ba£64_ícode_föÆ
 (
ba£64_˘x
 *
x
, *
d°
, *
d°Àn
)

174 
	`as£π
 (
x
 !
NULL
);

175 
	`as£π
 (
x
->
magic
 =
BASE64_MAGIC
);

176 
	`as£π
 (
x
->
föÆized
 != 1);

177 
	`as£π
 (
d°
 !
NULL
);

178 
	`as£π
 (
d°Àn
 !
NULL
);

182 i‡(
x
->
num
 > 0) {

183 
	`ba£64_ícode_block
 (
d°
, 
d°Àn
, 
x
->
buf
, x->
num
);

184 
x
->
num
 = 0;

187 *
d°Àn
 = 0;

189 
	`as£π
 (
x
->
föÆized
 = 1);

191 
	}
}

195 
	$ba£64_decode_upd©e
 (
ba£64_˘x
 *
x
, *
d°
, *
d°Àn
,

196 c⁄° *
§c
, 
§˛í
)

200 
i
 = 0;

201 
îr
 = 0;

202 
∑d
 = 0;

203 *
pd°
;

204 c⁄° *
p§c
;

205 c⁄° *
p§c_œ°
;

206 
c
;

208 
	`as£π
 ((
x
 =
NULL
Ë|| (x->
magic
 =
BASE64_MAGIC
));

209 
	`as£π
 ((
x
 =
NULL
Ë|| (x->
föÆized
 != 1));

210 
	`as£π
 (
d°
 !
NULL
);

211 
	`as£π
 (
d°Àn
 !
NULL
);

212 
	`as£π
 (
§c
 !
NULL
);

214 
pd°
 = 
d°
;

215 
p§c
 = 
§c
;

216 
p§c_œ°
 = 
p§c
 + 
§˛í
;

220 i‡(
x
 !
NULL
) {

221 
i
 = 
x
->
num
;

222 
∑d
 = 
x
->pad;

223 *
pd°
 = 
x
->
buf
[0];

225 
p§c
 < 
p§c_œ°
) {

226 
c
 = 
asc2bö
[*
p§c
++];

227 i‡(
c
 =
BASE64_IGN
) {

230 i‡((
c
 =
BASE64_PAD
Ë&& (
∑d
 < 2)) {

231 
∑d
++;

234 i‡((
c
 =
BASE64_ERR
Ë|| (
∑d
 > 0)) {

235 
îr
++;

238 
i
) {

240 *
pd°
 = (
c
 << 2) & 0xfc;

243 *
pd°
++ |(
c
 >> 4) & 0x03;

244 *
pd°
 = (
c
 << 4) & 0xf0;

247 *
pd°
++ |(
c
 >> 2) & 0x0f;

248 *
pd°
 = (
c
 << 6) & 0xc0;

251 *
pd°
++ |(
c
 ) & 0x3f;

254 
i
 = (i + 1) % 4;

258 i‡(
x
 !
NULL
) {

259 
x
->
num
 = 
i
;

260 
x
->
∑d
 =Öad;

261 
x
->
buf
[0] = *
pd°
;

265 i‡(!
îr
) {

266 
îr
 = (((
i
 + 
∑d
) % 4) != 0);

268 *
pd°
 = '\0';

269 *
d°Àn
 = 
pd°
 - (*Ë
d°
;

270  (
îr
 ? -1 : 0);

271 
	}
}

275 
	$ba£64_decode_föÆ
 (
ba£64_˘x
 *
x
, *
d°
, *
d°Àn
)

277 
rc
 = 0;

279 
	`as£π
 (
x
 !
NULL
);

280 
	`as£π
 (
x
->
magic
 =
BASE64_MAGIC
);

281 
	`as£π
 (
x
->
föÆized
 != 1);

283 i‡(((
x
->
num
 + x->
∑d
) % 4) != 0) {

284 
rc
 = -1;

286 *
d°Àn
 = 0;

287 
	`as£π
 (
x
->
föÆized
 = 1);

288  (
rc
);

289 
	}
}

293 
	$ba£64_˛ónup
 (
ba£64_˘x
 *
x
)

295 
	`as£π
 (
x
 !
NULL
);

296 
	`as£π
 (
x
->
magic
 =
BASE64_MAGIC
);

298 
	`mem£t
 (
x
, 0,  (*x));

299 
	`as£π
 (
x
->
magic
 = ~
BASE64_MAGIC
);

301 
	}
}

305 
	$ba£64_ícode_block
 (*
d°
, *
d°Àn
, c⁄° *
§c
, 
§˛í
)

307 *
pd°
;

308 c⁄° *
p§c
;

309 
n
;

311 
pd°
 = 
d°
;

312 
p§c
 = 
§c
;

313 
n
 = 0;

314 
§˛í
 >= 3) {

315 *
pd°
++ = 
bö2asc
[ (
p§c
[0] >> 2) & 0x3f];

316 *
pd°
++ = 
bö2asc
[((
p§c
[0] << 4) & 0x30) | ((psrc[1] >> 4) & 0x0f)];

317 *
pd°
++ = 
bö2asc
[((
p§c
[1] << 2) & 0x3c) | ((psrc[2] >> 6) & 0x03)];

318 *
pd°
++ = 
bö2asc
[ (
p§c
[2] ) & 0x3f];

319 
p§c
 += 3;

320 
§˛í
 -= 3;

321 
n
 += 4;

323 i‡(
§˛í
 == 2) {

324 *
pd°
++ = 
bö2asc
[ (
p§c
[0] >> 2) & 0x3f];

325 *
pd°
++ = 
bö2asc
[((
p§c
[0] << 4) & 0x30) | ((psrc[1] >> 4) & 0x0f)];

326 *
pd°
++ = 
bö2asc
[ (
p§c
[1] << 2) & 0x3c];

327 *
pd°
++ = '=';

328 
n
 += 4;

330 i‡(
§˛í
 == 1) {

331 *
pd°
++ = 
bö2asc
[ (
p§c
[0] >> 2) & 0x3f];

332 *
pd°
++ = 
bö2asc
[ (
p§c
[0] << 4) & 0x30];

333 *
pd°
++ = '=';

334 *
pd°
++ = '=';

335 
n
 += 4;

337 *
pd°
 = '\0';

338 *
d°Àn
 = 
n
;

340 
	}
}

344 
	$ba£64_decode_block
 (*
d°
, *
d°Àn
, c⁄° *
§c
, 
§˛í
)

346  (
	`ba£64_decode_upd©e
 (
NULL
, 
d°
, 
d°Àn
, 
§c
, 
§˛í
));

347 
	}
}

351 
	$ba£64_ícode_Àngth
 (
§˛í
)

357  (((
§˛í
 + 2) / 3) * 4) + 1;

358 
	}
}

362 
	$ba£64_decode_Àngth
 (
§˛í
)

368  (((
§˛í
 + 3) / 4) * 3) + 1;

369 
	}
}

376 #ifde‡
BASE64_INIT


379 
	~<˘y≥.h
>

380 
	~<°dio.h
>

381 
	~<°dlib.h
>

384 
	#BASE64_DEF_COLS
 12

	)

387 
ba£64_buûd_èbÀ
 (*
d©a
, 
Àn
);

388 
ba£64_¥öt_èbÀ
 (*
d©a
, 
Àn
, *
«me
, 
cﬁ
);

392 
	$maö
 (
¨gc
, *
¨gv
[])

394 
cﬁ
;

395 
a2b
[256];

397 
cﬁ
 = (
¨gc
 > 1Ë? 
	`©oi
 (
¨gv
[1]Ë: 
BASE64_DEF_COLS
;

399 
	`ba£64_buûd_èbÀ
 (
a2b
,  (a2b));

400 
	`ba£64_¥öt_èbÀ
 (
a2b
,  (a2b), "asc2bö", 
cﬁ
);

401 
	`exô
 (
EXIT_SUCCESS
);

402 
	}
}

406 
	$ba£64_buûd_èbÀ
 (*
d©a
, 
Àn
)

408 
i
;

410 
i
 = 0; i < 
Àn
; i++)

411 
d©a
[
i
] = (
	`is•a˚
 (i)Ë? 
BASE64_IGN
 : 
BASE64_ERR
;

412 
i
 = 
	`°æí
 (
bö2asc
) - 1; i >= 0; i--)

413 
d©a
[
bö2asc
[
i
]] = i;

414 
d©a
[
BASE64_PAD_CHAR
] = 
BASE64_PAD
;

416 
	}
}

420 
	$ba£64_¥öt_èbÀ
 (*
d©a
, 
Àn
, *
«me
, 
cﬁ
)

422 
i
;

423 
n
;

425 i‡(
cﬁ
 < 1) {

426 
cﬁ
 = 
BASE64_DEF_COLS
;

428 
	`¥ötf
 ("°©i¯c⁄° unsig√d ch¨ %s[%d] = {", 
«me
, 
Àn
);

430 
i
=0, 
n
=
Àn
-1; ; i++) {

431 i‡((
i
 % 
cﬁ
) == 0)

432 
	`¥ötf
 ("\n ");

433 
	`¥ötf
 ("0x%02x", 
d©a
[
i
]);

434 i‡(
i
 =
n
)

436 
	`¥ötf
 (", ");

438 
	`¥ötf
 ("\n};\n");

440 
	}
}

	@src/munged/base64.h

29 #i‚de‡
BASE64_H


30 
	#BASE64_H


	)

33 #i‡
HAVE_CONFIG_H


34 
	~<c⁄fig.h
>

43 
	mbuf
[3];

44 
	mnum
;

45 
	m∑d
;

46 #i‚de‡
NDEBUG


47 
	mmagic
;

48 
	mföÆized
;

50 } 
	tba£64_˘x
;

57 
ba£64_öô
 (
ba£64_˘x
 *
x
);

63 
ba£64_ícode_upd©e
 (
ba£64_˘x
 *
x
, *
d°
, *
d°Àn
,

64 c⁄° *
§c
, 
§˛í
);

72 
ba£64_ícode_föÆ
 (
ba£64_˘x
 *
x
, *
d°
, *
d°Àn
);

82 
ba£64_decode_upd©e
 (
ba£64_˘x
 *
x
, *
d°
, *
d°Àn
,

83 c⁄° *
§c
, 
§˛í
);

91 
ba£64_decode_föÆ
 (
ba£64_˘x
 *
x
, *
d°
, *
d°Àn
);

101 
ba£64_˛ónup
 (
ba£64_˘x
 *
x
);

107 
ba£64_ícode_block
 (*
d°
, *
d°Àn
, c⁄° *
§c
, 
§˛í
);

114 
ba£64_decode_block
 (*
d°
, *
d°Àn
, c⁄° *
§c
, 
§˛í
);

121 
ba£64_ícode_Àngth
 (
§˛í
);

127 
ba£64_decode_Àngth
 (
§˛í
);

	@src/munged/base64_test.c

29 
	~<°dio.h
>

30 
	~<°dlib.h
>

31 
	~<°rög.h
>

32 
	~"ba£64.h
"

39 
vÆid©e
 (c⁄° *
§c
, c⁄° *
d°
);

40 
ícode_block
 (*
d°
, *
d°Àn
,

41 c⁄° *
§c
, 
§˛í
);

42 
ícode_c⁄ãxt
 (*
d°
, *
d°Àn
,

43 c⁄° *
§c
, 
§˛í
);

44 
decode_block
 (*
d°
, *
d°Àn
,

45 c⁄° *
§c
, 
§˛í
);

46 
decode_c⁄ãxt
 (*
d°
, *
d°Àn
,

47 c⁄° *
§c
, 
§˛í
);

51 
	$maö
 (
¨gc
, *
¨gv
[])

53 c⁄° 
§c1
[] = { 0x14, 0xfb, 0x9c, 0x03, 0xd9, 0x7e, 0x00 };

54 c⁄° 
§c2
[] = { 0x14, 0xfb, 0x9c, 0x03, 0xd9, 0x00 };

55 c⁄° 
§c3
[] = { 0x14, 0xfb, 0x9c, 0x03, 0x00 };

57 c⁄° 
d°1
[] = "FPucA9l+";

58 c⁄° 
d°2
[] = "FPucA9k=";

59 c⁄° 
d°3
[] = "FPucAw==";

61 i‡–(
	`vÆid©e
 (
§c1
, 
d°1
) < 0)

62 || (
	`vÆid©e
 (
§c2
, 
d°2
) < 0)

63 || (
	`vÆid©e
 (
§c3
, 
d°3
) < 0) ) {

64 
	`exô
 (
EXIT_FAILURE
);

66 
	`exô
 (
EXIT_SUCCESS
);

67 
	}
}

71 
	$vÆid©e
 (c⁄° *
§c
, c⁄° *
d°
)

73 
n
;

74 
buf
[9];

76 i‡(
	`ícode_block
 (
buf
, &
n
, 
§c
, 
	`°æí
 (src)) < 0)

78 i‡(
n
 !
	`°æí
 (
d°
))

80 i‡(
	`°∫cmp
 (
d°
, 
buf
, 
n
))

83 i‡(
	`decode_block
 (
buf
, &
n
, 
d°
, 
	`°æí
 (dst)) < 0)

85 i‡(
n
 !
	`°æí
 (
§c
))

87 i‡(
	`°∫cmp
 (
§c
, 
buf
, 
n
))

90 i‡(
	`ícode_c⁄ãxt
 (
buf
, &
n
, 
§c
, 
	`°æí
 (src)) < 0)

92 i‡(
n
 !
	`°æí
 (
d°
))

94 i‡(
	`°∫cmp
 (
d°
, 
buf
, 
n
))

97 i‡(
	`decode_c⁄ãxt
 (
buf
, &
n
, 
d°
, 
	`°æí
 (dst)) < 0)

99 i‡(
n
 !
	`°æí
 (
§c
))

101 i‡(
	`°∫cmp
 (
§c
, 
buf
, 
n
))

105 
	}
}

109 
	$ícode_block
 (*
d°
, *
d°Àn
,

110 c⁄° *
§c
, 
§˛í
)

112  (
	`ba£64_ícode_block
 (
d°
, 
d°Àn
, 
§c
, 
§˛í
));

113 
	}
}

117 
	$ícode_c⁄ãxt
 (*
d°
, *
d°Àn
,

118 c⁄° *
§c
, 
§˛í
)

120 
ba£64_˘x
 
x
;

121 
i
;

122 
n
;

123 
m
;

125 i‡(
	`ba£64_öô
 (&
x
) < 0)

127 
i
=0, 
n
=0; i<
§˛í
; i++) {

128 i‡(
	`ba£64_ícode_upd©e
 (&
x
, 
d°
, &
m
, 
§c
 + 
i
, 1) < 0)

130 
d°
 +
m
;

131 
n
 +
m
;

133 i‡(
	`ba£64_ícode_föÆ
 (&
x
, 
d°
, &
m
) < 0)

135 i‡(
	`ba£64_˛ónup
 (&
x
) < 0)

137 
n
 +
m
;

138 *
d°Àn
 = 
n
;

140 
	}
}

144 
	$decode_block
 (*
d°
, *
d°Àn
,

145 c⁄° *
§c
, 
§˛í
)

147  (
	`ba£64_decode_block
 (
d°
, 
d°Àn
, 
§c
, 
§˛í
));

148 
	}
}

152 
	$decode_c⁄ãxt
 (*
d°
, *
d°Àn
,

153 c⁄° *
§c
, 
§˛í
)

155 
ba£64_˘x
 
x
;

156 
i
;

157 
n
;

158 
m
;

160 i‡(
	`ba£64_öô
 (&
x
) < 0)

162 
i
=0, 
n
=0; i<
§˛í
; i++) {

163 i‡(
	`ba£64_decode_upd©e
 (&
x
, 
d°
, &
m
, 
§c
 + 
i
, 1) < 0)

165 
d°
 +
m
;

166 
n
 +
m
;

168 i‡(
	`ba£64_decode_föÆ
 (&
x
, 
d°
, &
m
) < 0)

170 i‡(
	`ba£64_˛ónup
 (&
x
) < 0)

172 
n
 +
m
;

173 *
d°Àn
 = 
n
;

175 
	}
}

	@src/munged/cipher.c

29 #i‡
HAVE_CONFIG_H


30 
	~<c⁄fig.h
>

33 
	~<as£π.h
>

34 
	~<munge.h
>

35 
	~<°rög.h
>

36 
	~"cùhî.h
"

43 
	#CIPHER_MAGIC
 0xDEADACE1

	)

50 
	g_cùhî_is_öôülized
 = 0;

57 
_cùhî_öô_subsy°em
 ();

58 
_cùhî_öô
 (
cùhî_˘x
 *
x
, 
munge_cùhî_t
 
cùhî
,

59 *
key
, *
iv
, 
íc
);

60 
_cùhî_upd©e
 (
cùhî_˘x
 *
x
, *
d°
, *
d°Àn
,

61 c⁄° *
§c
, 
§˛í
);

62 
_cùhî_föÆ
 (
cùhî_˘x
 *
x
, *
d°
, *
d°Àn
);

63 
_cùhî_˛ónup
 (
cùhî_˘x
 *
x
);

64 
_cùhî_block_size
 (
munge_cùhî_t
 
cùhî
);

65 
_cùhî_iv_size
 (
munge_cùhî_t
 
cùhî
);

66 
_cùhî_key_size
 (
munge_cùhî_t
 
cùhî
);

67 
_cùhî_m≠_íum
 (
munge_cùhî_t
 
cùhî
, *
d°
);

75 
	$cùhî_öô_subsy°em
 ()

79 i‡(! 
_cùhî_is_öôülized
) {

80 
	`_cùhî_öô_subsy°em
 ();

81 
_cùhî_is_öôülized
++;

84 
	}
}

88 
	$cùhî_öô
 (
cùhî_˘x
 *
x
, 
munge_cùhî_t
 
cùhî
,

89 *
key
, *
iv
, 
íc
)

91 
rc
;

93 
	`as£π
 (
_cùhî_is_öôülized
);

94 
	`as£π
 (
x
 !
NULL
);

95 
	`as£π
 (
key
 !
NULL
);

96 
	`as£π
 (
iv
 !
NULL
);

97 
	`as£π
 ((
íc
 == 0) || (enc == 1));

99 
rc
 = 
	`_cùhî_öô
 (
x
, 
cùhî
, 
key
, 
iv
, 
íc
);

100 i‡(
rc
 >= 0) {

101 
	`as£π
 (
x
->
magic
 = 
CIPHER_MAGIC
);

102 
	`as£π
 (!(
x
->
föÆized
 = 0));

104  (
rc
);

105 
	}
}

109 
	$cùhî_upd©e
 (
cùhî_˘x
 *
x
, *
d°
, *
d°Àn
,

110 c⁄° *
§c
, 
§˛í
)

112 
rc
;

114 
	`as£π
 (
_cùhî_is_öôülized
);

115 
	`as£π
 (
x
 !
NULL
);

116 
	`as£π
 (
x
->
magic
 =
CIPHER_MAGIC
);

117 
	`as£π
 (
x
->
föÆized
 != 1);

118 
	`as£π
 (
d°
 !
NULL
);

119 
	`as£π
 (
d°Àn
 !
NULL
);

120 
	`as£π
 (
§c
 !
NULL
);

122 i‡(
§˛í
 <= 0) {

125 i‡((
d°Àn
 =
NULL
) || (*dstlen <= 0)) {

128 
rc
 = 
	`_cùhî_upd©e
 (
x
, 
d°
, 
d°Àn
, 
§c
, 
§˛í
);

129  (
rc
);

130 
	}
}

134 
	$cùhî_föÆ
 (
cùhî_˘x
 *
x
, *
d°
, *
d°Àn
)

136 
rc
;

138 
	`as£π
 (
_cùhî_is_öôülized
);

139 
	`as£π
 (
x
 !
NULL
);

140 
	`as£π
 (
x
->
magic
 =
CIPHER_MAGIC
);

141 
	`as£π
 (
x
->
föÆized
 != 1);

142 
	`as£π
 (
d°
 !
NULL
);

143 
	`as£π
 (
d°Àn
 !
NULL
);

145 i‡((
d°Àn
 =
NULL
) || (*dstlen <= 0)) {

148 
rc
 = 
	`_cùhî_föÆ
 (
x
, 
d°
, 
d°Àn
);

149 
	`as£π
 (
x
->
föÆized
 = 1);

150  (
rc
);

151 
	}
}

155 
	$cùhî_˛ónup
 (
cùhî_˘x
 *
x
)

157 
rc
;

159 
	`as£π
 (
_cùhî_is_öôülized
);

160 
	`as£π
 (
x
 !
NULL
);

161 
	`as£π
 (
x
->
magic
 =
CIPHER_MAGIC
);

163 
rc
 = 
	`_cùhî_˛ónup
 (
x
);

164 
	`mem£t
 (
x
, 0,  (*x));

165 
	`as£π
 (
x
->
magic
 = ~
CIPHER_MAGIC
);

166  (
rc
);

167 
	}
}

171 
	$cùhî_block_size
 (
munge_cùhî_t
 
cùhî
)

173 
	`as£π
 (
_cùhî_is_öôülized
);

174  (
	`_cùhî_block_size
 (
cùhî
));

175 
	}
}

179 
	$cùhî_iv_size
 (
munge_cùhî_t
 
cùhî
)

181 
	`as£π
 (
_cùhî_is_öôülized
);

182  (
	`_cùhî_iv_size
 (
cùhî
));

183 
	}
}

187 
	$cùhî_key_size
 (
munge_cùhî_t
 
cùhî
)

189 
	`as£π
 (
_cùhî_is_öôülized
);

190  (
	`_cùhî_key_size
 (
cùhî
));

191 
	}
}

195 
	$cùhî_m≠_íum
 (
munge_cùhî_t
 
cùhî
, *
d°
)

197 
	`as£π
 (
_cùhî_is_öôülized
);

198  (
	`_cùhî_m≠_íum
 (
cùhî
, 
d°
));

199 
	}
}

206 #i‡
HAVE_LIBGCRYPT


208 
	~<g¸y±.h
>

209 
	~<°rög.h
>

210 
	~"comm⁄.h
"

211 
	~"log.h
"

213 
	g_cùhî_m≠
 [
MUNGE_CIPHER_LAST_ITEM
];

215 
_cùhî_upd©e_aux
 (
cùhî_˘x
 *
x
, *
d°
, *
d°Àn
,

216 c⁄° *
§c
, 
§˛í
);

220 
	$_cùhî_öô_subsy°em
 ()

222 
i
;

224 
i
 = 0; i < 
MUNGE_CIPHER_LAST_ITEM
; i++) {

225 
_cùhî_m≠
 [
i
] = -1;

227 
_cùhî_m≠
 [
MUNGE_CIPHER_BLOWFISH
] = 
GCRY_CIPHER_BLOWFISH
;

228 
_cùhî_m≠
 [
MUNGE_CIPHER_CAST5
] = 
GCRY_CIPHER_CAST5
;

229 
_cùhî_m≠
 [
MUNGE_CIPHER_AES128
] = 
GCRY_CIPHER_AES128
;

230 
_cùhî_m≠
 [
MUNGE_CIPHER_AES256
] = 
GCRY_CIPHER_AES256
;

232 
	}
}

236 
	$_cùhî_öô
 (
cùhî_˘x
 *
x
, 
munge_cùhî_t
 
cùhî
,

237 *
key
, *
iv
, 
íc
)

239 
g¸y_îr‹_t
 
e
;

240 
Ægo
;

241 
size_t
 
nbyãs
;

243 i‡(
	`_cùhî_m≠_íum
 (
cùhî
, &
Ægo
) < 0) {

246 
e
 = 
	`g¸y_cùhî_›í
 (&(
x
->
˘x
), 
Ægo
, 
GCRY_CIPHER_MODE_CBC
, 0);

247 i‡(
e
 != 0) {

248 
	`log_msg
 (
LOG_DEBUG
, "gcry_cipher_open failed for cipher=%d: %s",

249 
cùhî
, 
	`g¸y_°ªº‹
 (
e
));

252 
e
 = 
	`g¸y_cùhî_Ægo_öfo
 (
Ægo
, 
GCRYCTL_GET_KEYLEN
, 
NULL
, &
nbyãs
);

253 i‡(
e
 != 0) {

254 
	`log_msg
 (
LOG_DEBUG
,

256 
cùhî
, 
	`g¸y_°ªº‹
 (
e
));

259 
e
 = 
	`g¸y_cùhî_£tkey
 (
x
->
˘x
, 
key
, 
nbyãs
);

260 i‡(
e
 != 0) {

261 
	`log_msg
 (
LOG_DEBUG
, "gcry_cipher_setkey failed for cipher=%d: %s",

262 
cùhî
, 
	`g¸y_°ªº‹
 (
e
));

265 
e
 = 
	`g¸y_cùhî_Ægo_öfo
 (
Ægo
, 
GCRYCTL_GET_BLKLEN
, 
NULL
, &
nbyãs
);

266 i‡(
e
 != 0) {

267 
	`log_msg
 (
LOG_DEBUG
,

269 
cùhî
, 
	`g¸y_°ªº‹
 (
e
));

272 
e
 = 
	`g¸y_cùhî_£tiv
 (
x
->
˘x
, 
iv
, 
nbyãs
);

273 i‡(
e
 != 0) {

274 
	`log_msg
 (
LOG_DEBUG
, "gcry_cipher_setiv failed for cipher=%d: %s",

275 
cùhî
, 
	`g¸y_°ªº‹
 (
e
));

278 
x
->
do_í¸y±
 = 
íc
;

279 
x
->
Àn
 = 0;

280 
x
->
blkÀn
 = (Ë
nbyãs
;

282 
	}
}

286 
	$_cùhî_upd©e
 (
cùhî_˘x
 *
x
, *
vd°
, *
d°Àn
,

287 c⁄° *
v§c
, 
§˛í
)

297 
n
;

298 
n_wrôãn
;

299 
n_∑πül
;

300 
n_com∂ëe
;

301 *
d°
 = 
vd°
;

302 *
§c
 = (*Ë
v§c
;

304 
n_wrôãn
 = 0;

308 i‡(
x
->
Àn
 > 0) {

309 
	`as£π
 (
x
->
Àn
 < x->
blkÀn
);

310 
n_∑πül
 = 
	`MIN
 (
§˛í
, 
x
->
blkÀn
 - x->
Àn
);

311 
	`mem˝y
 (&(
x
->
buf
[x->
Àn
]), 
§c
, 
n_∑πül
);

312 
x
->
Àn
 +
n_∑πül
;

313 
§c
 +
n_∑πül
;

314 
§˛í
 -
n_∑πül
;

321 i‡(
x
->
Àn
 =x->
blkÀn
) {

322 i‡((
x
->
do_í¸y±
Ë|| (
§˛í
 > 0)) {

323 
n
 = *
d°Àn
;

324 i‡(
	`_cùhî_upd©e_aux
 (
x
, 
d°
, &
n
, x->
buf
, x->
blkÀn
) < 0) {

325 
îr
;

327 
	`as£π
 (
n
 =
x
->
blkÀn
);

328 
d°
 +
n
;

329 
n_wrôãn
 +
n
;

330 
x
->
Àn
 = 0;

339 
n_∑πül
 = 
§˛í
 % 
x
->
blkÀn
;

340 i‡((!
x
->
do_í¸y±
Ë&& (
n_∑πül
 == 0)) {

341 
n_∑πül
 = 
x
->
blkÀn
;

343 
n_com∂ëe
 = 
§˛í
 - 
n_∑πül
;

347 i‡(
n_com∂ëe
 > 0) {

348 
	`as£π
 (
x
->
Àn
 == 0);

349 
	`as£π
 (
n_com∂ëe
 % 
x
->
blkÀn
 == 0);

350 
n
 = *
d°Àn
 - 
n_wrôãn
;

351 i‡(
	`_cùhî_upd©e_aux
 (
x
, 
d°
, &
n
, 
§c
, 
n_com∂ëe
) < 0) {

352 
îr
;

354 
	`as£π
 (
n
 =
n_com∂ëe
);

355 
§c
 +
n
;

356 
§˛í
 -
n
;

357 
n_wrôãn
 +
n
;

361 i‡(
n_∑πül
 > 0) {

362 
	`as£π
 (
x
->
Àn
 == 0);

363 
	`as£π
 (
n_∑πül
 <
x
->
blkÀn
);

364 
	`mem˝y
 (
x
->
buf
, 
§c
, 
n_∑πül
);

365 
x
->
Àn
 = 
n_∑πül
;

369 
	`as£π
 ((
x
->
do_í¸y±
Ë|| (x->
Àn
 > 0));

373 *
d°Àn
 = 
n_wrôãn
;

376 
îr
:

377 *
d°Àn
 = 0;

379 
	}
}

383 
	$_cùhî_upd©e_aux
 (
cùhî_˘x
 *
x
, *
d°
, *
d°Àn_±r
,

384 c⁄° *
§c
, 
§˛í
)

386 
g¸y_îr‹_t
 
e
;

387 
d°Àn
 = *
d°Àn_±r
;

389 i‡(
x
->
do_í¸y±
) {

390 
e
 = 
	`g¸y_cùhî_í¸y±
 (
x
->
˘x
, 
d°
, 
d°Àn
, 
§c
, 
§˛í
);

393 
e
 = 
	`g¸y_cùhî_de¸y±
 (
x
->
˘x
, 
d°
, 
d°Àn
, 
§c
, 
§˛í
);

395 i‡(
e
 != 0) {

396 
	`log_msg
 (
LOG_DEBUG
, "%s failed: %s",

397 (
x
->
do_í¸y±
 ? "gcry_cipher_encrypt" : "gcry_cipher_decrypt"),

398 
	`g¸y_°ªº‹
 (
e
));

399 *
d°Àn_±r
 = 0;

402 i‡((
§c
 !
NULL
Ë|| (
§˛í
 != 0)) {

403 *
d°Àn_±r
 = 
§˛í
;

406 
	}
}

410 
	$_cùhî_föÆ
 (
cùhî_˘x
 *
x
, *
d°
, *
d°Àn
)

412 
n
;

413 
i
;

414 
∑d
;

416 i‡(
x
->
do_í¸y±
) {

417 
	`as£π
 (
x
->
Àn
 < x->
blkÀn
);

418 
∑d
 = 
x
->
blkÀn
 - x->
Àn
;

419 
i
 = 
x
->
Àn
; i < x->
blkÀn
; i++) {

420 
x
->
buf
[
i
] = 
∑d
;

422 i‡(
	`_cùhî_upd©e_aux
 (
x
, 
d°
, 
d°Àn
, x->
buf
, x->
blkÀn
) < 0) {

429 i‡(
x
->
Àn
 !x->
blkÀn
) {

430 
	`log_msg
 (
LOG_DEBUG
,

432 
x
->
Àn
, x->
blkÀn
);

437 
n
 = 
x
->
blkÀn
;

438 i‡(
	`_cùhî_upd©e_aux
 (
x
, x->
buf
, &
n
, 
NULL
, 0) < 0) {

441 
	`as£π
 (
n
 =
x
->
blkÀn
);

445 
∑d
 = 
x
->
buf
[x->
blkÀn
 - 1];

446 i‡((
∑d
 <0Ë|| (∑d > 
x
->
blkÀn
)) {

447 
	`log_msg
 (
LOG_DEBUG
,

448 "FöÆ de¸y±i⁄ block ha†övÆidÖad o‡%d", 
∑d
);

451 
i
 = 
x
->
blkÀn
 - 
∑d
; i < x->blklen; i++) {

452 i‡(
x
->
buf
[
i
] !
∑d
) {

453 
	`log_msg
 (
LOG_DEBUG
,

454 "FöÆ de¸y±i⁄ block ha†∑ddögÉº‹áàbyã %d", 
i
);

460 
n
 = 
x
->
blkÀn
 - 
∑d
;

461 i‡(
n
 > 0) {

462 i‡(*
d°Àn
 < 
n
) {

465 
	`mem˝y
 (
d°
, 
x
->
buf
, 
n
);

467 *
d°Àn
 = 
n
;

470 
	}
}

474 
	$_cùhî_˛ónup
 (
cùhî_˘x
 *
x
)

476 
	`g¸y_cùhî_˛o£
 (
x
->
˘x
);

478 
	}
}

482 
	$_cùhî_block_size
 (
munge_cùhî_t
 
cùhî
)

484 
g¸y_îr‹_t
 
e
;

485 
Ægo
;

486 
size_t
 
nbyãs
;

488 i‡(
	`_cùhî_m≠_íum
 (
cùhî
, &
Ægo
) < 0) {

491 
e
 = 
	`g¸y_cùhî_Ægo_öfo
 (
Ægo
, 
GCRYCTL_GET_BLKLEN
, 
NULL
, &
nbyãs
);

492 i‡(
e
 != 0) {

493 
	`log_msg
 (
LOG_DEBUG
,

495 
cùhî
, 
	`g¸y_°ªº‹
 (
e
));

498  (
nbyãs
);

499 
	}
}

503 
	$_cùhî_iv_size
 (
munge_cùhî_t
 
cùhî
)

505  (
	`_cùhî_block_size
 (
cùhî
));

506 
	}
}

510 
	$_cùhî_key_size
 (
munge_cùhî_t
 
cùhî
)

512 
g¸y_îr‹_t
 
e
;

513 
Ægo
;

514 
size_t
 
nbyãs
;

516 i‡(
	`_cùhî_m≠_íum
 (
cùhî
, &
Ægo
) < 0) {

519 
e
 = 
	`g¸y_cùhî_Ægo_öfo
 (
Ægo
, 
GCRYCTL_GET_KEYLEN
, 
NULL
, &
nbyãs
);

520 i‡(
e
 != 0) {

521 
	`log_msg
 (
LOG_DEBUG
,

523 
cùhî
, 
	`g¸y_°ªº‹
 (
e
));

526  (
nbyãs
);

527 
	}
}

531 
	$_cùhî_m≠_íum
 (
munge_cùhî_t
 
cùhî
, *
d°
)

533 
Ægo
 = -1;

535 i‡((
cùhî
 > 
MUNGE_CIPHER_DEFAULT
Ë&& (cùhî < 
MUNGE_CIPHER_LAST_ITEM
)) {

536 
Ægo
 = 
_cùhî_m≠
 [
cùhî
];

538 i‡(
Ægo
 < 0) {

541 i‡(
d°
 !
NULL
) {

542 * (*Ë
d°
 = 
Ægo
;

545 
	}
}

568 #i‡
HAVE_OPENSSL


570 
	~<›ís¶/evp.h
>

572 c⁄° 
EVP_CIPHER
 *
	g_cùhî_m≠
 [
MUNGE_CIPHER_LAST_ITEM
];

576 
	$_cùhî_öô_subsy°em
 ()

578 
i
;

580 
i
 = 0; i < 
MUNGE_CIPHER_LAST_ITEM
; i++) {

581 
_cùhî_m≠
 [
i
] = 
NULL
;

583 
_cùhî_m≠
 [
MUNGE_CIPHER_BLOWFISH
] = 
	`EVP_bf_cbc
 ();

584 
_cùhî_m≠
 [
MUNGE_CIPHER_CAST5
] = 
	`EVP_ˇ°5_cbc
 ();

586 #i‡
HAVE_EVP_AES_128_CBC


587 
_cùhî_m≠
 [
MUNGE_CIPHER_AES128
] = 
	`EVP_´s_128_cbc
 ();

590 #i‡
HAVE_EVP_AES_256_CBC
 && 
HAVE_EVP_SHA256


591 
_cùhî_m≠
 [
MUNGE_CIPHER_AES256
] = 
	`EVP_´s_256_cbc
 ();

595 
	}
}

599 
	$_cùhî_öô
 (
cùhî_˘x
 *
x
, 
munge_cùhî_t
 
cùhî
,

600 *
key
, *
iv
, 
íc
)

602 
EVP_CIPHER
 *
Ægo
;

604 i‡(
	`_cùhî_m≠_íum
 (
cùhî
, &
Ægo
) < 0) {

607 #i‡
HAVE_EVP_CIPHERINIT_EX


608 
	`EVP_CIPHER_CTX_öô
 (&(
x
->
˘x
));

609 i‡(!(
	`EVP_CùhîInô_ex
 (&(
x
->
˘x
), 
Ægo
, 
NULL
, 
key
, 
iv
, 
íc
))) {

613 
	`EVP_CùhîInô
 (&(
x
->
˘x
), 
Ægo
, 
key
, 
iv
, 
íc
);

616 
	}
}

620 
	$_cùhî_upd©e
 (
cùhî_˘x
 *
x
, *
d°
, *
d°Àn
,

621 c⁄° *
§c
, 
§˛í
)

623 #i‡
HAVE_EVP_CIPHERINIT_EX


624 i‡(!(
	`EVP_CùhîUpd©e
 (&(
x
->
˘x
), 
d°
, 
d°Àn
, (*Ë
§c
, 
§˛í
))) {

628 
	`EVP_CùhîUpd©e
 (&(
x
->
˘x
), 
d°
, 
d°Àn
, (*Ë
§c
, 
§˛í
);

631 
	}
}

635 
	$_cùhî_föÆ
 (
cùhî_˘x
 *
x
, *
d°
, *
d°Àn
)

637 #i‡
HAVE_EVP_CIPHERINIT_EX


638 i‡(!(
	`EVP_CùhîFöÆ_ex
 (&(
x
->
˘x
), 
d°
, 
d°Àn
))) {

642 i‡(!(
	`EVP_CùhîFöÆ
 (&(
x
->
˘x
), 
d°
, 
d°Àn
))) {

647 
	}
}

651 
	$_cùhî_˛ónup
 (
cùhî_˘x
 *
x
)

653 #i‡
HAVE_EVP_CIPHERINIT_EX


654 i‡(!(
	`EVP_CIPHER_CTX_˛ónup
 (&(
x
->
˘x
)))) {

658 
	`EVP_CIPHER_CTX_˛ónup
 (&(
x
->
˘x
));

661 
	}
}

665 
	$_cùhî_block_size
 (
munge_cùhî_t
 
cùhî
)

667 
EVP_CIPHER
 *
Ægo
;

669 i‡(
	`_cùhî_m≠_íum
 (
cùhî
, &
Ægo
) < 0) {

672  (
	`EVP_CIPHER_block_size
 (
Ægo
));

673 
	}
}

677 
	$_cùhî_iv_size
 (
munge_cùhî_t
 
cùhî
)

679 
EVP_CIPHER
 *
Ægo
;

681 i‡(
	`_cùhî_m≠_íum
 (
cùhî
, &
Ægo
) < 0) {

684  (
	`EVP_CIPHER_iv_Àngth
 (
Ægo
));

685 
	}
}

689 
	$_cùhî_key_size
 (
munge_cùhî_t
 
cùhî
)

691 
EVP_CIPHER
 *
Ægo
;

693 i‡(
	`_cùhî_m≠_íum
 (
cùhî
, &
Ægo
) < 0) {

696  (
	`EVP_CIPHER_key_Àngth
 (
Ægo
));

697 
	}
}

701 
	$_cùhî_m≠_íum
 (
munge_cùhî_t
 
cùhî
, *
d°
)

703 c⁄° 
EVP_CIPHER
 *
Ægo
 = 
NULL
;

705 i‡((
cùhî
 > 
MUNGE_CIPHER_DEFAULT
Ë&& (cùhî < 
MUNGE_CIPHER_LAST_ITEM
)) {

706 
Ægo
 = 
_cùhî_m≠
 [
cùhî
];

708 i‡(
Ægo
 =
NULL
) {

711 i‡(
d°
 !
NULL
) {

712 * (c⁄° 
EVP_CIPHER
 **Ë
d°
 = 
Ægo
;

715 
	}
}

	@src/munged/cipher.h

29 #i‚de‡
CIPHER_H


30 
	#CIPHER_H


	)

33 #i‡
HAVE_CONFIG_H


34 
	~<c⁄fig.h
>

37 
	~<munge.h
>

38 
	~"munge_defs.h
"

45 #i‡
HAVE_LIBGCRYPT


47 
	~<g¸y±.h
>

50 
g¸y_cùhî_hd_t
 
	m˘x
;

51 
	mdo_í¸y±
;

52 
	mÀn
;

53 
	mblkÀn
;

54 
	mbuf
 [
MUNGE_MAXIMUM_BLK_LEN
];

55 #i‚de‡
NDEBUG


56 
	mmagic
;

57 
	mföÆized
;

59 } 
	tcùhî_˘x
;

64 #i‡
HAVE_OPENSSL


66 
	~<›ís¶/evp.h
>

69 
EVP_CIPHER_CTX
 
	m˘x
;

70 #i‚de‡
NDEBUG


71 
	mmagic
;

72 
	mföÆized
;

74 } 
	tcùhî_˘x
;

80 
	mCIPHER_DECRYPT
 = 0,

81 
	mCIPHER_ENCRYPT
 = 1

89 
cùhî_öô_subsy°em
 ();

95 
cùhî_öô
 (
cùhî_˘x
 *
x
, 
munge_cùhî_t
 
cùhî
,

96 *
key
, *
iv
, 
íc
);

104 
cùhî_upd©e
 (
cùhî_˘x
 *
x
, *
d°
, *
d°Àn
,

105 c⁄° *
§c
, 
§˛í
);

116 
cùhî_föÆ
 (
cùhî_˘x
 *
x
, *
d°
, *
d°Àn
);

128 
cùhî_˛ónup
 (
cùhî_˘x
 *
x
);

134 
cùhî_block_size
 (
munge_cùhî_t
 
cùhî
);

139 
cùhî_iv_size
 (
munge_cùhî_t
 
cùhî
);

145 
cùhî_key_size
 (
munge_cùhî_t
 
cùhî
);

150 
cùhî_m≠_íum
 (
munge_cùhî_t
 
cùhî
, *
d°
);

	@src/munged/conf.c

29 #i‡
HAVE_CONFIG_H


30 
	~<c⁄fig.h
>

33 
	~<sys/ty≥s.h
>

34 
	~<√töë/ö.h
>

35 
	~<as£π.h
>

36 
	~<î∫o.h
>

37 
	~<f˙é.h
>

38 
	~<munge.h
>

39 
	~<√tdb.h
>

40 
	~<°dlib.h
>

41 
	~<°rög.h
>

42 
	~<sys/∑øm.h
>

43 
	~<sys/sockë.h
>

44 
	~<sys/°©.h
>

45 
	~<uni°d.h
>

46 
	~"c⁄f.h
"

47 
	~"li˚n£.h
"

48 
	~"log.h
"

49 
	~"md.h
"

50 
	~"missög.h
"

51 
	~"munge_defs.h
"

52 
	~"∑th.h
"

53 
	~"°r.h
"

54 
	~"vîsi⁄.h
"

55 
	~"zù.h
"

62 
	#OPT_ADVICE
 256

	)

63 
	#OPT_KEY_FILE
 257

	)

64 
	#OPT_NUM_THREADS
 258

	)

65 
	#OPT_AUTH_SERVER
 259

	)

66 
	#OPT_AUTH_CLIENT
 260

	)

67 
	#OPT_BENCHMARK
 264

	)

68 
	#OPT_GROUP_CHECK
 261

	)

69 
	#OPT_GROUP_UPDATE
 262

	)

70 
	#OPT_SYSLOG
 263

	)

71 
	#OPT_LAST
 265

	)

73 c⁄° * c⁄° 
	gsh‹t_›ts
 = ":hLVfFMS:";

75 
	~<gë›t.h
>

76 
›ti⁄
 
	gl⁄g_›ts
[] = {

77 { "hñp", 
no_¨gumít
, 
NULL
, 'h' },

78 { "li˚n£", 
no_¨gumít
, 
NULL
, 'L' },

79 { "vîsi⁄", 
no_¨gumít
, 
NULL
, 'V' },

80 { "f‹˚", 
no_¨gumít
, 
NULL
, 'f' },

81 { "f‹eground", 
no_¨gumít
, 
NULL
, 'F' },

82 { "mlockÆl", 
no_¨gumít
, 
NULL
, 'M' },

83 { "sockë", 
ªquúed_¨gumít
, 
NULL
, 'S' },

84 { "advi˚", 
no_¨gumít
, 
NULL
, 
OPT_ADVICE
 },

85 { "key-fûe", 
ªquúed_¨gumít
, 
NULL
, 
OPT_KEY_FILE
 },

86 { "num-thªads", 
ªquúed_¨gumít
, 
NULL
, 
OPT_NUM_THREADS
 },

87 #i‡
deföed
(
AUTH_METHOD_RECVFD_MKFIFO
Ë|| deföed(
AUTH_METHOD_RECVFD_MKNOD
)

88 { "auth-£rvî-dú", 
ªquúed_¨gumít
, 
NULL
, 
OPT_AUTH_SERVER
 },

89 { "auth-˛õ¡-dú", 
ªquúed_¨gumít
, 
NULL
, 
OPT_AUTH_CLIENT
 },

91 { "bíchm¨k", 
no_¨gumít
, 
NULL
, 
OPT_BENCHMARK
 },

92 { "group-check-mtime", 
ªquúed_¨gumít
, 
NULL
, 
OPT_GROUP_CHECK
 },

93 { "group-upd©e-time", 
ªquúed_¨gumít
, 
NULL
, 
OPT_GROUP_UPDATE
 },

94 { "sy¶og", 
no_¨gumít
, 
NULL
, 
OPT_SYSLOG
 },

95 { 
NULL
, 0, NULL, 0 }

103 
_c⁄f_›í_keyfûe
 (c⁄° *
keyfûe
, 
gŸ_f‹˚
);

110 
c⁄f_t
 
	gc⁄f
 = 
NULL
;

117 
c⁄f_t


118 
	$¸óã_c⁄f
 ()

120 
c⁄f_t
 
c⁄f
;

122 i‡(!(
c⁄f
 = 
	`mÆloc
 ( (conf)))) {

123 
	`log_î∫o
 (
EMUNGE_NO_MEMORY
, 
LOG_ERR
, "FailedÅoállocate conf");

125 
c⁄f
->
ld
 = -1;

126 
c⁄f
->
gŸ_bíchm¨k
 = 0;

127 
c⁄f
->
gŸ_˛ock_skew
 = 1;

128 
c⁄f
->
gŸ_f‹˚
 = 0;

129 
c⁄f
->
gŸ_f‹eground
 = 0;

130 
c⁄f
->
gŸ_group_°©
 = !! 
MUNGE_GROUP_STAT_FLAG
;

131 
c⁄f
->
gŸ_mlockÆl
 = 0;

132 
c⁄f
->
gŸ_roŸ_auth
 = !! 
MUNGE_AUTH_ROOT_ALLOW_FLAG
;

133 
c⁄f
->
gŸ_sockë_ªåy
 = !! 
MUNGE_SOCKET_RETRY_FLAG
;

134 
c⁄f
->
gŸ_sy¶og
 = 0;

135 
c⁄f
->
def_cùhî
 = 
MUNGE_DEFAULT_CIPHER
;

136 
c⁄f
->
def_zù
 = 
	`zù_£À˘_deÁu…_ty≥
 (
MUNGE_DEFAULT_ZIP
);

137 
c⁄f
->
def_mac
 = 
MUNGE_DEFAULT_MAC
;

138 
c⁄f
->
def_âl
 = 
MUNGE_DEFAULT_TTL
;

139 
c⁄f
->
max_âl
 = 
MUNGE_MAXIMUM_TTL
;

143 
c⁄f
->
c⁄fig_«me
 = 
NULL
;

144 
c⁄f
->
lockfûe_fd
 = -1;

145 
c⁄f
->
lockfûe_«me
 = 
NULL
;

147 i‡(!(
c⁄f
->
logfûe_«me
 = 
	`°rdup
 (
MUNGED_LOGFILE
))) {

148 
	`log_î∫o
 (
EMUNGE_NO_MEMORY
, 
LOG_ERR
,

151 i‡(!(
c⁄f
->
pidfûe_«me
 = 
	`°rdup
 (
MUNGED_PIDFILE
))) {

152 
	`log_î∫o
 (
EMUNGE_NO_MEMORY
, 
LOG_ERR
,

155 i‡(!(
c⁄f
->
sockë_«me
 = 
	`°rdup
 (
MUNGE_SOCKET_NAME
))) {

156 
	`log_î∫o
 (
EMUNGE_NO_MEMORY
, 
LOG_ERR
,

159 i‡(!(
c⁄f
->
£ed_«me
 = 
	`°rdup
 (
MUNGED_RANDOM_SEED
))) {

160 
	`log_î∫o
 (
EMUNGE_NO_MEMORY
, 
LOG_ERR
,

163 i‡(!(
c⁄f
->
key_«me
 = 
	`°rdup
 (
MUNGED_SECRET_KEY
))) {

164 
	`log_î∫o
 (
EMUNGE_NO_MEMORY
, 
LOG_ERR
,

167 
c⁄f
->
dek_key
 = 
NULL
;

168 
c⁄f
->
dek_key_Àn
 = 0;

169 
c⁄f
->
mac_key
 = 
NULL
;

170 
c⁄f
->
mac_key_Àn
 = 0;

171 
	`mem£t
 (&
c⁄f
->
addr
, 0,  (conf->addr));

172 
c⁄f
->
gids
 = 
NULL
;

173 
c⁄f
->
gids_upd©e_£cs
 = 
MUNGE_GROUP_UPDATE_SECS
;

174 
c⁄f
->
¡hªads
 = 
MUNGE_THREADS
;

175 
c⁄f
->
auth_£rvî_dú
 = 
NULL
;

176 
c⁄f
->
auth_˛õ¡_dú
 = 
NULL
;

177 
c⁄f
->
auth_∫d_byãs
 = 
MUNGE_AUTH_RND_BYTES
;

179 #i‡
	`deföed
(
AUTH_METHOD_RECVFD_MKFIFO
Ë|| deföed(
AUTH_METHOD_RECVFD_MKNOD
)

180 i‡(!(
c⁄f
->
auth_£rvî_dú
 = 
	`°rdup
 (
MUNGE_AUTH_SERVER_DIR
))) {

181 
	`log_î∫o
 (
EMUNGE_NO_MEMORY
, 
LOG_ERR
,

184 i‡(!(
c⁄f
->
auth_˛õ¡_dú
 = 
	`°rdup
 (
MUNGE_AUTH_CLIENT_DIR
))) {

185 
	`log_î∫o
 (
EMUNGE_NO_MEMORY
, 
LOG_ERR
,

190  (
c⁄f
);

191 
	}
}

195 
	$de°roy_c⁄f
 (
c⁄f_t
 
c⁄f
)

197 
	`as£π
 (
c⁄f
 !
NULL
);

198 
	`as£π
 (
c⁄f
->
ld
 < 0);

199 
	`as£π
 (
c⁄f
->
lockfûe_fd
 < 0);

201 i‡(
c⁄f
->
c⁄fig_«me
) {

202 
	`‰ì
 (
c⁄f
->
c⁄fig_«me
);

203 
c⁄f
->
c⁄fig_«me
 = 
NULL
;

205 i‡(
c⁄f
->
lockfûe_«me
) {

206 
	`‰ì
 (
c⁄f
->
lockfûe_«me
);

207 
c⁄f
->
lockfûe_«me
 = 
NULL
;

209 i‡(
c⁄f
->
logfûe_«me
) {

210 
	`‰ì
 (
c⁄f
->
logfûe_«me
);

211 
c⁄f
->
logfûe_«me
 = 
NULL
;

213 i‡(
c⁄f
->
pidfûe_«me
) {

214 (Ë
	`u∆ök
 (
c⁄f
->
pidfûe_«me
);

215 
	`‰ì
 (
c⁄f
->
pidfûe_«me
);

216 
c⁄f
->
pidfûe_«me
 = 
NULL
;

218 i‡(
c⁄f
->
sockë_«me
) {

219 
	`‰ì
 (
c⁄f
->
sockë_«me
);

220 
c⁄f
->
sockë_«me
 = 
NULL
;

222 i‡(
c⁄f
->
£ed_«me
) {

223 
	`‰ì
 (
c⁄f
->
£ed_«me
);

224 
c⁄f
->
£ed_«me
 = 
NULL
;

226 i‡(
c⁄f
->
key_«me
) {

227 
	`‰ì
 (
c⁄f
->
key_«me
);

228 
c⁄f
->
key_«me
 = 
NULL
;

230 i‡(
c⁄f
->
dek_key
) {

231 
	`membu∫
 (
c⁄f
->
dek_key
, 0, c⁄f->
dek_key_Àn
);

232 
	`‰ì
 (
c⁄f
->
dek_key
);

233 
c⁄f
->
dek_key
 = 
NULL
;

235 i‡(
c⁄f
->
mac_key
) {

236 
	`membu∫
 (
c⁄f
->
mac_key
, 0, c⁄f->
mac_key_Àn
);

237 
	`‰ì
 (
c⁄f
->
mac_key
);

238 
c⁄f
->
mac_key
 = 
NULL
;

240 i‡(
c⁄f
->
auth_£rvî_dú
) {

241 
	`‰ì
 (
c⁄f
->
auth_£rvî_dú
);

242 
c⁄f
->
auth_£rvî_dú
 = 
NULL
;

244 i‡(
c⁄f
->
auth_˛õ¡_dú
) {

245 
	`‰ì
 (
c⁄f
->
auth_˛õ¡_dú
);

246 
c⁄f
->
auth_˛õ¡_dú
 = 
NULL
;

248 
	`‰ì
 (
c⁄f
);

251 
	}
}

255 
	$∑r£_cmdlöe
 (
c⁄f_t
 
c⁄f
, 
¨gc
, **
¨gv
)

257 *
¥og
;

258 
c
;

259 
l
;

260 *
p
;

262 
›ãº
 = 0;

264 
¥og
 = (¥og = 
	`°ºchr
 (
¨gv
[0], '/')) ?Örog + 1 :árgv[0];

268 
c
 = 
	`gë›t_l⁄g
 (
¨gc
, 
¨gv
, 
sh‹t_›ts
, 
l⁄g_›ts
, 
NULL
);

270 i‡(
c
 == -1) {

273 
c
) {

275 
	`di•œy_hñp
 (
¥og
);

276 
	`exô
 (
EMUNGE_SUCCESS
);

279 
	`di•œy_li˚n£
 ();

280 
	`exô
 (
EMUNGE_SUCCESS
);

283 
	`di•œy_vîsi⁄
 ();

284 
	`exô
 (
EMUNGE_SUCCESS
);

287 
c⁄f
->
gŸ_f‹˚
 = 1;

290 
c⁄f
->
gŸ_f‹eground
 = 1;

293 
c⁄f
->
gŸ_mlockÆl
 = 1;

296 i‡(
c⁄f
->
sockë_«me
)

297 
	`‰ì
 (
c⁄f
->
sockë_«me
);

298 i‡(!(
c⁄f
->
sockë_«me
 = 
	`°rdup
 (
›èrg
)))

299 
	`log_î∫o
 (
EMUNGE_NO_MEMORY
, 
LOG_ERR
,

302 
OPT_ADVICE
:

303 
	`¥ötf
 ("Don't Panic!\n");

304 
	`exô
 (42);

305 
OPT_KEY_FILE
:

306 i‡(
c⁄f
->
key_«me
)

307 
	`‰ì
 (
c⁄f
->
key_«me
);

308 i‡(!(
c⁄f
->
key_«me
 = 
	`°rdup
 (
›èrg
)))

309 
	`log_î∫o
 (
EMUNGE_NO_MEMORY
, 
LOG_ERR
,

312 
OPT_NUM_THREADS
:

313 
î∫o
 = 0;

314 
l
 = 
	`°πﬁ
 (
›èrg
, &
p
, 10);

315 i‡(((
î∫o
 =
ERANGE
Ë&& ((
l
 =
LONG_MIN
Ë|| (»=
LONG_MAX
)))

316 || (
›èrg
 =
p
) || (*p != '\0')

317 || (
l
 <0Ë|| (»> 
INT_MAX
)) {

318 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

319 "InvÆid vÆuê\"%s\" f‹Çum-thªads", 
›èrg
);

321 
c⁄f
->
¡hªads
 = 
l
;

323 #i‡
	`deföed
(
AUTH_METHOD_RECVFD_MKFIFO
Ë|| deföed(
AUTH_METHOD_RECVFD_MKNOD
)

324 
OPT_AUTH_SERVER
:

325 i‡(
c⁄f
->
auth_£rvî_dú
)

326 
	`‰ì
 (
c⁄f
->
auth_£rvî_dú
);

327 i‡(!(
c⁄f
->
auth_£rvî_dú
 = 
	`°rdup
 (
›èrg
)))

328 
	`log_î∫o
 (
EMUNGE_NO_MEMORY
, 
LOG_ERR
,

331 
OPT_AUTH_CLIENT
:

332 i‡(
c⁄f
->
auth_˛õ¡_dú
)

333 
	`‰ì
 (
c⁄f
->
auth_˛õ¡_dú
);

334 i‡(!(
c⁄f
->
auth_˛õ¡_dú
 = 
	`°rdup
 (
›èrg
)))

335 
	`log_î∫o
 (
EMUNGE_NO_MEMORY
, 
LOG_ERR
,

339 
OPT_BENCHMARK
:

340 
c⁄f
->
gŸ_bíchm¨k
 = 1;

342 
OPT_GROUP_CHECK
:

343 
î∫o
 = 0;

344 
l
 = 
	`°πﬁ
 (
›èrg
, &
p
, 10);

345 i‡(((
î∫o
 =
ERANGE
Ë&& ((
l
 =
LONG_MIN
Ë|| (»=
LONG_MAX
)))

346 || (
›èrg
 =
p
) || (*p != '\0')) {

347 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

348 "InvÆid vÆuê\"%s\" f‹ group-check-mtime", 
›èrg
);

350 
c⁄f
->
gŸ_group_°©
 = !! 
l
;

352 
OPT_GROUP_UPDATE
:

353 
î∫o
 = 0;

354 
l
 = 
	`°πﬁ
 (
›èrg
, &
p
, 10);

355 i‡(((
î∫o
 =
ERANGE
Ë&& ((
l
 =
LONG_MIN
Ë|| (»=
LONG_MAX
)))

356 || (
›èrg
 =
p
) || (*p != '\0')

357 || (
l
 < 
INT_MIN
Ë|| (»> 
INT_MAX
)) {

358 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

359 "InvÆid vÆuê\"%s\" f‹ group-upd©e-time", 
›èrg
);

361 
c⁄f
->
gids_upd©e_£cs
 = 
l
;

363 
OPT_SYSLOG
:

364 
c⁄f
->
gŸ_sy¶og
 = 1;

367 i‡(
›t›t
 > 0) {

368 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

369 "InvÆid o±i⁄ \"-%c\"", 
›t›t
);

371 i‡(
›töd
 > 1) {

372 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

373 "InvÆid o±i⁄ \"%s\"", 
¨gv
[
›töd
 - 1]);

376 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

381 i‡((
›töd
 > 1)

382 && (
	`°∫cmp
 (
¨gv
[
›töd
 - 1], "--", 2) == 0)) {

383 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

385 
¨gv
[
›töd
 - 1]);

387 i‡(
›t›t
 > 0) {

388 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

389 "Missögárgumíàf‹ o±i⁄ \"-%c\"", 
›t›t
);

392 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

397 i‡((
›töd
 > 1)

398 && (
	`°∫cmp
 (
¨gv
[
›töd
 - 1], "--", 2) == 0)) {

399 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

400 "Unim∂emíãd o±i⁄ \"%s\"", 
¨gv
[
›töd
 - 1]);

403 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

404 "Unim∂emíãd o±i⁄ \"-%c\"", 
c
);

409 i‡(
¨gv
[
›töd
]) {

410 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

411 "UƒecognizedÖ¨amëî \"%s\"", 
¨gv
[
›töd
]);

414 
	}
}

418 
	$di•œy_hñp
 (*
¥og
)

422 c⁄° 
w
 = -24;

424 
	`as£π
 (
¥og
 !
NULL
);

426 
	`¥ötf
 ("Ußge: %†[OPTIONS]\n", 
¥og
);

427 
	`¥ötf
 ("\n");

429 
	`¥ötf
 (" %*†%s\n", 
w
, "-h, --help",

432 
	`¥ötf
 (" %*†%s\n", 
w
, "-L, --license",

435 
	`¥ötf
 (" %*†%s\n", 
w
, "-V, --version",

438 
	`¥ötf
 ("\n");

440 
	`¥ötf
 (" %*†%s\n", 
w
, "-f, --force",

443 
	`¥ötf
 (" %*†%s\n", 
w
, "-F, --foreground",

446 
	`¥ötf
 (" %*†%s\n", 
w
, "-M, --mlockall",

449 
	`¥ötf
 (" %*†%†[%s]\n", 
w
, "-S, --socket=PATH",

450 "S≥cifyÜoˇ»sockë", 
MUNGE_SOCKET_NAME
);

452 
	`¥ötf
 ("\n");

454 #i‡
	`deföed
(
AUTH_METHOD_RECVFD_MKFIFO
Ë|| deföed(
AUTH_METHOD_RECVFD_MKNOD
)

455 
	`¥ötf
 (" %*†%†[%s]\n", 
w
, "--auth-server-dir=DIR",

456 "S≥cifyáuth-£rvî dúe˘‹y", 
MUNGE_AUTH_SERVER_DIR
);

458 
	`¥ötf
 (" %*†%†[%s]\n", 
w
, "--auth-client-dir=DIR",

459 "S≥cifyáuth-˛õ¡ dúe˘‹y", 
MUNGE_AUTH_CLIENT_DIR
);

462 
	`¥ötf
 (" %*†%s\n", 
w
, "--benchmark",

465 
	`¥ötf
 (" %*s Specify whetherÅo check \"%s\" mtime [%d]\n",

466 
w
, "--group-check-mtime=BOOL", 
GIDS_GROUP_FILE
,

467 
MUNGE_GROUP_STAT_FLAG
);

469 
	`¥ötf
 (" %*†%†[%d]\n", 
w
, "--group-update-time=INT",

471 
MUNGE_GROUP_UPDATE_SECS
);

473 
	`¥ötf
 (" %*†%†[%s]\n", 
w
, "--key-file=PATH",

474 "S≥cify se¸ë key fûe", 
MUNGED_SECRET_KEY
);

476 
	`¥ötf
 (" %*†%†[%d]\n", 
w
, "--num-threads=INT",

477 "S≥cifyÇumbî o‡thªad†tÿ•awn", 
MUNGE_THREADS
);

479 
	`¥ötf
 (" %*†%s\n", 
w
, "--syslog",

482 
	`¥ötf
 ("\n");

484 
	}
}

488 
	$¸óã_subkeys
 (
c⁄f_t
 
c⁄f
)

490 
fd
;

491 
n
;

492 
n_tŸÆ
;

493 
buf
[1024];

494 
md_˘x
 
dek_˘x
;

495 
md_˘x
 
mac_˘x
;

497 
	`as£π
 (
c⁄f
 !
NULL
);

498 
	`as£π
 (
c⁄f
->
dek_key
 =
NULL
);

499 
	`as£π
 (
c⁄f
->
mac_key
 =
NULL
);

503 i‡((
c⁄f
->
dek_key_Àn
 = 
	`md_size
 (
MUNGE_MAC_SHA1
)) <= 0) {

504 
	`log_îr
 (
EMUNGE_NO_MEMORY
, 
LOG_ERR
,

507 i‡(!(
c⁄f
->
dek_key
 = 
	`mÆloc
 (c⁄f->
dek_key_Àn
))) {

508 
	`log_îr
 (
EMUNGE_NO_MEMORY
, 
LOG_ERR
,

510 
c⁄f
->
dek_key_Àn
);

512 i‡((
c⁄f
->
mac_key_Àn
 = 
	`md_size
 (
MUNGE_MAC_SHA1
)) <= 0) {

513 
	`log_îr
 (
EMUNGE_NO_MEMORY
, 
LOG_ERR
,

516 i‡(!(
c⁄f
->
mac_key
 = 
	`mÆloc
 (c⁄f->
mac_key_Àn
))) {

517 
	`log_îr
 (
EMUNGE_NO_MEMORY
, 
LOG_ERR
,

519 
c⁄f
->
mac_key_Àn
);

521 i‡(
	`md_öô
 (&
dek_˘x
, 
MUNGE_MAC_SHA1
) < 0) {

522 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

527 
fd
 = 
	`_c⁄f_›í_keyfûe
 (
c⁄f
->
key_«me
, c⁄f->
gŸ_f‹˚
);

528 
	`as£π
 (
fd
 >= 0);

530 
n_tŸÆ
 = 0;

532 
n
 = 
	`ªad
 (
fd
, 
buf
,  (buf));

533 i‡(
n
 == 0)

535 i‡((
n
 < 0Ë&& (
î∫o
 =
EINTR
))

537 i‡(
n
 < 0)

538 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

539 "FaûedÅÿªad keyfûê\"%s\"", 
c⁄f
->
key_«me
);

540 i‡(
	`md_upd©e
 (&
dek_˘x
, 
buf
, 
n
) < 0)

541 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

543 
n_tŸÆ
 +
n
;

545 i‡(
	`˛o£
 (
fd
) < 0) {

546 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

547 "FaûedÅÿ˛o£ keyfûê\"%s\"", 
c⁄f
->
key_«me
);

549 i‡(
n_tŸÆ
 < 
MUNGE_MINIMUM_SECRET_KEY_LEN
) {

550 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

551 "Keyfûêmu° bê©Üó° %d byãs", 
MUNGE_MINIMUM_SECRET_KEY_LEN
);

553 i‡(
	`md_c›y
 (&
mac_˘x
, &
dek_˘x
) < 0) {

554 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

559 
n
 = 
c⁄f
->
dek_key_Àn
;

560 i‡–(
	`md_upd©e
 (&
dek_˘x
, "1", 1) < 0)

561 || (
	`md_föÆ
 (&
dek_˘x
, 
c⁄f
->
dek_key
, &
n
) < 0)

562 || (
	`md_˛ónup
 (&
dek_˘x
) < 0) ) {

563 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
, "FailedÅo compute cipher subkey");

565 
	`as£π
 (
n
 <
c⁄f
->
dek_key_Àn
);

569 
n
 = 
c⁄f
->
mac_key_Àn
;

570 i‡–(
	`md_upd©e
 (&
mac_˘x
, "2", 1) < 0)

571 || (
	`md_föÆ
 (&
mac_˘x
, 
c⁄f
->
mac_key
, &
n
) < 0)

572 || (
	`md_˛ónup
 (&
mac_˘x
) < 0) ) {

573 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
, "FailedÅo compute MAC subkey");

575 
	`as£π
 (
n
 <
c⁄f
->
mac_key_Àn
);

578 
	}
}

582 
	$lookup_ù_addr
 (
c⁄f_t
 
c⁄f
)

584 
ho°«me
 [
MAXHOSTNAMELEN
];

585 
ù_addr_buf
 [
INET_ADDRSTRLEN
];

586 
ho°ít
 *
h±r
;

588 i‡(
	`gëho°«me
 (
ho°«me
,  (hostname)) < 0) {

589 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
, "FailedÅo determine hostname");

591 
ho°«me
 [ (hostname) - 1] = '\0';

598 
	`mem£t
 (&
c⁄f
->
addr
, 0,  (conf->addr));

605 i‡(!(
h±r
 = 
	`gëho°by«me
 (
ho°«me
))) {

606 
	`log_msg
 (
LOG_WARNING
, "FaûedÅÿªsﬁvêho° \"%s\"", 
ho°«me
);

608 i‡( (
c⁄f
->
addr
Ë!
h±r
->
h_Àngth
) {

609 
	`log_msg
 (
LOG_WARNING
,

611 
ho°«me
, 
h±r
->
h_Àngth
);

614 
	`mem˝y
 (&
c⁄f
->
addr
, 
h±r
->
h_addr_li°
[0],  (conf->addr));

617 i‡(!
	`öë_¡›
 (
AF_INET
, &
c⁄f
->
addr
, 
ù_addr_buf
,  (ip_addr_buf))) {

618 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

619 "FaûedÅÿc⁄vîàIPáddªs†f‹ \"%s\"", 
ho°«me
);

622 
	`log_msg
 (
LOG_NOTICE
, "Running on \"%s\" (%s)",

623 (
h±r
 && h±r->
h_«me
Ë? h±r->h_«mê: 
ho°«me
, 
ù_addr_buf
);

625 
	}
}

633 
	$_c⁄f_›í_keyfûe
 (c⁄° *
keyfûe
, 
gŸ_f‹˚
)

637 
gŸ_symlök
;

638 
°©
 
°
;

639 
n
;

640 
keydú
 [
PATH_MAX
];

641 
ebuf
 [1024];

642 
fd
;

646 i‡((
keyfûe
 =
NULL
) || (*keyfile == '\0')) {

647 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
, "KeyÇot specified");

649 
gŸ_symlök
 = (
	`l°©
 (
keyfûe
, &
°
Ë=0Ë? 
	`S_ISLNK
 (°.
°_mode
) : 0;

651 i‡(
	`°©
 (
keyfûe
, &
°
) < 0) {

652 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

653 "FaûedÅÿcheck keyfûê\"%s\"", 
keyfûe
);

655 i‡(!
	`S_ISREG
 (
°
.
°_mode
Ë|| 
gŸ_symlök
) {

656 i‡(!
gŸ_f‹˚
)

657 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

659 
keyfûe
);

661 
	`log_msg
 (
LOG_WARNING
,

663 
keyfûe
);

665 i‡(
°
.
°_uid
 !
	`gëeuid
 ()) {

666 i‡(!
gŸ_f‹˚
)

667 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

669 
keyfûe
, (Ë
	`gëeuid
 ());

671 
	`log_msg
 (
LOG_WARNING
,

673 
keyfûe
, (Ë
	`gëeuid
 ());

675 i‡(
°
.
°_mode
 & (
S_IRGRP
 | 
S_IWGRP
 | 
S_IROTH
 | 
S_IWOTH
)) {

676 i‡(!
gŸ_f‹˚
)

677 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

679 "ªadabÀ o∏wrôabÀ by grou∞‹ w‹ld", 
keyfûe
);

681 
	`log_msg
 (
LOG_WARNING
,

683 "ªadabÀ o∏wrôabÀ by grou∞‹ w‹ld", 
keyfûe
);

687 i‡(
	`∑th_dú«me
 (
keyfûe
, 
keydú
,  (keydir)) < 0) {

688 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

689 "FaûedÅÿdëîmöêdú«mêo‡keyfûê\"%s\"", 
keyfûe
);

691 
n
 = 
	`∑th_is_£cuª
 (
keydú
, 
ebuf
,  (ebuf));

692 i‡(
n
 < 0) {

693 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

694 "FaûedÅÿcheck keyfûêdú \"%s\": %s", 
keydú
, 
ebuf
);

696 i‡((
n
 =0Ë&& (!
gŸ_f‹˚
)) {

697 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
, "Keyfûêi†ö£cuª: %s", 
ebuf
);

699 i‡(
n
 == 0) {

700 
	`log_msg
 (
LOG_WARNING
, "Keyfûêi†ö£cuª: %s", 
ebuf
);

704 i‡((
fd
 = 
	`›í
 (
keyfûe
, 
O_RDONLY
)) < 0) {

705 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

706 "FaûedÅÿ›í keyfûê\"%s\"", 
keyfûe
);

708  (
fd
);

709 
	}
}

	@src/munged/conf.h

29 #i‚de‡
MUNGE_CONF_H


30 
	#MUNGE_CONF_H


	)

33 
	~<öây≥s.h
>

34 
	~<munge.h
>

35 
	~<√töë/ö.h
>

36 
	~"gids.h
"

43 
	sc⁄f
 {

44 
	mld
;

45 
	mgŸ_bíchm¨k
:1;

46 
	mgŸ_˛ock_skew
:1;

47 
	mgŸ_f‹˚
:1;

48 
	mgŸ_f‹eground
:1;

49 
	mgŸ_group_°©
:1;

50 
	mgŸ_mlockÆl
:1;

51 
	mgŸ_roŸ_auth
:1;

52 
	mgŸ_sockë_ªåy
:1;

53 
	mgŸ_sy¶og
:1;

54 
munge_cùhî_t
 
	mdef_cùhî
;

55 
munge_zù_t
 
	mdef_zù
;

56 
munge_mac_t
 
	mdef_mac
;

57 
munge_âl_t
 
	mdef_âl
;

58 
munge_âl_t
 
	mmax_âl
;

59 *
	mc⁄fig_«me
;

60 
	mlockfûe_fd
;

61 *
	mlockfûe_«me
;

62 *
	mlogfûe_«me
;

63 *
	mpidfûe_«me
;

64 *
	msockë_«me
;

65 *
	m£ed_«me
;

66 *
	mkey_«me
;

67 *
	mdek_key
;

68 
	mdek_key_Àn
;

69 *
	mmac_key
;

70 
	mmac_key_Àn
;

71 
ö_addr
 
	maddr
;

72 
gids_t
 
	mgids
;

73 
	mgids_upd©e_£cs
;

74 
	m¡hªads
;

75 *
	mauth_£rvî_dú
;

76 *
	mauth_˛õ¡_dú
;

77 
	mauth_∫d_byãs
;

80 
c⁄f
 * 
	tc⁄f_t
;

87 
c⁄f_t
 
c⁄f
;

94 
c⁄f_t
 
¸óã_c⁄f
 ();

96 
de°roy_c⁄f
 (
c⁄f_t
 
c⁄f
);

98 
∑r£_cmdlöe
 (
c⁄f_t
 
c⁄f
, 
¨gc
, **
¨gv
);

100 
di•œy_hñp
 (*
¥og
);

102 
¸óã_subkeys
 (
c⁄f_t
 
c⁄f
);

104 
lookup_ù_addr
 (
c⁄f_t
 
c⁄f
);

	@src/munged/cred.c

29 #i‡
HAVE_CONFIG_H


30 
	~<c⁄fig.h
>

33 
	~<as£π.h
>

34 
	~<°dlib.h
>

35 
	~<°rög.h
>

36 
	~"¸ed.h
"

37 
	~"m_msg.h
"

38 
	~"munge_defs.h
"

39 
	~"°r.h
"

42 
munge_¸ed_t


43 
	$¸ed_¸óã
 (
m_msg_t
 
m
)

45 
munge_¸ed_t
 
c
;

47 
	`as£π
 (
m
 !
NULL
);

49 i‡(!(
c
 = 
	`mÆloc
 ( (*c)))) {

50 
	`m_msg_£t_îr
 (
m
, 
EMUNGE_NO_MEMORY
, 
NULL
);

51  (
NULL
);

55 
	`mem£t
 (
c
, 0,  (*c));

57 
c
->
vîsi⁄
 = 
MUNGE_CRED_VERSION
;

58 
c
->
msg
 = 
m
;

59  (
c
);

60 
	}
}

64 
	$¸ed_de°roy
 (
munge_¸ed_t
 
c
)

66 i‡(!
c
) {

69 i‡(
c
->
ouãr_mem
) {

70 
	`as£π
 (
c
->
ouãr_mem_Àn
 > 0);

71 
	`mem£t
 (
c
->
ouãr_mem
, 0, c->
ouãr_mem_Àn
);

72 
	`‰ì
 (
c
->
ouãr_mem
);

74 i‡(
c
->
ö√r_mem
) {

75 
	`as£π
 (
c
->
ö√r_mem_Àn
 > 0);

76 
	`mem£t
 (
c
->
ö√r_mem
, 0, c->
ö√r_mem_Àn
);

77 
	`‰ì
 (
c
->
ö√r_mem
);

79 i‡(
c
->
ªÆm_mem
) {

80 
	`as£π
 (
c
->
ªÆm_mem_Àn
 > 0);

81 
	`mem£t
 (
c
->
ªÆm_mem
, 0, c->
ªÆm_mem_Àn
);

82 
	`‰ì
 (
c
->
ªÆm_mem
);

84 
	`membu∫
 (
c
, 0,  (*c));

85 
	`‰ì
 (
c
);

87 
	}
}

	@src/munged/cred.h

29 #i‚de‡
CRED_H


30 
	#CRED_H


	)

33 
	~<öây≥s.h
>

34 
	~<munge.h
>

35 
	~"munge_defs.h
"

36 
	~"m_msg.h
"

45 
	#MUNGE_CRED_VERSION
 3

	)

47 
	#MAX_DEK
 
MUNGE_MAXIMUM_MD_LEN


	)

48 
	#MAX_IV
 
MUNGE_MAXIMUM_BLK_LEN


	)

49 
	#MAX_MAC
 
MUNGE_MAXIMUM_MD_LEN


	)

50 
	#MAX_SALT
 
MUNGE_CRED_SALT_LEN


	)

57 
	smunge_¸ed
 {

58 
uöt8_t
 
	mvîsi⁄
;

59 
m_msg_t
 
	mmsg
;

60 
	mouãr_mem_Àn
;

61 *
	mouãr_mem
;

62 
	mouãr_Àn
;

63 *
	mouãr
;

64 
	mö√r_mem_Àn
;

65 *
	mö√r_mem
;

66 
	mö√r_Àn
;

67 *
	mö√r
;

68 
	mªÆm_mem_Àn
;

69 *
	mªÆm_mem
;

70 
	mß…_Àn
;

71 
	mß…
[
MAX_SALT
];

72 
	mmac_Àn
;

73 
	mmac
[
MAX_MAC
];

74 
	mdek_Àn
;

75 
	mdek
[
MAX_DEK
];

76 
	miv_Àn
;

77 
	miv
[
MAX_IV
];

78 *
	mouãr_zù_ªf
;

81 
munge_¸ed
 * 
	tmunge_¸ed_t
;

88 
munge_¸ed_t
 
¸ed_¸óã
 (
m_msg_t
 
m
);

90 
¸ed_de°roy
 (
munge_¸ed_t
 
c
);

	@src/munged/crypto.c

29 #i‡
HAVE_CONFIG_H


30 
	~<c⁄fig.h
>

33 
	~<î∫o.h
>

34 
	~<munge.h
>

35 
	~<±hªad.h
>

36 
	~<°dlib.h
>

37 
	~"¸y±o.h
"

38 
	~"cùhî.h
"

39 
	~"md.h
"

40 
	~"log.h
"

47 #i‡
HAVE_LIBGCRYPT


49 
	~<g¸y±.h
>

52 
	gGCRY_THREAD_OPTION_PTHREAD_IMPL
;

56 
	$¸y±o_öô
 ()

58 
g¸y_îr‹_t
 
e
;

60 
e
 = 
	`g¸y_c⁄åﬁ
 (
GCRYCTL_SET_THREAD_CBS
, &
g¸y_thªads_±hªad
);

61 i‡(
e
) {

62 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

63 "FaûedÅÿ£àLibg¸y±Åhªad cÆlbacks: %s", 
	`g¸y_°ªº‹
 (
e
));

67 i‡(!
	`g¸y_check_vîsi⁄
 (
NULL
)) {

68 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

71 
e
 = 
	`g¸y_c⁄åﬁ
 (
GCRYCTL_DISABLE_SECMEM
, 0);

72 i‡(
e
) {

73 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

75 
	`g¸y_°ªº‹
 (
e
));

77 
e
 = 
	`g¸y_c⁄åﬁ
 (
GCRYCTL_INITIALIZATION_FINISHED
, 0);

78 i‡(
e
) {

79 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

81 
	`g¸y_°ªº‹
 (
e
));

83 
	`cùhî_öô_subsy°em
 ();

84 
	`md_öô_subsy°em
 ();

86 
	}
}

90 
	$¸y±o_föi
 ()

93 
	}
}

102 #i‡
HAVE_OPENSSL


104 
	~<as£π.h
>

105 
	~<›ís¶/¸y±o.h
>

106 
	~<›ís¶/îr.h
>

107 
	~<°rög.h
>

108 
	~"°r.h
"

111 
	#OPENSSL_LOG_MAX_ERR_LEN
 1024

	)

114 
±hªad_muãx_t
 *
	g›ís¶_muãx_¨øy
 = 
NULL
;

117 
_›ís¶_thªad_id
 ();

118 
_›ís¶_thªad_lockög
 (
mode
, 
n
,

119 c⁄° *
fûe
, 
löe
);

122 #i‡
HAVE_CRYPTO_DYNLOCK


124 
	sCRYPTO_dy∆ock_vÆue
 {

125 
±hªad_muãx_t
 
	mmuãx
;

128 
CRYPTO_dy∆ock_vÆue
 * 
_›ís¶_thªad_dy∆ock_¸óã
 (

129 c⁄° *
fûe
, 
löe
);

130 
_›ís¶_thªad_dy∆ock_lock
 (

131 
mode
, 
CRYPTO_dy∆ock_vÆue
 *
lock
, c⁄° *
fûe
, 
löe
);

132 
_›ís¶_thªad_dy∆ock_de°roy
 (

133 
CRYPTO_dy∆ock_vÆue
 *
lock
, c⁄° *
fûe
, 
löe
);

139 
	$¸y±o_öô
 ()

141 
n
;

142 
i
;

144 i‡(
›ís¶_muãx_¨øy
) {

147 i‡((
n
 = 
	`CRYPTO_num_locks
 ()) <= 0) {

148 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

151 i‡(!(
›ís¶_muãx_¨øy
 = 
	`mÆloc
 (
n
 *  (
±hªad_muãx_t
)))) {

152 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

153 "FaûedÅÿÆloˇã %d O≥nSSLÜocks", 
n
);

155 
i
 = 0; i < 
n
; i++) {

156 
î∫o
 = 
	`±hªad_muãx_öô
 (&
›ís¶_muãx_¨øy
[
i
], 
NULL
);

157 i‡(
î∫o
 != 0) {

158 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

159 "FaûedÅÿöô O≥nSSL muãx %d", 
i
);

162 
	`CRYPTO_£t_id_ˇŒback
 (
_›ís¶_thªad_id
);

163 
	`CRYPTO_£t_lockög_ˇŒback
 (
_›ís¶_thªad_lockög
);

165 #i‡
HAVE_CRYPTO_DYNLOCK


166 
	`CRYPTO_£t_dy∆ock_¸óã_ˇŒback
 (
_›ís¶_thªad_dy∆ock_¸óã
);

167 
	`CRYPTO_£t_dy∆ock_lock_ˇŒback
 (
_›ís¶_thªad_dy∆ock_lock
);

168 
	`CRYPTO_£t_dy∆ock_de°roy_ˇŒback
 (
_›ís¶_thªad_dy∆ock_de°roy
);

171 
	`cùhî_öô_subsy°em
 ();

172 
	`md_öô_subsy°em
 ();

174 
	}
}

178 
	$¸y±o_föi
 ()

180 
n
;

181 
i
;

183 i‡(!
›ís¶_muãx_¨øy
) {

186 
	`CRYPTO_£t_id_ˇŒback
 (
NULL
);

187 
	`CRYPTO_£t_lockög_ˇŒback
 (
NULL
);

189 #i‡
HAVE_CRYPTO_DYNLOCK


190 
	`CRYPTO_£t_dy∆ock_¸óã_ˇŒback
 (
NULL
);

191 
	`CRYPTO_£t_dy∆ock_lock_ˇŒback
 (
NULL
);

192 
	`CRYPTO_£t_dy∆ock_de°roy_ˇŒback
 (
NULL
);

195 i‡((
n
 = 
	`CRYPTO_num_locks
 ()) <= 0) {

196 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

199 
i
 = 0; i < 
n
; i++) {

200 
î∫o
 = 
	`±hªad_muãx_de°roy
 (&
›ís¶_muãx_¨øy
[
i
]);

201 i‡(
î∫o
 != 0) {

202 
	`log_msg
 (
LOG_ERR
,

203 "FaûedÅÿde°roy O≥nSSL muãx %d: %s", 
i
, 
	`°ªº‹
 (
î∫o
));

206 
	`‰ì
 (
›ís¶_muãx_¨øy
);

207 
›ís¶_muãx_¨øy
 = 
NULL
;

209 
	}
}

213 
	$_›ís¶_thªad_id
 ()

215  ((Ë
	`±hªad_£lf
 ());

216 
	}
}

220 
	$_›ís¶_thªad_lockög
 (
mode
, 
n
, c⁄° *
fûe
, 
löe
)

222 i‡(
mode
 & 
CRYPTO_LOCK
) {

223 
î∫o
 = 
	`±hªad_muãx_lock
 (&
›ís¶_muãx_¨øy
[
n
]);

224 i‡(
î∫o
 != 0) {

225 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

226 "FaûedÅÿlock O≥nSSL muãx %d", 
n
);

230 
î∫o
 = 
	`±hªad_muãx_u∆ock
 (&
›ís¶_muãx_¨øy
[
n
]);

231 i‡(
î∫o
 != 0) {

232 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

233 "FaûedÅÿu∆ock O≥nSSL muãx %d", 
n
);

237 
	}
}

240 #i‡
HAVE_CRYPTO_DYNLOCK


242 
CRYPTO_dy∆ock_vÆue
 *

243 
	$_›ís¶_thªad_dy∆ock_¸óã
 (c⁄° *
fûe
, 
löe
)

245 
CRYPTO_dy∆ock_vÆue
 *
lock
;

247 i‡(!(
lock
 = 
	`mÆloc
 ( (
CRYPTO_dy∆ock_vÆue
)))) {

248 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

251 
î∫o
 = 
	`±hªad_muãx_öô
 (&
lock
->
muãx
, 
NULL
);

252 i‡(
î∫o
 != 0) {

253 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

256  (
lock
);

257 
	}
}

261 
	$_›ís¶_thªad_dy∆ock_lock
 (
mode
, 
CRYPTO_dy∆ock_vÆue
 *
lock
,

262 c⁄° *
fûe
, 
löe
)

264 i‡(
mode
 & 
CRYPTO_LOCK
) {

265 
î∫o
 = 
	`±hªad_muãx_lock
 (&
lock
->
muãx
);

266 i‡(
î∫o
 != 0) {

267 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

272 
î∫o
 = 
	`±hªad_muãx_u∆ock
 (&
lock
->
muãx
);

273 i‡(
î∫o
 != 0) {

274 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

279 
	}
}

283 
	$_›ís¶_thªad_dy∆ock_de°roy
 (
CRYPTO_dy∆ock_vÆue
 *
lock
,

284 c⁄° *
fûe
, 
löe
)

286 
î∫o
 = 
	`±hªad_muãx_de°roy
 (&
lock
->
muãx
);

287 i‡(
î∫o
 != 0) {

288 
	`log_msg
 (
LOG_ERR
,

289 "FaûedÅÿde°roy O≥nSSL dy«mi¯muãx: %s", 
	`°ªº‹
 (
î∫o
));

291 
	`‰ì
 (
lock
);

293 
	}
}

297 
	$›ís¶_log_msg
 (
¥i‹ôy
)

299 
e
;

300 c⁄° *
d©a
;

301 
Êags
;

302 
buf
 [
OPENSSL_LOG_MAX_ERR_LEN
];

304 
	`ERR_lﬂd_¸y±o_°rögs
 ();

305 (
e
 = 
	`ERR_gë_îr‹_löe_d©a
 (
NULL
, NULL, &
d©a
, &
Êags
)) != 0) {

306 #i‡
HAVE_ERR_ERROR_STRING_N


307 
	`ERR_îr‹_°rög_n
 (
e
, 
buf
,  (buf));

309 
	`as£π
 ( (
buf
) >= 120);

310 
	`ERR_îr‹_°rög
 (
e
, 
buf
);

312 i‡(
d©a
 && (
Êags
 & 
ERR_TXT_STRING
)) {

313 (Ë
	`°rˇtf
 (
buf
,  (buf), ":%s", 
d©a
);

315 
	`log_msg
 (
¥i‹ôy
, "%s", 
buf
);

317 
	`ERR_‰ì_°rögs
 ();

319 
	}
}

332 
	$¸y±o_memcmp
 (c⁄° *
s1
, c⁄° *
s2
, 
size_t
 
n
)

334 c⁄° *
a
 = 
s1
;

335 c⁄° *
b
 = 
s2
;

336 
size_t
 
i
;

337 
x
;

339 
i
 = 0, 
x
 = 0; i < 
n
; i++) {

340 
x
 |
a
[
i
] ^ 
b
[i];

342  (
x
 != 0);

343 
	}
}

	@src/munged/crypto.h

29 #i‚de‡
CRYPTO_H


30 
	#CRYPTO_H


	)

33 #i‡
HAVE_CONFIG_H


34 
	~<c⁄fig.h
>

37 #i‡
HAVE_LIBGCRYPT
 && 
HAVE_OPENSSL


41 
	~<sys/ty≥s.h
>

44 
¸y±o_öô
 ();

49 
¸y±o_föi
 ();

54 
¸y±o_memcmp
 (c⁄° *
s1
, c⁄° *
s2
, 
size_t
 
n
);

63 #i‡
HAVE_OPENSSL


65 
	~"log.h
"

67 
›ís¶_log_msg
 (
¥i‹ôy
);

	@src/munged/dec.c

29 #i‡
HAVE_CONFIG_H


30 
	~"c⁄fig.h
"

33 
	~<as£π.h
>

34 
	~<˘y≥.h
>

35 
	~<î∫o.h
>

36 
	~<sys/ty≥s.h
>

37 
	~<√töë/ö.h
>

38 
	~<°dlib.h
>

39 
	~<°rög.h
>

40 
	~<time.h
>

41 
	~"auth_ªcv.h
"

42 
	~"ba£64.h
"

43 
	~"cùhî.h
"

44 
	~"c⁄f.h
"

45 
	~"¸ed.h
"

46 
	~"¸y±o.h
"

47 
	~"dec.h
"

48 
	~"gids.h
"

49 
	~"log.h
"

50 
	~"m_msg.h
"

51 
	~"mac.h
"

52 
	~"munge_defs.h
"

53 
	~"øndom.h
"

54 
	~"ª∂ay.h
"

55 
	~"°r.h
"

56 
	~"zù.h
"

63 
dec_vÆid©e_msg
 (
m_msg_t
 
m
);

64 
dec_time°amp
 (
munge_¸ed_t
 
c
);

65 
dec_authítiˇã
 (
munge_¸ed_t
 
c
);

66 
dec_check_ªåy
 (
munge_¸ed_t
 
c
);

67 
dec_u«rm‹
 (
munge_¸ed_t
 
c
);

68 
dec_u≈ack_ouãr
 (
munge_¸ed_t
 
c
);

69 
dec_de¸y±
 (
munge_¸ed_t
 
c
);

70 
dec_vÆid©e_mac
 (
munge_¸ed_t
 
c
);

71 
dec_decom¥ess
 (
munge_¸ed_t
 
c
);

72 
dec_u≈ack_ö√r
 (
munge_¸ed_t
 
c
);

73 
dec_vÆid©e_time
 (
munge_¸ed_t
 
c
);

74 
dec_vÆid©e_auth
 (
munge_¸ed_t
 
c
);

75 
dec_vÆid©e_ª∂ay
 (
munge_¸ed_t
 
c
);

83 
	$dec_¥o˚ss_msg
 (
m_msg_t
 
m
)

85 
munge_¸ed_t
 
c
 = 
NULL
;

86 
rc
 = -1;

88 i‡(
	`dec_vÆid©e_msg
 (
m
) < 0)

90 i‡(!(
c
 = 
	`¸ed_¸óã
 (
m
)))

92 i‡(
	`dec_time°amp
 (
c
) < 0)

94 i‡(
	`dec_authítiˇã
 (
c
) < 0)

96 i‡(
	`dec_check_ªåy
 (
c
) < 0)

98 i‡(
	`dec_u«rm‹
 (
c
) < 0)

100 i‡(
	`dec_u≈ack_ouãr
 (
c
) < 0)

102 i‡(
	`dec_de¸y±
 (
c
) < 0)

104 i‡(
	`dec_vÆid©e_mac
 (
c
) < 0)

106 i‡(
	`dec_decom¥ess
 (
c
) < 0)

108 i‡(
	`dec_u≈ack_ö√r
 (
c
) < 0)

110 i‡(
	`dec_vÆid©e_auth
 (
c
) < 0)

112 i‡(
	`dec_vÆid©e_time
 (
c
) < 0)

114 i‡(
	`dec_vÆid©e_ª∂ay
 (
c
) < 0)

117 
rc
 = 0;

124 i‡((
rc
 != 0)

125 && (
m
->
îr‹_num
 !
EMUNGE_CRED_EXPIRED
)

126 && (
m
->
îr‹_num
 !
EMUNGE_CRED_REWOUND
)

127 && (
m
->
îr‹_num
 !
EMUNGE_CRED_REPLAYED
) ) {

128 
	`m_msg_ª£t
 (
m
);

140 i‡(
	`m_msg_£nd
 (
m
, 
MUNGE_MSG_DEC_RSP
, 0Ë!
EMUNGE_SUCCESS
) {

141 i‡(
rc
 == 0) {

142 
	`ª∂ay_ªmove
 (
c
);

144 
rc
 = -1;

146 
	`¸ed_de°roy
 (
c
);

147  (
rc
);

148 
	}
}

156 
	$dec_vÆid©e_msg
 (
m_msg_t
 
m
)

160 
	`as£π
 (
m
 !
NULL
);

161 
	`as£π
 (
m
->
ty≥
 =
MUNGE_MSG_DEC_REQ
);

163 i‡((
m
->
d©a_Àn
 =0Ë|| (m->
d©a
 =
NULL
)) {

164  (
	`m_msg_£t_îr
 (
m
, 
EMUNGE_SNAFU
,

165 
	`°rdup
 ("No credential specified in decodeÑequest")));

168 
	}
}

172 
	$dec_time°amp
 (
munge_¸ed_t
 
c
)

176 
m_msg_t
 
m
 = 
c
->
msg
;

177 
time_t
 
now
;

181 i‡(
	`time
 (&
now
Ë=((
time_t
) -1)) {

182  (
	`m_msg_£t_îr
 (
m
, 
EMUNGE_SNAFU
,

183 
	`°rdup
 ("FailedÅo query currentÅime")));

185 
m
->
time0
 = 0;

186 
m
->
time1
 = 
now
;

188 
	}
}

192 
	$dec_authítiˇã
 (
munge_¸ed_t
 
c
)

196 
m_msg_t
 
m
 = 
c
->
msg
;

197 
uid_t
 *
p_uid
;

198 
gid_t
 *
p_gid
;

200 
p_uid
 = (
uid_t
 *Ë&(
m
->
˛õ¡_uid
);

201 
p_gid
 = (
gid_t
 *Ë&(
m
->
˛õ¡_gid
);

205 i‡(
	`auth_ªcv
 (
m
, 
p_uid
, 
p_gid
Ë!
EMUNGE_SUCCESS
) {

206  (
	`m_msg_£t_îr
 (
m
, 
EMUNGE_SNAFU
,

207 
	`°rdup
 ("FailedÅo determine client identity")));

210 
	}
}

214 
	$dec_check_ªåy
 (
munge_¸ed_t
 
c
)

218 
m_msg_t
 
m
 = 
c
->
msg
;

220 i‡(
m
->
ªåy
 > 0) {

221 
	`log_msg
 (
LOG_INFO
,

223 
m
->
ªåy
, m->
˛õ¡_uid
, m->
˛õ¡_gid
);

225 i‡(
m
->
ªåy
 > 
MUNGE_SOCKET_RETRY_ATTEMPTS
) {

226  (
	`m_msg_£t_îr
 (
m
, 
EMUNGE_SOCKET
,

227 
	`°rdupf
 ("Exceeded maximumÇumber of decodeáttempts")));

230 
	}
}

234 
	$dec_u«rm‹
 (
munge_¸ed_t
 
c
)

239 
m_msg_t
 
m
 = 
c
->
msg
;

240 
¥efix_Àn
;

241 
suffix_Àn
;

242 
ba£64_Àn
;

243 *
ba£64_±r
;

244 *
ba£64_tmp
;

245 
n
;

247 
¥efix_Àn
 = 
	`°æí
 (
MUNGE_CRED_PREFIX
);

248 
suffix_Àn
 = 
	`°æí
 (
MUNGE_CRED_SUFFIX
);

250 
ba£64_±r
 = 
m
->
d©a
;

251 
ba£64_Àn
 = 
m
->
d©a_Àn
;

255 (
ba£64_Àn
 > 0Ë&& 
	`is•a˚
 (*
ba£64_±r
)) {

256 
ba£64_±r
++;

257 
ba£64_Àn
--;

259 i‡((
ba£64_Àn
 =0Ë|| (*
ba£64_±r
 == '\0')) {

260  (
	`m_msg_£t_îr
 (
m
, 
EMUNGE_BAD_ARG
,

261 
	`°rdup
 ("No credential specified")));

266 i‡(
¥efix_Àn
 > 0) {

267 i‡(
	`°∫cmp
 ((*Ë
ba£64_±r
, 
MUNGE_CRED_PREFIX
, 
¥efix_Àn
)) {

268  (
	`m_msg_£t_îr
 (
m
, 
EMUNGE_BAD_CRED
,

269 
	`°rdup
 ("FailedÅo matchármorÖrefix")));

271 
ba£64_±r
 +
¥efix_Àn
;

272 
ba£64_Àn
 -
¥efix_Àn
;

286 i‡(
suffix_Àn
 > 0) {

287 
ba£64_tmp
 = 
ba£64_±r
 + 
ba£64_Àn
 - 
suffix_Àn
;

288 
ba£64_tmp
 >
ba£64_±r
) {

289 i‡(!
	`°∫cmp
 ((*Ë
ba£64_tmp
, 
MUNGE_CRED_SUFFIX
, 
suffix_Àn
))

291 
ba£64_tmp
--;

293 i‡(
ba£64_tmp
 < 
ba£64_±r
) {

294  (
	`m_msg_£t_îr
 (
m
, 
EMUNGE_BAD_CRED
,

295 
	`°rdup
 ("FailedÅo matchármor suffix")));

297 
ba£64_Àn
 = 
ba£64_tmp
 - 
ba£64_±r
;

301 
c
->
ouãr_mem_Àn
 = 
	`ba£64_decode_Àngth
 (
ba£64_Àn
);

302 i‡(!(
c
->
ouãr_mem
 = 
	`mÆloc
 (c->
ouãr_mem_Àn
))) {

303  (
	`m_msg_£t_îr
 (
m
, 
EMUNGE_NO_MEMORY
, 
NULL
));

307 i‡(
	`ba£64_decode_block
 (
c
->
ouãr_mem
, &
n
, 
ba£64_±r
, 
ba£64_Àn
) < 0) {

308  (
	`m_msg_£t_îr
 (
m
, 
EMUNGE_BAD_CRED
,

309 
	`°rdup
 ("FailedÅo base64-decode credential")));

311 
	`as£π
 (
n
 < 
c
->
ouãr_mem_Àn
);

315 
	`‰ì
 (
m
->
d©a
);

316 
m
->
d©a
 = 
NULL
;

317 
m
->
d©a_Àn
 = 0;

318 
	`as£π
 (
m
->
d©a_is_c›y
 == 0);

323 
c
->
ouãr
 = c->
ouãr_mem
;

324 
c
->
ouãr_Àn
 = 
n
;

326 
	}
}

330 
	$dec_u≈ack_ouãr
 (
munge_¸ed_t
 
c
)

345 
m_msg_t
 
m
 = 
c
->
msg
;

346 *
p
;

347 
Àn
;

348 
n
;

350 
	`as£π
 (
c
->
ouãr
 !
NULL
);

354 
p
 = 
c
->
ouãr
;

355 
Àn
 = 
c
->
ouãr_Àn
;

363 
n
 =  (
c
->
vîsi⁄
);

364 
	`as£π
 (
n
 == 1);

365 i‡(
n
 > 
Àn
) {

366  (
	`m_msg_£t_îr
 (
m
, 
EMUNGE_BAD_CRED
,

367 
	`°rdup
 ("Truncated credential version")));

369 
c
->
vîsi⁄
 = *
p
;

370 i‡(
c
->
vîsi⁄
 !
MUNGE_CRED_VERSION
) {

371  (
	`m_msg_£t_îr
 (
m
, 
EMUNGE_BAD_VERSION
,

372 
	`°rdupf
 ("InvÆid cªdítü»vîsi⁄ %d", 
c
->
vîsi⁄
)));

374 
p
 +
n
;

375 
Àn
 -
n
;

379 
n
 =  (
m
->
cùhî
);

380 
	`as£π
 (
n
 == 1);

381 i‡(
n
 > 
Àn
) {

382  (
	`m_msg_£t_îr
 (
m
, 
EMUNGE_BAD_CRED
,

383 
	`°rdup
 ("Truncated cipherÅype")));

385 
m
->
cùhî
 = *
p
;

386 i‡(
m
->
cùhî
 =
MUNGE_CIPHER_NONE
) {

387 
c
->
iv_Àn
 = 0;

390 i‡(
	`cùhî_m≠_íum
 (
m
->
cùhî
, 
NULL
) < 0) {

391  (
	`m_msg_£t_îr
 (
m
, 
EMUNGE_BAD_CIPHER
,

392 
	`°rdupf
 ("InvÆid cùhîÅy≥ %d", 
m
->
cùhî
)));

394 
c
->
iv_Àn
 = 
	`cùhî_iv_size
 (
m
->
cùhî
);

395 i‡(
c
->
iv_Àn
 < 0) {

396  (
	`m_msg_£t_îr
 (
m
, 
EMUNGE_SNAFU
,

397 
	`°rdupf
 ("FailedÅo determine IVÜength for cipherÅype %d",

398 
m
->
cùhî
)));

400 
	`as£π
 (
c
->
iv_Àn
 < (c->
iv
));

402 
p
 +
n
;

403 
Àn
 -
n
;

407 
n
 =  (
m
->
mac
);

408 
	`as£π
 (
n
 == 1);

409 i‡(
n
 > 
Àn
) {

410  (
	`m_msg_£t_îr
 (
m
, 
EMUNGE_BAD_CRED
,

411 
	`°rdup
 ("Truncated MACÅype")));

413 
m
->
mac
 = *
p
;

414 i‡(
	`mac_m≠_íum
 (
m
->
mac
, 
NULL
) < 0) {

415  (
	`m_msg_£t_îr
 (
m
, 
EMUNGE_BAD_MAC
,

416 
	`°rdupf
 ("InvÆid MACÅy≥ %d", 
m
->
mac
)));

418 
c
->
mac_Àn
 = 
	`mac_size
 (
m
->
mac
);

419 i‡(
c
->
mac_Àn
 <= 0) {

420  (
	`m_msg_£t_îr
 (
m
, 
EMUNGE_SNAFU
,

421 
	`°rdupf
 ("FailedÅo determine digestÜength for MACÅype %d",

422 
m
->
mac
)));

424 
	`as£π
 (
c
->
mac_Àn
 < (c->
mac
));

425 
p
 +
n
;

426 
Àn
 -
n
;

432 i‡(
	`mac_size
 (
m
->
mac
Ë< 
	`cùhî_key_size
 (m->
cùhî
)) {

433  (
	`m_msg_£t_îr
 (
m
, 
EMUNGE_BAD_MAC
,

434 
	`°rdupf
 ("Invalid MACÅype %d with cipherÅype %d",

435 
m
->
mac
, m->
cùhî
)));

440 
n
 =  (
m
->
zù
);

441 
	`as£π
 (
n
 == 1);

442 i‡(
n
 > 
Àn
) {

443  (
	`m_msg_£t_îr
 (
m
, 
EMUNGE_BAD_CRED
,

444 
	`°rdup
 ("Truncated compressionÅype")));

446 
m
->
zù
 = *
p
;

447 i‡(
m
->
zù
 =
MUNGE_ZIP_NONE
) {

451 i‡(!
	`zù_is_vÆid_ty≥
 (
m
->
zù
)) {

452  (
	`m_msg_£t_îr
 (
m
, 
EMUNGE_BAD_ZIP
,

453 
	`°rdupf
 ("InvÆid com¥essi⁄Åy≥ %d", 
m
->
zù
)));

456 
p
 +
n
;

457 
Àn
 -
n
;

461 
n
 =  (
m
->
ªÆm_Àn
);

462 
	`as£π
 (
n
 == 1);

463 i‡(
n
 > 
Àn
) {

464  (
	`m_msg_£t_îr
 (
m
, 
EMUNGE_BAD_CRED
,

465 
	`°rdup
 ("Truncated securityÑealmÜength")));

467 
m
->
ªÆm_Àn
 = *
p
;

468 
p
 +
n
;

469 
Àn
 -
n
;

474 i‡(
m
->
ªÆm_Àn
 > 0) {

475 i‡(
m
->
ªÆm_Àn
 > 
Àn
) {

476  (
	`m_msg_£t_îr
 (
m
, 
EMUNGE_BAD_CRED
,

477 
	`°rdup
 ("Truncated securityÑealm string")));

479 
c
->
ªÆm_mem_Àn
 = 
m
->
ªÆm_Àn
 + 1;

484 i‡(!(
c
->
ªÆm_mem
 = 
	`mÆloc
 (c->
ªÆm_mem_Àn
))) {

485  (
	`m_msg_£t_îr
 (
m
, 
EMUNGE_NO_MEMORY
, 
NULL
));

487 
	`mem˝y
 (
c
->
ªÆm_mem
, 
p
, 
m
->
ªÆm_Àn
);

488 
c
->
ªÆm_mem
[
m
->
ªÆm_Àn
] = '\0';

489 
p
 +
m
->
ªÆm_Àn
;

490 
Àn
 -
m
->
ªÆm_Àn
;

494 
m
->
ªÆm_°r
 = (*Ë
c
->
ªÆm_mem
;

495 
m
->
ªÆm_Àn
 = 
c
->
ªÆm_mem_Àn
;

496 
m
->
ªÆm_is_c›y
 = 1;

501 i‡(
c
->
iv_Àn
 > 0) {

502 i‡(
c
->
iv_Àn
 > 
Àn
) {

503  (
	`m_msg_£t_îr
 (
m
, 
EMUNGE_BAD_CRED
,

504 
	`°rdup
 ("Truncated cipher IV")));

506 
	`as£π
 (
c
->
iv_Àn
 < (c->
iv
));

507 
	`mem˝y
 (
c
->
iv
, 
p
, c->
iv_Àn
);

508 
p
 +
c
->
iv_Àn
;

509 
Àn
 -
c
->
iv_Àn
;

513 
c
->
ouãr_Àn
 = 
p
 - c->
ouãr
;

517 
	`mem˝y
 (
c
->
mac
, 
p
, c->
mac_Àn
);

518 
p
 +
c
->
mac_Àn
;

519 
Àn
 -
c
->
mac_Àn
;

523 
c
->
ö√r
 = 
p
;

524 
c
->
ö√r_Àn
 = 
Àn
;

526 
	}
}

530 
	$dec_de¸y±
 (
munge_¸ed_t
 
c
)

548 
m_msg_t
 
m
 = 
c
->
msg
;

549 
buf_Àn
;

550 *
buf
;

551 *
buf_±r
;

552 
cùhî_˘x
 
x
;

553 
n_wrôãn
;

554 
n
;

558 i‡(
m
->
cùhî
 =
MUNGE_CIPHER_NONE
) {

564 
c
->
dek_Àn
 = 
	`mac_size
 (
m
->
mac
);

565 i‡(
c
->
dek_Àn
 <= 0) {

566  (
	`m_msg_£t_îr
 (
m
, 
EMUNGE_SNAFU
,

567 
	`°rdupf
 ("FailedÅo determine DEK keyÜength for MACÅype %d",

568 
m
->
mac
)));

570 
	`as£π
 (
c
->
dek_Àn
 < (c->
dek
));

572 
n
 = 
c
->
dek_Àn
;

573 i‡(
	`mac_block
 (
m
->
mac
, 
c⁄f
->
dek_key
, c⁄f->
dek_key_Àn
,

574 
c
->
dek
, &
n
, c->
mac
, c->
mac_Àn
) < 0) {

575  (
	`m_msg_£t_îr
 (
m
, 
EMUNGE_SNAFU
,

576 
	`°rdup
 ("FailedÅo compute DEK")));

578 
	`as£π
 (
n
 <
c
->
dek_Àn
);

579 
	`as£π
 (
n
 >
	`cùhî_key_size
 (
m
->
cùhî
));

584 
n
 = 
	`cùhî_block_size
 (
m
->
cùhî
);

585 i‡(
n
 <= 0) {

586  (
	`m_msg_£t_îr
 (
m
, 
EMUNGE_SNAFU
,

587 
	`°rdupf
 ("FailedÅo determine block size for cipherÅype %d",

588 
m
->
cùhî
)));

590 
buf_Àn
 = 
c
->
ö√r_Àn
 + 
n
;

591 i‡(!(
buf
 = 
	`mÆloc
 (
buf_Àn
))) {

592  (
	`m_msg_£t_îr
 (
m
, 
EMUNGE_NO_MEMORY
, 
NULL
));

596 i‡(
	`cùhî_öô
 (&
x
, 
m
->
cùhî
, 
c
->
dek
, c->
iv
, 
CIPHER_DECRYPT
) < 0) {

597 
îr
;

599 
buf_±r
 = 
buf
;

600 
n_wrôãn
 = 0;

601 
n
 = 
buf_Àn
;

602 i‡(
	`cùhî_upd©e
 (&
x
, 
buf_±r
, &
n
, 
c
->
ö√r
, c->
ö√r_Àn
) < 0) {

603 
îr_˛ónup
;

605 
buf_±r
 +
n
;

606 
n_wrôãn
 +
n
;

607 
n
 = 
buf_Àn
 - 
n_wrôãn
;

608 i‡(
	`cùhî_föÆ
 (&
x
, 
buf_±r
, &
n
) < 0) {

610 
	`m_msg_£t_îr
 (
m
, 
EMUNGE_CRED_INVALID
, 
NULL
);

612 
buf_±r
 +
n
;

613 
n_wrôãn
 +
n
;

614 i‡(
	`cùhî_˛ónup
 (&
x
) < 0) {

615 
îr
;

617 
	`as£π
 (
n_wrôãn
 <
buf_Àn
);

621 
	`as£π
 (
c
->
ö√r_mem
 =
NULL
);

622 
	`as£π
 (
c
->
ö√r_mem_Àn
 == 0);

623 
c
->
ö√r_mem
 = 
buf
;

624 
c
->
ö√r_mem_Àn
 = 
buf_Àn
;

625 
c
->
ö√r
 = 
buf
;

626 
c
->
ö√r_Àn
 = 
n_wrôãn
;

629 
îr_˛ónup
:

630 
	`cùhî_˛ónup
 (&
x
);

631 
îr
:

632 
	`mem£t
 (
buf
, 0, 
buf_Àn
);

633 
	`‰ì
 (
buf
);

634  (
	`m_msg_£t_îr
 (
m
, 
EMUNGE_SNAFU
,

635 
	`°rdup
 ("FailedÅo decrypt credential")));

636 
	}
}

640 
	$dec_vÆid©e_mac
 (
munge_¸ed_t
 
c
)

645 
m_msg_t
 
m
 = 
c
->
msg
;

646 
mac_˘x
 
x
;

647 
mac
[
MAX_MAC
];

648 
n
;

652 i‡(
	`mac_öô
 (&
x
, 
m
->
mac
, 
c⁄f
->
mac_key
, c⁄f->
mac_key_Àn
) < 0) {

653 
îr
;

655 i‡(
	`mac_upd©e
 (&
x
, 
c
->
ouãr
, c->
ouãr_Àn
) < 0) {

656 
îr_˛ónup
;

658 i‡(
	`mac_upd©e
 (&
x
, 
c
->
ö√r
, c->
ö√r_Àn
) < 0) {

659 
îr_˛ónup
;

661 
n
 =  (
mac
);

662 i‡(
	`mac_föÆ
 (&
x
, 
mac
, &
n
) < 0) {

663 
îr_˛ónup
;

665 i‡(
	`mac_˛ónup
 (&
x
) < 0) {

666 
îr
;

668 
	`as£π
 (
n
 < (
mac
));

672 i‡((
n
 !
c
->
mac_Àn
Ë|| (
	`¸y±o_memcmp
 (
mac
, c->mac, c->mac_len) != 0)) {

673  (
	`m_msg_£t_îr
 (
m
, 
EMUNGE_CRED_INVALID
, 
NULL
));

678 i‡(
m
->
îr‹_num
 !
EMUNGE_SUCCESS
) {

683 
îr_˛ónup
:

684 
	`mac_˛ónup
 (&
x
);

685 
îr
:

686  (
	`m_msg_£t_îr
 (
m
, 
EMUNGE_SNAFU
,

687 
	`°rdup
 ("FailedÅo MAC credential")));

688 
	}
}

692 
	$dec_decom¥ess
 (
munge_¸ed_t
 
c
)

696 
m_msg_t
 
m
 = 
c
->
msg
;

697 *
buf
;

698 
buf_Àn
;

699 
n
;

703 i‡(
m
->
zù
 =
MUNGE_ZIP_NONE
) {

708 
	`as£π
 (
	`zù_is_vÆid_ty≥
 (
m
->
zù
));

712 
buf
 = 
NULL
;

713 
buf_Àn
 = 
	`zù_decom¥ess_Àngth
 (
m
->
zù
, 
c
->
ö√r
, c->
ö√r_Àn
);

714 i‡(
buf_Àn
 <= 0) {

715 
îr
;

717 i‡(!(
buf
 = 
	`mÆloc
 (
buf_Àn
))) {

718 
	`m_msg_£t_îr
 (
m
, 
EMUNGE_NO_MEMORY
, 
NULL
);

719 
îr
;

723 
n
 = 
buf_Àn
;

724 i‡(
	`zù_decom¥ess_block
 (
m
->
zù
, 
buf
, &
n
, 
c
->
ö√r
, c->
ö√r_Àn
) < 0) {

725  (
	`m_msg_£t_îr
 (
m
, 
EMUNGE_CRED_INVALID
, 
NULL
));

727 
	`as£π
 (
n
 =
buf_Àn
);

731 i‡(
c
->
ö√r_mem
) {

732 
	`as£π
 (
c
->
ö√r_mem_Àn
 > 0);

733 
	`mem£t
 (
c
->
ö√r_mem
, 0, c->
ö√r_mem_Àn
);

734 
	`‰ì
 (
c
->
ö√r_mem
);

736 
c
->
ö√r_mem
 = 
buf
;

737 
c
->
ö√r_mem_Àn
 = 
buf_Àn
;

738 
c
->
ö√r
 = 
buf
;

739 
c
->
ö√r_Àn
 = 
n
;

742 
îr
:

743  (
	`m_msg_£t_îr
 (
m
, 
EMUNGE_SNAFU
,

744 
	`°rdup
 ("FailedÅo decompress credential")));

745 
	}
}

749 
	$dec_u≈ack_ö√r
 (
munge_¸ed_t
 
c
)

764 
m_msg_t
 
m
 = 
c
->
msg
;

765 *
p
;

766 
Àn
;

767 
n
;

768 
uöt32_t
 
u
;

770 
	`as£π
 (
c
->
ö√r
 !
NULL
);

774 
p
 = 
c
->
ö√r
;

775 
Àn
 = 
c
->
ö√r_Àn
;

780 
c
->
ß…_Àn
 = 
MUNGE_CRED_SALT_LEN
;

781 
	`as£π
 (
c
->
ß…_Àn
 < (c->
ß…
));

782 i‡(
c
->
ß…_Àn
 > 
Àn
) {

783  (
	`m_msg_£t_îr
 (
m
, 
EMUNGE_BAD_CRED
,

784 
	`°rdup
 ("Truncated salt")));

786 
	`mem˝y
 (
c
->
ß…
, 
p
, c->
ß…_Àn
);

787 i‡(
m
->
cùhî
 !
MUNGE_CIPHER_NONE
) {

788 
	`øndom_add
 (
c
->
ß…
, c->
ß…_Àn
);

790 
p
 +
c
->
ß…_Àn
;

791 
Àn
 -
c
->
ß…_Àn
;

795 
n
 =  (
m
->
addr_Àn
);

796 
	`as£π
 (
n
 == 1);

797 i‡(
n
 > 
Àn
) {

798  (
	`m_msg_£t_îr
 (
m
, 
EMUNGE_BAD_CRED
,

799 
	`°rdup
 ("Truncated origin IPáddrÜength")));

801 
m
->
addr_Àn
 = *
p
;

802 
p
 +
n
;

803 
Àn
 -
n
;

807 i‡(
m
->
addr_Àn
 ! (m->
addr
)) {

808  (
	`m_msg_£t_îr
 (
m
, 
EMUNGE_BAD_CRED
,

809 
	`°rdup
 ("Invalid origin IPáddrÜength")));

811 i‡(
m
->
addr_Àn
 > 
Àn
) {

812  (
	`m_msg_£t_îr
 (
m
, 
EMUNGE_BAD_CRED
,

813 
	`°rdup
 ("Truncated origin IPáddr")));

815 
	`mem˝y
 (&
m
->
addr
, 
p
, m->
addr_Àn
);

816 
p
 +
m
->
addr_Àn
;

817 
Àn
 -
m
->
addr_Àn
;

821 
n
 =  (
m
->
time0
);

822 
	`as£π
 (
n
 == 4);

823 i‡(
n
 > 
Àn
) {

824  (
	`m_msg_£t_îr
 (
m
, 
EMUNGE_BAD_CRED
,

825 
	`°rdup
 ("TruncatedÉncodeÅime")));

827 
	`mem˝y
 (&
u
, 
p
, 
n
);

828 
m
->
time0
 = 
	`¡ohl
 (
u
);

829 
p
 +
n
;

830 
Àn
 -
n
;

834 
n
 =  (
m
->
âl
);

835 
	`as£π
 (
n
 == 4);

836 i‡(
n
 > 
Àn
) {

837  (
	`m_msg_£t_îr
 (
m
, 
EMUNGE_BAD_CRED
,

838 
	`°rdup
 ("TruncatedÅime-to-live")));

840 
	`mem˝y
 (&
u
, 
p
, 
n
);

841 
m
->
âl
 = 
	`¡ohl
 (
u
);

842 
p
 +
n
;

843 
Àn
 -
n
;

847 
n
 =  (
m
->
¸ed_uid
);

848 
	`as£π
 (
n
 == 4);

849 i‡(
n
 > 
Àn
) {

850  (
	`m_msg_£t_îr
 (
m
, 
EMUNGE_BAD_CRED
,

851 
	`°rdup
 ("Truncated UID")));

853 
	`mem˝y
 (&
u
, 
p
, 
n
);

854 
m
->
¸ed_uid
 = 
	`¡ohl
 (
u
);

855 
p
 +
n
;

856 
Àn
 -
n
;

860 
n
 =  (
m
->
¸ed_gid
);

861 
	`as£π
 (
n
 == 4);

862 i‡(
n
 > 
Àn
) {

863  (
	`m_msg_£t_îr
 (
m
, 
EMUNGE_BAD_CRED
,

864 
	`°rdup
 ("Truncated GID")));

866 
	`mem˝y
 (&
u
, 
p
, 
n
);

867 
m
->
¸ed_gid
 = 
	`¡ohl
 (
u
);

868 
p
 +
n
;

869 
Àn
 -
n
;

873 
n
 =  (
m
->
auth_uid
);

874 
	`as£π
 (
n
 == 4);

875 i‡(
n
 > 
Àn
) {

876  (
	`m_msg_£t_îr
 (
m
, 
EMUNGE_BAD_CRED
,

877 
	`°rdup
 ("Truncated UIDÑestriction")));

879 
	`mem˝y
 (&
u
, 
p
, 
n
);

880 
m
->
auth_uid
 = 
	`¡ohl
 (
u
);

881 
p
 +
n
;

882 
Àn
 -
n
;

886 
n
 =  (
m
->
auth_gid
);

887 
	`as£π
 (
n
 == 4);

888 i‡(
n
 > 
Àn
) {

889  (
	`m_msg_£t_îr
 (
m
, 
EMUNGE_BAD_CRED
,

890 
	`°rdup
 ("Truncated GIDÑestriction")));

892 
	`mem˝y
 (&
u
, 
p
, 
n
);

893 
m
->
auth_gid
 = 
	`¡ohl
 (
u
);

894 
p
 +
n
;

895 
Àn
 -
n
;

899 
n
 =  (
m
->
d©a_Àn
);

900 
	`as£π
 (
n
 == 4);

901 i‡(
n
 > 
Àn
) {

902  (
	`m_msg_£t_îr
 (
m
, 
EMUNGE_BAD_CRED
,

903 
	`°rdup
 ("Truncated dataÜength")));

905 
	`mem˝y
 (&
u
, 
p
, 
n
);

906 
m
->
d©a_Àn
 = 
	`¡ohl
 (
u
);

907 
p
 +
n
;

908 
Àn
 -
n
;

914 i‡(
m
->
d©a_Àn
 > 0) {

915 i‡(
m
->
d©a_Àn
 > 
Àn
) {

916  (
	`m_msg_£t_îr
 (
m
, 
EMUNGE_BAD_CRED
,

917 
	`°rdup
 ("Truncated data")));

919 
m
->
d©a
 = 
p
;

920 
p
 +
m
->
d©a_Àn
;

921 
Àn
 -
m
->
d©a_Àn
;

922 
m
->
d©a_is_c›y
 = 1;

925 
m
->
d©a
 = 
NULL
;

927 
	`as£π
 (
Àn
 == 0);

929 
	}
}

933 
	$dec_vÆid©e_auth
 (
munge_¸ed_t
 
c
)

938 
m_msg_t
 
m
 = 
c
->
msg
;

940 i‡–(
m
->
auth_uid
 !
MUNGE_UID_ANY
)

941 && (
m
->
auth_uid
 !m->
˛õ¡_uid
)

942 && (! (
c⁄f
->
gŸ_roŸ_auth
 && (
m
->
˛õ¡_uid
 == 0)))) {

943 
u«uth‹ized
;

945 i‡(
m
->
auth_gid
 =
MUNGE_GID_ANY
) {

948 i‡(
m
->
auth_gid
 =m->
˛õ¡_gid
) {

951 i‡(
	`gids_is_membî
 (
c⁄f
->
gids
, 
m
->
˛õ¡_uid
, m->
auth_gid
)) {

955 
u«uth‹ized
:

956  (
	`m_msg_£t_îr
 (
m
, 
EMUNGE_CRED_UNAUTHORIZED
,

957 
	`°rdupf
 ("Unauthorized credential for client UID=%d GID=%d",

958 
m
->
˛õ¡_uid
, m->
˛õ¡_gid
)));

959 
	}
}

963 
	$dec_vÆid©e_time
 (
munge_¸ed_t
 
c
)

968 
m_msg_t
 
m
 = 
c
->
msg
;

969 
skew
;

970 
time_t
 
tmö
;

971 
time_t
 
tmax
;

975 i‡(
m
->
âl
 > 
c⁄f
->
max_âl
) {

976 
m
->
âl
 = 
c⁄f
->
max_âl
;

982 
skew
 = (
c⁄f
->
gŸ_˛ock_skew
Ë? 
m
->
âl
 : 1;

983 
tmö
 = 
m
->
time0
 - 
skew
;

984 
tmax
 = 
m
->
time0
 + m->
âl
;

988 i‡(
m
->
time1
 < 
tmö
) {

989  (
	`m_msg_£t_îr
 (
m
, 
EMUNGE_CRED_REWOUND
, 
NULL
));

991 i‡(
m
->
time1
 > 
tmax
) {

992  (
	`m_msg_£t_îr
 (
m
, 
EMUNGE_CRED_EXPIRED
, 
NULL
));

995 
	}
}

999 
	$dec_vÆid©e_ª∂ay
 (
munge_¸ed_t
 
c
)

1003 
m_msg_t
 
m
 = 
c
->
msg
;

1004 
rc
;

1006 
rc
 = 
	`ª∂ay_ö£π
 (
c
);

1008 i‡(
rc
 == 0) {

1011 i‡(
rc
 > 0) {

1012 i‡((
c⁄f
->
gŸ_sockë_ªåy
)

1013 && (
m
->
ªåy
 > 0)

1014 && (
m
->
ªåy
 <
MUNGE_SOCKET_RETRY_ATTEMPTS
)) {

1015 
	`log_msg
 (
LOG_NOTICE
,

1017 
m
->
˛õ¡_uid
, m->
˛õ¡_gid
);

1021  (
	`m_msg_£t_îr
 (
m
, 
EMUNGE_CRED_REPLAYED
, 
NULL
));

1024 i‡(
î∫o
 =
ENOMEM
) {

1025  (
	`m_msg_£t_îr
 (
m
, 
EMUNGE_NO_MEMORY
, 
NULL
));

1032  (
	`m_msg_£t_îr
 (
m
, 
EMUNGE_SNAFU
, 
NULL
));

1033 
	}
}

	@src/munged/dec.h

29 #i‚de‡
MUNGE_DEC_H


30 
	#MUNGE_DEC_H


	)

33 
	~"m_msg.h
"

36 
dec_¥o˚ss_msg
 (
m_msg_t
 
m
);

	@src/munged/enc.c

29 #i‡
HAVE_CONFIG_H


30 
	~"c⁄fig.h
"

33 
	~<as£π.h
>

34 
	~<sys/ty≥s.h
>

35 
	~<√töë/ö.h
>

36 
	~<°dlib.h
>

37 
	~<°rög.h
>

38 
	~<time.h
>

39 
	~"auth_ªcv.h
"

40 
	~"ba£64.h
"

41 
	~"cùhî.h
"

42 
	~"c⁄f.h
"

43 
	~"¸ed.h
"

44 
	~"íc.h
"

45 
	~"log.h
"

46 
	~"m_msg.h
"

47 
	~"mac.h
"

48 
	~"munge_defs.h
"

49 
	~"øndom.h
"

50 
	~"°r.h
"

51 
	~"zù.h
"

58 
íc_vÆid©e_msg
 (
m_msg_t
 
m
);

59 
íc_öô
 (
munge_¸ed_t
 
c
);

60 
íc_authítiˇã
 (
munge_¸ed_t
 
c
);

61 
íc_check_ªåy
 (
munge_¸ed_t
 
c
);

62 
íc_time°amp
 (
munge_¸ed_t
 
c
);

63 
íc_∑ck_ouãr
 (
munge_¸ed_t
 
c
);

64 
íc_∑ck_ö√r
 (
munge_¸ed_t
 
c
);

65 
íc_com¥ess
 (
munge_¸ed_t
 
c
);

66 
íc_mac
 (
munge_¸ed_t
 
c
);

67 
íc_í¸y±
 (
munge_¸ed_t
 
c
);

68 
íc_¨m‹
 (
munge_¸ed_t
 
c
);

69 
íc_föi
 (
munge_¸ed_t
 
c
);

77 
	$íc_¥o˚ss_msg
 (
m_msg_t
 
m
)

79 
munge_¸ed_t
 
c
 = 
NULL
;

80 
rc
 = -1;

82 i‡(
	`íc_vÆid©e_msg
 (
m
) < 0)

84 i‡(!(
c
 = 
	`¸ed_¸óã
 (
m
)))

86 i‡(
	`íc_öô
 (
c
) < 0)

88 i‡(
	`íc_authítiˇã
 (
c
) < 0)

90 i‡(
	`íc_check_ªåy
 (
c
) < 0)

92 i‡(
	`íc_time°amp
 (
c
) < 0)

94 i‡(
	`íc_∑ck_ouãr
 (
c
) < 0)

96 i‡(
	`íc_∑ck_ö√r
 (
c
) < 0)

98 i‡(
	`íc_com¥ess
 (
c
) < 0)

100 i‡(
	`íc_mac
 (
c
) < 0)

102 i‡(
	`íc_í¸y±
 (
c
) < 0)

104 i‡(
	`íc_¨m‹
 (
c
) < 0)

106 i‡(
	`íc_föi
 (
c
) < 0)

109 
rc
 = 0;

114 i‡(
rc
 != 0) {

115 
	`m_msg_ª£t
 (
m
);

117 i‡(
	`m_msg_£nd
 (
m
, 
MUNGE_MSG_ENC_RSP
, 0Ë!
EMUNGE_SUCCESS
) {

118 
rc
 = -1;

120 
	`¸ed_de°roy
 (
c
);

121  (
rc
);

122 
	}
}

130 
	$íc_vÆid©e_msg
 (
m_msg_t
 
m
)

134 
	`as£π
 (
m
 !
NULL
);

135 
	`as£π
 (
m
->
ty≥
 =
MUNGE_MSG_ENC_REQ
);

139 i‡(
m
->
cùhî
 =
MUNGE_CIPHER_DEFAULT
) {

140 
m
->
cùhî
 = 
c⁄f
->
def_cùhî
;

142 i‡(
m
->
cùhî
 =
MUNGE_CIPHER_NONE
) {

145 i‡(
	`cùhî_m≠_íum
 (
m
->
cùhî
, 
NULL
) < 0) {

146  (
	`m_msg_£t_îr
 (
m
, 
EMUNGE_BAD_CIPHER
,

147 
	`°rdupf
 ("InvÆid cùhîÅy≥ %d", 
m
->
cùhî
)));

152 i‡(
m
->
mac
 =
MUNGE_MAC_DEFAULT
) {

153 
m
->
mac
 = 
c⁄f
->
def_mac
;

155 i‡(
	`mac_m≠_íum
 (
m
->
mac
, 
NULL
) < 0) {

156  (
	`m_msg_£t_îr
 (
m
, 
EMUNGE_BAD_MAC
,

157 
	`°rdupf
 ("InvÆid MACÅy≥ %d", 
m
->
mac
)));

159 
	`as£π
 (
m
->
mac
 !
MUNGE_MAC_NONE
);

165 i‡(
	`mac_size
 (
m
->
mac
Ë< 
	`cùhî_key_size
 (m->
cùhî
)) {

166  (
	`m_msg_£t_îr
 (
m
, 
EMUNGE_BAD_MAC
,

167 
	`°rdupf
 ("Invalid MACÅype %d with cipherÅype %d",

168 
m
->
mac
, m->
cùhî
)));

173 i‡(
m
->
zù
 =
MUNGE_ZIP_DEFAULT
) {

174 
m
->
zù
 = 
c⁄f
->
def_zù
;

176 i‡(
m
->
zù
 =
MUNGE_ZIP_NONE
) {

179 i‡(!
	`zù_is_vÆid_ty≥
 (
m
->
zù
)) {

180  (
	`m_msg_£t_îr
 (
m
, 
EMUNGE_BAD_ZIP
,

181 
	`°rdupf
 ("InvÆid com¥essi⁄Åy≥ %d", 
m
->
zù
)));

183 i‡(
m
->
d©a_Àn
 == 0) {

184 
m
->
zù
 = 
MUNGE_ZIP_NONE
;

196 i‡(
m
->
âl
 == 0) {

197 
m
->
âl
 = 
c⁄f
->
def_âl
;

199 i‡(
m
->
âl
 > 
c⁄f
->
max_âl
) {

200 
m
->
âl
 = 
c⁄f
->
max_âl
;

203 
	}
}

207 
	$íc_öô
 (
munge_¸ed_t
 
c
)

211 
m_msg_t
 
m
 = 
c
->
msg
;

215 
c
->
ß…_Àn
 = 
MUNGE_CRED_SALT_LEN
;

216 
	`øndom_p£udo_byãs
 (
c
->
ß…
, c->
ß…_Àn
);

220 i‡(
m
->
cùhî
 =
MUNGE_CIPHER_NONE
) {

221 
c
->
iv_Àn
 = 0;

224 
c
->
iv_Àn
 = 
	`cùhî_iv_size
 (
m
->
cùhî
);

225 i‡(
c
->
iv_Àn
 < 0) {

226  (
	`m_msg_£t_îr
 (
m
, 
EMUNGE_SNAFU
,

227 
	`°rdupf
 ("FailedÅo determine IVÜength for cipherÅype %d",

228 
m
->
cùhî
)));

230 i‡(
c
->
iv_Àn
 > 0) {

231 
	`as£π
 (
c
->
iv_Àn
 < (c->
iv
));

232 
	`øndom_p£udo_byãs
 (
c
->
iv
, c->
iv_Àn
);

236 
	}
}

240 
	$íc_authítiˇã
 (
munge_¸ed_t
 
c
)

244 
m_msg_t
 
m
 = 
c
->
msg
;

245 
uid_t
 *
p_uid
;

246 
gid_t
 *
p_gid
;

248 
p_uid
 = (
uid_t
 *Ë&(
m
->
˛õ¡_uid
);

249 
p_gid
 = (
gid_t
 *Ë&(
m
->
˛õ¡_gid
);

253 i‡(
	`auth_ªcv
 (
m
, 
p_uid
, 
p_gid
Ë!
EMUNGE_SUCCESS
) {

254  (
	`m_msg_£t_îr
 (
m
, 
EMUNGE_SNAFU
,

255 
	`°rdup
 ("FailedÅo determine client identity")));

258 
	}
}

262 
	$íc_check_ªåy
 (
munge_¸ed_t
 
c
)

266 
m_msg_t
 
m
 = 
c
->
msg
;

268 i‡(
m
->
ªåy
 > 0) {

269 
	`log_msg
 (
LOG_INFO
,

271 
m
->
ªåy
, m->
˛õ¡_uid
, m->
˛õ¡_gid
);

273 i‡(
m
->
ªåy
 > 
MUNGE_SOCKET_RETRY_ATTEMPTS
) {

274  (
	`m_msg_£t_îr
 (
m
, 
EMUNGE_SOCKET
,

275 
	`°rdupf
 ("Exceeded maximumÇumber ofÉncodeáttempts")));

278 
	}
}

282 
	$íc_time°amp
 (
munge_¸ed_t
 
c
)

286 
m_msg_t
 
m
 = 
c
->
msg
;

287 
time_t
 
now
;

291 i‡(
	`time
 (&
now
Ë=((
time_t
) -1)) {

292  (
	`m_msg_£t_îr
 (
m
, 
EMUNGE_SNAFU
,

293 
	`°rdup
 ("FailedÅo query currentÅime")));

295 
m
->
time0
 = 
now
;

296 
m
->
time1
 = 0;

298 
	}
}

302 
	$íc_∑ck_ouãr
 (
munge_¸ed_t
 
c
)

311 
m_msg_t
 
m
 = 
c
->
msg
;

312 *
p
;

314 
	`as£π
 (
c
->
ouãr_mem
 =
NULL
);

316 
c
->
ouãr_mem_Àn
 + (c->
vîsi⁄
);

317 
c
->
ouãr_mem_Àn
 + (
m
->
cùhî
);

318 
c
->
ouãr_mem_Àn
 + (
m
->
mac
);

319 
c
->
ouãr_mem_Àn
 + (
m
->
zù
);

320 
c
->
ouãr_mem_Àn
 + (
m
->
ªÆm_Àn
);

321 
c
->
ouãr_mem_Àn
 +
m
->
ªÆm_Àn
;

322 
c
->
ouãr_mem_Àn
 +c->
iv_Àn
;

323 i‡(!(
c
->
ouãr_mem
 = 
	`mÆloc
 (c->
ouãr_mem_Àn
))) {

324  (
	`m_msg_£t_îr
 (
m
, 
EMUNGE_NO_MEMORY
, 
NULL
));

326 
p
 = 
c
->
ouãr
 = c->
ouãr_mem
;

327 
c
->
ouãr_Àn
 = c->
ouãr_mem_Àn
;

329 
	`as£π
 ( (
c
->
vîsi⁄
) == 1);

330 *
p
 = 
c
->
vîsi⁄
;

331 
p
 + (
c
->
vîsi⁄
);

333 
	`as£π
 ( (
m
->
cùhî
) == 1);

334 *
p
 = 
m
->
cùhî
;

335 
p
 + (
m
->
cùhî
);

337 
	`as£π
 ( (
m
->
mac
) == 1);

338 *
p
 = 
m
->
mac
;

339 
p
 + (
m
->
mac
);

341 
	`as£π
 ( (
m
->
zù
) == 1);

342 
c
->
ouãr_zù_ªf
 = 
p
;

343 *
p
 = 
m
->
zù
;

344 
p
 + (
m
->
zù
);

346 
	`as£π
 ( (
m
->
ªÆm_Àn
) == 1);

347 *
p
 = 
m
->
ªÆm_Àn
;

348 
p
 + (
m
->
ªÆm_Àn
);

350 i‡(
m
->
ªÆm_Àn
 > 0) {

351 
	`mem˝y
 (
p
, 
m
->
ªÆm_°r
, m->
ªÆm_Àn
);

352 
p
 +
m
->
ªÆm_Àn
;

354 i‡(
c
->
iv_Àn
 > 0) {

355 
	`mem˝y
 (
p
, 
c
->
iv
, c->
iv_Àn
);

356 
p
 +
c
->
iv_Àn
;

358 
	`as£π
 (
p
 =(
c
->
ouãr
 + c->
ouãr_Àn
));

360 
	}
}

364 
	$íc_∑ck_ö√r
 (
munge_¸ed_t
 
c
)

372 
m_msg_t
 
m
 = 
c
->
msg
;

373 *
p
;

374 
uöt32_t
 
u32
;

376 
	`as£π
 (
c
->
ö√r_mem
 =
NULL
);

378 
c
->
ö√r_mem_Àn
 +c->
ß…_Àn
;

379 
c
->
ö√r_mem_Àn
 + (
m
->
addr_Àn
);

380 
c
->
ö√r_mem_Àn
 + (
m
->
addr
);

381 
c
->
ö√r_mem_Àn
 + (
m
->
time0
);

382 
c
->
ö√r_mem_Àn
 + (
m
->
âl
);

383 
c
->
ö√r_mem_Àn
 + (
m
->
˛õ¡_uid
);

384 
c
->
ö√r_mem_Àn
 + (
m
->
˛õ¡_gid
);

385 
c
->
ö√r_mem_Àn
 + (
m
->
auth_uid
);

386 
c
->
ö√r_mem_Àn
 + (
m
->
auth_gid
);

387 
c
->
ö√r_mem_Àn
 + (
m
->
d©a_Àn
);

388 
c
->
ö√r_mem_Àn
 +
m
->
d©a_Àn
;

389 i‡(!(
c
->
ö√r_mem
 = 
	`mÆloc
 (c->
ö√r_mem_Àn
))) {

390  (
	`m_msg_£t_îr
 (
m
, 
EMUNGE_NO_MEMORY
, 
NULL
));

392 
p
 = 
c
->
ö√r
 = c->
ö√r_mem
;

393 
c
->
ö√r_Àn
 = c->
ö√r_mem_Àn
;

395 
	`as£π
 (
c
->
ß…_Àn
 > 0);

396 
	`mem˝y
 (
p
, 
c
->
ß…
, c->
ß…_Àn
);

397 
p
 +
c
->
ß…_Àn
;

399 
	`as£π
 ( (
m
->
addr_Àn
) == 1);

400 
	`as£π
 ( (
c⁄f
->
addr
Ë= (
m
->addr));

401 
	`as£π
 ( (
c⁄f
->
addr
) < 256);

402 *
p
 = 
m
->
addr_Àn
 =  (m->
addr
);

403 
p
 + (
m
->
addr_Àn
);

404 
	`mem˝y
 (
p
, &
c⁄f
->
addr
,  (
m
->addr));

405 
p
 + (
m
->
addr
);

407 
	`as£π
 ( (
m
->
time0
) == 4);

408 
u32
 = 
	`ht⁄l
 (
m
->
time0
);

409 
	`mem˝y
 (
p
, &
u32
,  (
m
->
time0
));

410 
p
 + (
m
->
time0
);

412 
	`as£π
 ( (
m
->
âl
) == 4);

413 
u32
 = 
	`ht⁄l
 (
m
->
âl
);

414 
	`mem˝y
 (
p
, &
u32
,  (
m
->
âl
));

415 
p
 + (
m
->
âl
);

417 
	`as£π
 ( (
m
->
˛õ¡_uid
) == 4);

418 
u32
 = 
	`ht⁄l
 (
m
->
˛õ¡_uid
);

419 
	`mem˝y
 (
p
, &
u32
,  (
m
->
˛õ¡_uid
));

420 
p
 + (
m
->
˛õ¡_uid
);

422 
	`as£π
 ( (
m
->
˛õ¡_gid
) == 4);

423 
u32
 = 
	`ht⁄l
 (
m
->
˛õ¡_gid
);

424 
	`mem˝y
 (
p
, &
u32
,  (
m
->
˛õ¡_gid
));

425 
p
 + (
m
->
˛õ¡_gid
);

427 
	`as£π
 ( (
m
->
auth_uid
) == 4);

428 
u32
 = 
	`ht⁄l
 (
m
->
auth_uid
);

429 
	`mem˝y
 (
p
, &
u32
,  (
m
->
auth_uid
));

430 
p
 + (
m
->
auth_uid
);

432 
	`as£π
 ( (
m
->
auth_gid
) == 4);

433 
u32
 = 
	`ht⁄l
 (
m
->
auth_gid
);

434 
	`mem˝y
 (
p
, &
u32
,  (
m
->
auth_gid
));

435 
p
 + (
m
->
auth_gid
);

437 
	`as£π
 ( (
m
->
d©a_Àn
) == 4);

438 
u32
 = 
	`ht⁄l
 (
m
->
d©a_Àn
);

439 
	`mem˝y
 (
p
, &
u32
,  (
m
->
d©a_Àn
));

440 
p
 + (
m
->
d©a_Àn
);

442 i‡(
m
->
d©a_Àn
 > 0) {

443 
	`mem˝y
 (
p
, 
m
->
d©a
, m->
d©a_Àn
);

444 
p
 +
m
->
d©a_Àn
;

446 
	`as£π
 (
p
 =(
c
->
ö√r
 + c->
ö√r_Àn
));

448 
	}
}

452 
	$íc_com¥ess
 (
munge_¸ed_t
 
c
)

461 
m_msg_t
 
m
 = 
c
->
msg
;

462 *
buf
;

463 
buf_Àn
;

464 
n
;

468 i‡(
m
->
zù
 =
MUNGE_ZIP_NONE
) {

473 
buf
 = 
NULL
;

474 
buf_Àn
 = 
	`zù_com¥ess_Àngth
 (
m
->
zù
, 
c
->
ö√r
, c->
ö√r_Àn
);

475 i‡(
buf_Àn
 < 0) {

476 
îr
;

478 i‡(!(
buf
 = 
	`mÆloc
 (
buf_Àn
))) {

479 
	`m_msg_£t_îr
 (
m
, 
EMUNGE_NO_MEMORY
, 
NULL
);

480 
îr
;

484 
n
 = 
buf_Àn
;

485 i‡(
	`zù_com¥ess_block
 (
m
->
zù
, 
buf
, &
n
, 
c
->
ö√r
, c->
ö√r_Àn
) < 0) {

486 
îr
;

491 i‡(
n
 >
c
->
ö√r_Àn
) {

492 
m
->
zù
 = 
MUNGE_ZIP_NONE
;

493 *
c
->
ouãr_zù_ªf
 = 
m
->
zù
;

494 
	`mem£t
 (
buf
, 0, 
buf_Àn
);

495 
	`‰ì
 (
buf
);

498 
	`as£π
 (
c
->
ö√r_mem_Àn
 > 0);

499 
	`mem£t
 (
c
->
ö√r_mem
, 0, c->
ö√r_mem_Àn
);

500 
	`‰ì
 (
c
->
ö√r_mem
);

502 
c
->
ö√r_mem
 = 
buf
;

503 
c
->
ö√r_mem_Àn
 = 
buf_Àn
;

504 
c
->
ö√r
 = 
buf
;

505 
c
->
ö√r_Àn
 = 
n
;

509 
îr
:

510 i‡((
buf_Àn
 > 0Ë&& (
buf
 !
NULL
)) {

511 
	`mem£t
 (
buf
, 0, 
buf_Àn
);

512 
	`‰ì
 (
buf
);

514  (
	`m_msg_£t_îr
 (
m
, 
EMUNGE_SNAFU
,

515 
	`°rdup
 ("FailedÅo compress credential")));

516 
	}
}

520 
	$íc_mac
 (
munge_¸ed_t
 
c
)

525 
m_msg_t
 
m
 = 
c
->
msg
;

526 
mac_˘x
 
x
;

527 
n
;

531 
c
->
mac_Àn
 = 
	`mac_size
 (
m
->
mac
);

532 i‡(
c
->
mac_Àn
 <= 0) {

533  (
	`m_msg_£t_îr
 (
m
, 
EMUNGE_SNAFU
,

534 
	`°rdupf
 ("FailedÅo determine digestÜength for MACÅype %d",

535 
m
->
mac
)));

537 
	`as£π
 (
c
->
mac_Àn
 < (c->
mac
));

538 
	`mem£t
 (
c
->
mac
, 0, c->
mac_Àn
);

542 i‡(
	`mac_öô
 (&
x
, 
m
->
mac
, 
c⁄f
->
mac_key
, c⁄f->
mac_key_Àn
) < 0) {

543 
îr
;

545 i‡(
	`mac_upd©e
 (&
x
, 
c
->
ouãr
, c->
ouãr_Àn
) < 0) {

546 
îr_˛ónup
;

548 i‡(
	`mac_upd©e
 (&
x
, 
c
->
ö√r
, c->
ö√r_Àn
) < 0) {

549 
îr_˛ónup
;

551 
n
 = 
c
->
mac_Àn
;

552 i‡(
	`mac_föÆ
 (&
x
, 
c
->
mac
, &
n
) < 0) {

553 
îr_˛ónup
;

555 i‡(
	`mac_˛ónup
 (&
x
) < 0) {

556 
îr
;

558 
	`as£π
 (
n
 =
c
->
mac_Àn
);

561 
îr_˛ónup
:

562 
	`mac_˛ónup
 (&
x
);

563 
îr
:

564  (
	`m_msg_£t_îr
 (
m
, 
EMUNGE_SNAFU
,

565 
	`°rdup
 ("FailedÅo MAC credential")));

566 
	}
}

570 
	$íc_í¸y±
 (
munge_¸ed_t
 
c
)

574 
m_msg_t
 
m
 = 
c
->
msg
;

575 
buf_Àn
;

576 *
buf
;

577 *
buf_±r
;

578 
cùhî_˘x
 
x
;

579 
n_wrôãn
;

580 
n
;

584 i‡(
m
->
cùhî
 =
MUNGE_CIPHER_NONE
) {

590 
c
->
dek_Àn
 = 
	`mac_size
 (
m
->
mac
);

591 i‡(
c
->
dek_Àn
 <= 0) {

592  (
	`m_msg_£t_îr
 (
m
, 
EMUNGE_SNAFU
,

593 
	`°rdupf
 ("FailedÅo determine DEK keyÜength for MACÅype %d",

594 
m
->
mac
)));

596 
	`as£π
 (
c
->
dek_Àn
 < (c->
dek
));

598 
n
 = 
c
->
dek_Àn
;

599 i‡(
	`mac_block
 (
m
->
mac
, 
c⁄f
->
dek_key
, c⁄f->
dek_key_Àn
,

600 
c
->
dek
, &
n
, c->
mac
, c->
mac_Àn
) < 0) {

601  (
	`m_msg_£t_îr
 (
m
, 
EMUNGE_SNAFU
,

602 
	`°rdup
 ("FailedÅo compute DEK")));

604 
	`as£π
 (
n
 <
c
->
dek_Àn
);

605 
	`as£π
 (
n
 >
	`cùhî_key_size
 (
m
->
cùhî
));

610 
n
 = 
	`cùhî_block_size
 (
m
->
cùhî
);

611 i‡(
n
 <= 0) {

612  (
	`m_msg_£t_îr
 (
m
, 
EMUNGE_SNAFU
,

613 
	`°rdupf
 ("FailedÅo determine block size for cipherÅype %d",

614 
m
->
cùhî
)));

616 
buf_Àn
 = 
c
->
ö√r_Àn
 + 
n
;

617 i‡(!(
buf
 = 
	`mÆloc
 (
buf_Àn
))) {

618  (
	`m_msg_£t_îr
 (
m
, 
EMUNGE_NO_MEMORY
, 
NULL
));

622 i‡(
	`cùhî_öô
 (&
x
, 
m
->
cùhî
, 
c
->
dek
, c->
iv
, 
CIPHER_ENCRYPT
) < 0) {

623 
îr
;

625 
buf_±r
 = 
buf
;

626 
n_wrôãn
 = 0;

627 
n
 = 
buf_Àn
;

628 i‡(
	`cùhî_upd©e
 (&
x
, 
buf_±r
, &
n
, 
c
->
ö√r
, c->
ö√r_Àn
) < 0) {

629 
îr_˛ónup
;

631 
buf_±r
 +
n
;

632 
n_wrôãn
 +
n
;

633 
n
 = 
buf_Àn
 - 
n_wrôãn
;

634 i‡(
	`cùhî_föÆ
 (&
x
, 
buf_±r
, &
n
) < 0) {

635 
îr_˛ónup
;

637 
buf_±r
 +
n
;

638 
n_wrôãn
 +
n
;

639 i‡(
	`cùhî_˛ónup
 (&
x
) < 0) {

640 
îr
;

642 
	`as£π
 (
n_wrôãn
 <
buf_Àn
);

646 
	`as£π
 (
c
->
ö√r_mem_Àn
 > 0);

647 
	`mem£t
 (
c
->
ö√r_mem
, 0, c->
ö√r_mem_Àn
);

648 
	`‰ì
 (
c
->
ö√r_mem
);

650 
c
->
ö√r_mem
 = 
buf
;

651 
c
->
ö√r_mem_Àn
 = 
buf_Àn
;

652 
c
->
ö√r
 = 
buf
;

653 
c
->
ö√r_Àn
 = 
n_wrôãn
;

656 
îr_˛ónup
:

657 
	`cùhî_˛ónup
 (&
x
);

658 
îr
:

659 
	`mem£t
 (
buf
, 0, 
buf_Àn
);

660 
	`‰ì
 (
buf
);

661  (
	`m_msg_£t_îr
 (
m
, 
EMUNGE_SNAFU
,

662 
	`°rdup
 ("FailedÅoÉncrypt credential")));

663 
	}
}

667 
	$íc_¨m‹
 (
munge_¸ed_t
 
c
)

672 
m_msg_t
 
m
 = 
c
->
msg
;

673 
¥efix_Àn
;

674 
suffix_Àn
;

675 
buf_Àn
;

676 *
buf
;

677 *
buf_±r
;

678 
ba£64_˘x
 
x
;

679 
n
, 
n2
;

681 
¥efix_Àn
 = 
	`°æí
 (
MUNGE_CRED_PREFIX
);

682 
suffix_Àn
 = 
	`°æí
 (
MUNGE_CRED_SUFFIX
);

686 
n
 = 
c
->
ouãr_Àn
 + c->
mac_Àn
 + c->
ö√r_Àn
;

687 
buf_Àn
 = 
¥efix_Àn
 + 
	`ba£64_ícode_Àngth
 (
n
Ë+ 
suffix_Àn
;

689 i‡(!(
buf
 = 
	`mÆloc
 (
buf_Àn
))) {

690  (
	`m_msg_£t_îr
 (
m
, 
EMUNGE_NO_MEMORY
, 
NULL
));

692 
buf_±r
 = 
buf
;

696 i‡(
¥efix_Àn
 > 0) {

697 
	`°r˝y
 ((*Ë
buf_±r
, 
MUNGE_CRED_PREFIX
);

698 
buf_±r
 +
¥efix_Àn
;

703 i‡(
	`ba£64_öô
 (&
x
) < 0) {

704 
îr
;

706 
n
 = 0;

707 i‡(
	`ba£64_ícode_upd©e
 (&
x
, 
buf_±r
, &
n2
, 
c
->
ouãr
, c->
ouãr_Àn
) < 0) {

708 
îr_˛ónup
;

710 
buf_±r
 +
n2
;

711 
n
 +
n2
;

712 i‡(
	`ba£64_ícode_upd©e
 (&
x
, 
buf_±r
, &
n2
, 
c
->
mac
, c->
mac_Àn
) < 0) {

713 
îr_˛ónup
;

715 
buf_±r
 +
n2
;

716 
n
 +
n2
;

717 i‡(
	`ba£64_ícode_upd©e
 (&
x
, 
buf_±r
, &
n2
, 
c
->
ö√r
, c->
ö√r_Àn
) < 0) {

718 
îr_˛ónup
;

720 
buf_±r
 +
n2
;

721 
n
 +
n2
;

722 i‡(
	`ba£64_ícode_föÆ
 (&
x
, 
buf_±r
, &
n2
) < 0) {

723 
îr_˛ónup
;

725 
buf_±r
 +
n2
;

726 
n
 +
n2
;

727 i‡(
	`ba£64_˛ónup
 (&
x
) < 0) {

728 
îr
;

730 
n
++;

734 i‡(
suffix_Àn
 > 0) {

735 
	`°r˝y
 ((*Ë
buf_±r
, 
MUNGE_CRED_SUFFIX
);

736 
buf_±r
 +
suffix_Àn
;

738 
	`as£π
 ((
buf_±r
 - 
buf
Ë< 
buf_Àn
);

742 
	`as£π
 (
c
->
ouãr_mem_Àn
 > 0);

743 
	`mem£t
 (
c
->
ouãr_mem
, 0, c->
ouãr_mem_Àn
);

744 
	`‰ì
 (
c
->
ouãr_mem
);

746 
c
->
ouãr_mem
 = 
buf
;

747 
c
->
ouãr_mem_Àn
 = 
buf_Àn
;

748 
c
->
ouãr
 = 
buf
;

749 
c
->
ouãr_Àn
 = 
buf_±r
 - 
buf
 + 1;

751 
	`as£π
 (
c
->
ö√r_mem_Àn
 > 0);

752 
	`mem£t
 (
c
->
ö√r_mem
, 0, c->
ö√r_mem_Àn
);

753 
	`‰ì
 (
c
->
ö√r_mem
);

755 
c
->
ö√r_mem
 = 
NULL
;

756 
c
->
ö√r_mem_Àn
 = 0;

759 
îr_˛ónup
:

760 
	`ba£64_˛ónup
 (&
x
);

761 
îr
:

762 
	`mem£t
 (
buf
, 0, 
buf_Àn
);

763 
	`‰ì
 (
buf
);

764  (
	`m_msg_£t_îr
 (
m
, 
EMUNGE_SNAFU
,

765 
	`°rdup
 ("FailedÅo base64-encode credential")));

766 
	}
}

770 
	$íc_föi
 (
munge_¸ed_t
 
c
)

774 
m_msg_t
 
m
 = 
c
->
msg
;

778 i‡(
m
->
d©a
) {

779 
	`as£π
 (
m
->
d©a_Àn
 > 0);

780 
	`as£π
 (
m
->
d©a_is_c›y
 == 0);

781 
	`‰ì
 (
m
->
d©a
);

787 
m
->
d©a
 = 
c
->
ouãr
;

788 
m
->
d©a_Àn
 = 
c
->
ouãr_Àn
;

789 
m
->
d©a_is_c›y
 = 1;

791 
	}
}

	@src/munged/enc.h

29 #i‚de‡
MUNGE_ENC_H


30 
	#MUNGE_ENC_H


	)

33 
	~"m_msg.h
"

36 
íc_¥o˚ss_msg
 (
m_msg_t
 
m
);

	@src/munged/gids.c

31 #i‡
HAVE_CONFIG_H


32 
	~"c⁄fig.h
"

35 
	~<sys/ty≥s.h
>

36 
	~<as£π.h
>

37 
	~<î∫o.h
>

38 
	~<±hªad.h
>

39 
	~<°ddef.h
>

40 
	~<°dlib.h
>

41 
	~<°rög.h
>

42 
	~<sys/°©.h
>

43 
	~<sys/time.h
>

44 
	~<munge.h
>

45 
	~"c⁄f.h
"

46 
	~"gids.h
"

47 
	~"hash.h
"

48 
	~"log.h
"

49 
	~"munge_defs.h
"

50 
	~"timî.h
"

51 
	~"xgëgª¡.h
"

52 
	~"xgëpw«m.h
"

76 #i‚de‡
_GIDS_DEBUG


77 
	#_GIDS_DEBUG
 0

	)

85 
	sgids
 {

86 
±hªad_muãx_t
 
	mmuãx
;

87 
hash_t
 
	mhash
;

88 
	mtimî
;

89 
	möãrvÆ
;

90 
	mdo_group_°©
;

91 
time_t
 
	mt_œ°_upd©e
;

94 
	sgids_node
 {

95 
gids_node
 *
	m√xt
;

96 
gid_t
 
	mgid
;

99 
	sgids_hód
 {

100 
gids_node
 *
	m√xt
;

101 
uid_t
 
	muid
;

104 
	sgids_uid
 {

105 *
	mu£r
;

106 
uid_t
 
	muid
;

109 
gids_node
 * 
	tgids_node_t
;

110 
gids_hód
 * 
	tgids_gid_t
;

111 
gids_uid
 * 
	tgids_uid_t
;

118 
_gids_upd©e
 (
gids_t
 
gids
);

119 
hash_t
 
_gids_hash_¸óã
 ();

120 
_gids_u£r_to_uid
 (
hash_t
 
uid_hash
,

121 *
u£r
, 
uid_t
 *
uidp
, 
xpwbuf_p
 
pwbuÂ
);

122 
_gids_hash_add
 (
hash_t
 
hash
, 
uid_t
 
uid
, 
gid_t
 
gid
);

123 
gids_gid_t
 
_gids_hód_Æloc
 (
uid_t
 
uid
);

124 
_gids_hód_dñ
 (
gids_gid_t
 
g
);

125 
gids_node_t
 
_gids_node_Æloc
 (
gid_t
 
gid
);

126 
_gids_node_cmp
 (
uid_t
 *
uid1p
, uid_à*
uid2p
);

127 
_gids_node_key
 (
uid_t
 *
uidp
);

128 
gids_uid_t
 
_gids_uid_Æloc
 (*
u£r
, 
uid_t
 
uid
);

129 
_gids_uid_cmp
 (*
u£r1
, *
u£r2
);

130 
_gids_uid_dñ
 (
gids_uid_t
 
u
);

132 #i‡
_GIDS_DEBUG


133 
_gids_dump_gid_hash
 (
hash_t
 
gid_hash
);

134 
_gids_dump_gid_node
 (
gids_gid_t
 
g
, 
uid_t
 *
uidp
, *
nuŒ
);

135 
_gids_dump_uid_hash
 (
hash_t
 
uid_hash
);

136 
_gids_dump_uid_node
 (
gids_uid_t
 
u
, *
u£r
, *
nuŒ
);

144 
gids_t


145 
	$gids_¸óã
 (
öãrvÆ
, 
do_group_°©
)

147 
gids_t
 
gids
;

149 i‡((
öãrvÆ
 < 0Ë|| (
c⁄f
->
gŸ_bíchm¨k
)) {

150 
	`log_msg
 (
LOG_INFO
, "Disabled supplementary group mapping");

151  (
NULL
);

153 i‡(!(
gids
 = 
	`mÆloc
 ( (*gids)))) {

154 
	`log_î∫o
 (
EMUNGE_NO_MEMORY
, 
LOG_ERR
,

157 i‡((
î∫o
 = 
	`±hªad_muãx_öô
 (&
gids
->
muãx
, 
NULL
)) != 0) {

158 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
, "FailedÅo init gids mutex");

160 
gids
->
hash
 = 
NULL
;

161 
gids
->
timî
 = 0;

162 
gids
->
öãrvÆ
 = interval;

163 
gids
->
do_group_°©
 = do_group_stat;

164 
gids
->
t_œ°_upd©e
 = 0;

165 
	`gids_upd©e
 (
gids
);

167 i‡(
öãrvÆ
 == 0) {

168 
	`log_msg
 (
LOG_INFO
, "Disabled updatesÅo supplementary group mapping");

171 
	`log_msg
 (
LOG_INFO
,

173 
öãrvÆ
, (interval == 1) ? "" : "s");

175 
	`log_msg
 (
LOG_INFO
, "%s supplementary group mtime check of \"%s\"",

176 (
do_group_°©
 ? "E«bÀd" : "DißbÀd"), 
GIDS_GROUP_FILE
);

178  (
gids
);

179 
	}
}

183 
	$gids_de°roy
 (
gids_t
 
gids
)

185 
hash_t
 
h
;

187 i‡(!
gids
) {

190 i‡((
î∫o
 = 
	`±hªad_muãx_lock
 (&
gids
->
muãx
)) != 0) {

191 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
, "FailedÅoÜock gids mutex");

193 i‡(
gids
->
timî
 > 0) {

194 
	`timî_ˇn˚l
 (
gids
->
timî
);

195 
gids
->
timî
 = 0;

197 
h
 = 
gids
->
hash
;

198 
gids
->
hash
 = 
NULL
;

200 i‡((
î∫o
 = 
	`±hªad_muãx_u∆ock
 (&
gids
->
muãx
)) != 0) {

201 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
, "FailedÅo unlock gids mutex");

203 
	`hash_de°roy
 (
h
);

205 i‡((
î∫o
 = 
	`±hªad_muãx_de°roy
 (&
gids
->
muãx
)) != 0) {

206 
	`log_msg
 (
LOG_ERR
, "FailedÅo destroy gids mutex: %s",

207 
	`°ªº‹
 (
î∫o
));

209 
	`‰ì
 (
gids
);

211 
	}
}

215 
	$gids_upd©e
 (
gids_t
 
gids
)

217 i‡(!
gids
) {

220 i‡((
î∫o
 = 
	`±hªad_muãx_lock
 (&
gids
->
muãx
)) != 0) {

221 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
, "FailedÅoÜock gids mutex");

225 i‡(
gids
->
timî
 > 0) {

226 
	`timî_ˇn˚l
 (
gids
->
timî
);

230 
gids
->
timî
 = 
	`timî_£t_ªœtive
 ((
ˇŒback_f
Ë
_gids_upd©e
, gids, 0);

231 i‡(
gids
->
timî
 < 0) {

232 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
, "FailedÅo set gids updateÅimer");

237 
gids
->
do_group_°©
 = !! gids->do_group_stat;

239 i‡((
î∫o
 = 
	`±hªad_muãx_u∆ock
 (&
gids
->
muãx
)) != 0) {

240 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
, "FailedÅo unlock gids mutex");

243 
	}
}

247 
	$gids_is_membî
 (
gids_t
 
gids
, 
uid_t
 
uid
, 
gid_t
 
gid
)

249 
is_membî
 = 0;

250 
gids_gid_t
 
g
;

251 
gids_node_t
 
node
;

253 i‡(!
gids
) {

256 i‡((
î∫o
 = 
	`±hªad_muãx_lock
 (&
gids
->
muãx
)) != 0) {

257 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
, "FailedÅoÜock gids mutex");

259 i‡((
gids
->
hash
Ë&& (
g
 = 
	`hash_föd
 (gids->hash, &
uid
))) {

260 
	`as£π
 (
g
->
uid
 == uid);

261 
node
 = 
g
->
√xt
;Çodê&&Çode->
gid
 <= gid;Çode =Çode->next) {

262 i‡(
node
->
gid
 == gid) {

263 
is_membî
 = 1;

268 i‡((
î∫o
 = 
	`±hªad_muãx_u∆ock
 (&
gids
->
muãx
)) != 0) {

269 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
, "FailedÅo unlock gids mutex");

271  (
is_membî
);

272 
	}
}

280 
	$_gids_upd©e
 (
gids_t
 
gids
)

284 
do_group_°©
;

285 
time_t
 
t_œ°_upd©e
;

286 
time_t
 
t_now
;

287 
do_upd©e
 = 1;

288 
hash_t
 
hash
 = 
NULL
;

290 
	`as£π
 (
gids
 !
NULL
);

292 i‡((
î∫o
 = 
	`±hªad_muãx_lock
 (&
gids
->
muãx
)) != 0) {

293 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
, "FailedÅoÜock gids mutex");

295 
do_group_°©
 = 
gids
->do_group_stat;

296 
t_œ°_upd©e
 = 
gids
->t_last_update;

298 i‡((
î∫o
 = 
	`±hªad_muãx_u∆ock
 (&
gids
->
muãx
)) != 0) {

299 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
, "FailedÅo unlock gids mutex");

301 i‡(
	`time
 (&
t_now
Ë=(
time_t
) -1) {

302 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
, "FailedÅo query currentÅime");

304 i‡(
do_group_°©
 > 0) {

306 
°©
 
°
;

310 i‡(
	`°©
 (
GIDS_GROUP_FILE
, &
°
) < 0) {

311 
do_group_°©
 = -2;

312 
	`log_msg
 (
LOG_ERR
, "FailedÅo stat \"%s\": %s",

313 
GIDS_GROUP_FILE
, 
	`°ªº‹
 (
î∫o
));

315 i‡(
°
.
°_mtime
 <
t_œ°_upd©e
) {

316 
do_upd©e
 = 0;

321 i‡(
do_upd©e
) {

322 
hash
 = 
	`_gids_hash_¸óã
 ();

324 i‡((
î∫o
 = 
	`±hªad_muãx_lock
 (&
gids
->
muãx
)) != 0) {

325 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
, "FailedÅoÜock gids mutex");

329 i‡(
hash
) {

331 
hash_t
 
hash_bak
 = 
gids
->
hash
;

332 
gids
->
hash
 = hash;

333 
hash
 = 
hash_bak
;

335 
gids
->
t_œ°_upd©e
 = 
t_now
;

342 i‡(
do_group_°©
 < -1) {

343 
gids
->
do_group_°©
 = -1;

348 
gids
->
timî
 = 0;

349 i‡(
gids
->
öãrvÆ
 > 0) {

350 
gids
->
timî
 = 
	`timî_£t_ªœtive
 (

351 (
ˇŒback_f
Ë
_gids_upd©e
, 
gids
, gids->
öãrvÆ
 * 1000);

352 i‡(
gids
->
timî
 < 0) {

353 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

357 i‡((
î∫o
 = 
	`±hªad_muãx_u∆ock
 (&
gids
->
muãx
)) != 0) {

358 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
, "FailedÅo unlock gids mutex");

362 i‡(
hash
) {

363 
	`hash_de°roy
 (
hash
);

366 
	}
}

369 
hash_t


370 
	$_gids_hash_¸óã
 ()

374 
size_t
 
grbuÊí
 = 0;

375 
size_t
 
pwbuÊí
 = 0;

376 
hash_t
 
gid_hash
 = 
NULL
;

377 
hash_t
 
uid_hash
 = 
NULL
;

378 
timevÆ
 
t_°¨t
;

379 
timevÆ
 
t_°›
;

380 
do_group_db_˛o£
 = 0;

381 
num_öôs
 = 0;

382 c⁄° 
max_öôs
 = 16;

383 
group
 
gr
;

384 
xgrbuf_p
 
grbuÂ
 = 
NULL
;

385 
xpwbuf_p
 
pwbuÂ
 = 
NULL
;

386 **
u£Ω
;

387 
uid_t
 
uid
;

388 
n_u£rs
;

389 
n_£c⁄ds
;

391 
gid_hash
 = 
	`hash_¸óã
 (
GIDS_HASH_SIZE
, (
hash_key_f
Ë
_gids_node_key
,

392 (
hash_cmp_f
Ë
_gids_node_cmp
, (
hash_dñ_f
Ë
_gids_hód_dñ
);

394 i‡(!
gid_hash
) {

395 
	`log_msg
 (
LOG_ERR
, "FailedÅoállocate gids hash");

396 
îr
;

398 
uid_hash
 = 
	`hash_¸óã
 (
UIDS_HASH_SIZE
, (
hash_key_f
Ë
hash_key_°rög
,

399 (
hash_cmp_f
Ë
_gids_uid_cmp
, (
hash_dñ_f
Ë
_gids_uid_dñ
);

401 i‡(!
uid_hash
) {

402 
	`log_msg
 (
LOG_ERR
, "FailedÅoállocate uids hash");

403 
îr
;

405 i‡(
	`gëtimeofday
 (&
t_°¨t
, 
NULL
) < 0) {

406 
	`log_msg
 (
LOG_ERR
, "FailedÅo query currentÅime");

407 
îr
;

414 i‡(!(
grbuÂ
 = 
	`xgëgª¡_buf_¸óã
 (
grbuÊí
))) {

415 
	`log_msg
 (
LOG_ERR
, "FailedÅoállocate groupÉntry buffer");

416 
îr
;

418 i‡(!(
pwbuÂ
 = 
	`xgëpw«m_buf_¸óã
 (
pwbuÊí
))) {

419 
	`log_msg
 (
LOG_ERR
, "FailedÅoállocateÖasswordÉntry buffer");

420 
îr
;

422 
do_group_db_˛o£
 = 1;

423 
ª°¨t
:

424 
	`xgëgª¡_öô
 ();

425 
num_öôs
++;

428 i‡(
	`xgëgª¡
 (&
gr
, 
grbuÂ
) < 0) {

429 i‡(
î∫o
 =
ENOENT
) {

432 i‡(
î∫o
 =
EINTR
) {

435 i‡((
î∫o
 =
ERANGE
Ë&& (
num_öôs
 < 
max_öôs
)) {

436 
	`hash_ª£t
 (
gid_hash
);

437 
ª°¨t
;

439 
	`log_msg
 (
LOG_ERR
, "FailedÅo query group info: %s",

440 
	`°ªº‹
 (
î∫o
));

441 
îr
;

446 
u£Ω
 = 
gr
.
gr_mem
; userp && *userp; userp++) {

447 
rv
 = 
	`_gids_u£r_to_uid
 (
uid_hash
, *
u£Ω
, &
uid
, 
pwbuÂ
);

448 i‡(
rv
 == 0) {

449 i‡(
	`_gids_hash_add
 (
gid_hash
, 
uid
, 
gr
.
gr_gid
) < 0) {

450 
îr
;

455 
	`xgëgª¡_föi
 ();

461 
pwbuÊí
 = 
	`xgëpw«m_buf_gë_Àn
 (
pwbuÂ
);

462 
	`xgëpw«m_buf_de°roy
 (
pwbuÂ
);

463 
grbuÊí
 = 
	`xgëgª¡_buf_gë_Àn
 (
grbuÂ
);

464 
	`xgëgª¡_buf_de°roy
 (
grbuÂ
);

466 i‡(
	`gëtimeofday
 (&
t_°›
, 
NULL
) < 0) {

467 
	`log_msg
 (
LOG_ERR
, "FailedÅo query currentÅime");

468 
îr
;

471 #i‡
_GIDS_DEBUG


472 
	`_gids_dump_uid_hash
 (
uid_hash
);

473 
	`_gids_dump_gid_hash
 (
gid_hash
);

476 
n_u£rs
 = 
	`hash_cou¡
 (
gid_hash
);

477 
n_£c⁄ds
 = (
t_°›
.
tv_£c
 - 
t_°¨t
.tv_sec)

478 + ((
t_°›
.
tv_u£c
 - 
t_°¨t
.tv_usec) / 1e6);

479 
	`log_msg
 (
LOG_INFO
,

481 
n_u£rs
, (“_u£r†=1Ë? "" : "s"), 
n_£c⁄ds
);

483 
	`hash_de°roy
 (
uid_hash
);

484  (
gid_hash
);

486 
îr
:

487 i‡(
do_group_db_˛o£
) {

488 
	`xgëgª¡_föi
 ();

490 i‡(
pwbuÂ
 !
NULL
) {

491 
	`xgëpw«m_buf_de°roy
 (
pwbuÂ
);

493 i‡(
grbuÂ
 !
NULL
) {

494 
	`xgëgª¡_buf_de°roy
 (
grbuÂ
);

496 i‡(
uid_hash
 !
NULL
) {

497 
	`hash_de°roy
 (
uid_hash
);

499 i‡(
gid_hash
 !
NULL
) {

500 
	`hash_de°roy
 (
gid_hash
);

502  (
NULL
);

503 
	}
}

507 
	$_gids_u£r_to_uid
 (
hash_t
 
uid_hash
, *
u£r
, 
uid_t
 *
uidp
, 
xpwbuf_p
 
pwbuÂ
)

512 
gids_uid_t
 
u
;

513 
uid_t
 
uid
;

514 
∑sswd
 
pw
;

516 i‡((
u
 = 
	`hash_föd
 (
uid_hash
, 
u£r
))) {

517 
uid
 = 
u
->uid;

519 i‡(
	`xgëpw«m
 (
u£r
, &
pw
, 
pwbuÂ
) == 0) {

520 
uid
 = 
pw
.
pw_uid
;

521 i‡(!(
u
 = 
	`_gids_uid_Æloc
 (
u£r
, 
uid
))) {

522 
	`log_msg
 (
LOG_WARNING
,

524 
u£r
, 
uid
);

526 i‡(!
	`hash_ö£π
 (
uid_hash
, 
u
->
u£r
, u)) {

527 
	`log_msg
 (
LOG_WARNING
,

528 "FaûedÅÿö£π uidÇodêf‹ %s/%d i¡ÿhash", 
u£r
, 
uid
);

529 
	`_gids_uid_dñ
 (
u
);

533 
	`log_msg
 (
LOG_INFO
,

534 "FaûedÅÿquîyÖassw‹d fûêíåy f‹ \"%s\"", 
u£r
);

538 i‡(
uidp
 !
NULL
) {

539 *
uidp
 = 
uid
;

542 
	}
}

546 
	$_gids_hash_add
 (
hash_t
 
hash
, 
uid_t
 
uid
, 
gid_t
 
gid
)

552 
gids_gid_t
 
g
;

553 
gids_node_t
 
node
;

554 
gids_node_t
 *
nodï
;

556 i‡(!(
g
 = 
	`hash_föd
 (
hash
, &
uid
))) {

557 i‡(!(
g
 = 
	`_gids_hód_Æloc
 (
uid
))) {

558 
	`log_msg
 (
LOG_ERR
, "FailedÅoállocate gidsÇode");

561 i‡(!
	`hash_ö£π
 (
hash
, &
g
->
uid
, g)) {

562 
	`log_msg
 (
LOG_ERR
, "FailedÅo insert gidsÇode into hash");

563 
	`_gids_hód_dñ
 (
g
);

567 
	`as£π
 (
g
->
uid
 == uid);

569 
nodï
 = &
g
->
√xt
;

570 (*
nodï
Ë&& ((*nodï)->
gid
 < gid)) {

571 
nodï
 = &(*nodï)->
√xt
;

573 i‡((*
nodï
Ë&& ((*nodï)->
gid
 == gid)) {

576 i‡(!(
node
 = 
	`_gids_node_Æloc
 (
gid
))) {

577 
	`log_msg
 (
LOG_ERR
, "FailedÅoállocate gidsÇode");

580 
node
->
√xt
 = *
nodï
;

581 *
nodï
 = 
node
;

583 
	}
}

586 
gids_gid_t


587 
	$_gids_hód_Æloc
 (
uid_t
 
uid
)

591 
gids_gid_t
 
g
;

593 i‡(!(
g
 = 
	`mÆloc
 ( (*g)))) {

594  (
NULL
);

596 
g
->
√xt
 = 
NULL
;

597 
g
->
uid
 = uid;

598  (
g
);

599 
	}
}

603 
	$_gids_hód_dñ
 (
gids_gid_t
 
g
)

607 
gids_node_t
 
node
, 
node_tmp
;

609 i‡(!
g
) {

612 
node
 = 
g
->
√xt
;

613 
	`‰ì
 (
g
);

614 
node
) {

615 
node_tmp
 = 
node
;

616 
node
 =Çode->
√xt
;

617 
	`‰ì
 (
node_tmp
);

620 
	}
}

623 
gids_node_t


624 
	$_gids_node_Æloc
 (
gid_t
 
gid
)

628 
gids_node_t
 
node
;

630 i‡(!(
node
 = 
	`mÆloc
 ( (*node)))) {

631  (
NULL
);

633 
node
->
√xt
 = 
NULL
;

634 
node
->
gid
 = gid;

635  (
node
);

636 
	}
}

640 
	$_gids_node_cmp
 (
uid_t
 *
uid1p
, uid_à*
uid2p
)

644  (!(*
uid1p
 =*
uid2p
));

645 
	}
}

649 
	$_gids_node_key
 (
uid_t
 *
uidp
)

653  (*
uidp
);

654 
	}
}

657 
gids_uid_t


658 
	$_gids_uid_Æloc
 (*
u£r
, 
uid_t
 
uid
)

662 
gids_uid_t
 
u
;

664 i‡((
u£r
 =
NULL
) || (*user == '\0')) {

665  (
NULL
);

667 i‡(!(
u
 = 
	`mÆloc
 ( (*u)))) {

668  (
NULL
);

670 i‡(!(
u
->
u£r
 = 
	`°rdup
 (user))) {

671 
	`‰ì
 (
u
);

672  (
NULL
);

674 
u
->
uid
 = uid;

675  (
u
);

676 
	}
}

680 
	$_gids_uid_cmp
 (*
u£r1
, *
u£r2
)

685  (
	`°rcmp
 (
u£r1
, 
u£r2
));

686 
	}
}

690 
	$_gids_uid_dñ
 (
gids_uid_t
 
u
)

694 i‡(!
u
) {

697 i‡(
u
->
u£r
) {

698 
	`‰ì
 (
u
->
u£r
);

700 
	`‰ì
 (
u
);

702 
	}
}

709 #i‡
_GIDS_DEBUG


712 
	$_gids_dump_gid_hash
 (
hash_t
 
gid_hash
)

714 
n
;

716 
n
 = 
	`hash_cou¡
 (
gid_hash
);

717 
	`¥ötf
 ("* GID†Dum∞(%d UID%s):\n", 
n
, ((n == 1) ? "" : "s"));

718 
	`hash_f‹_óch
 (
gid_hash
, (
hash_¨g_f
Ë
_gids_dump_gid_node
, 
NULL
);

720 
	}
}

724 
	$_gids_dump_gid_node
 (
gids_gid_t
 
g
, 
uid_t
 *
uidp
, *
nuŒ
)

726 
gids_node_t
 
node
;

728 
	`as£π
 (
g
->
uid
 =*
uidp
);

730 
	`¥ötf
 (" %5d:", 
g
->
uid
);

731 
node
 = 
g
->
√xt
;Çode;Çode =Çode->next) {

732 
	`¥ötf
 (" %d", 
node
->
gid
);

734 
	`¥ötf
 ("\n");

736 
	}
}

740 
	$_gids_dump_uid_hash
 (
hash_t
 
uid_hash
)

742 
n
;

744 
n
 = 
	`hash_cou¡
 (
uid_hash
);

745 
	`¥ötf
 ("* UID Dum∞(%d u£r%s):\n", 
n
, ((n == 1) ? "" : "s"));

746 
	`hash_f‹_óch
 (
uid_hash
, (
hash_¨g_f
Ë
_gids_dump_uid_node
, 
NULL
);

748 
	}
}

752 
	$_gids_dump_uid_node
 (
gids_uid_t
 
u
, *
u£r
, *
nuŒ
)

754 
	`as£π
 (
u
->
u£r
 == user);

756 
	`¥ötf
 (" %5d: %s\n", 
u
->
uid
, u->
u£r
);

758 
	}
}

	@src/munged/gids.h

29 #i‚de‡
GIDS_H


30 
	#GIDS_H


	)

37 
	#GIDS_GROUP_FILE
 "/ëc/group"

	)

38 
	#GIDS_HASH_SIZE
 2053

	)

39 
	#UIDS_HASH_SIZE
 4099

	)

46 
gids
 * 
	tgids_t
;

56 
gids_t
 
gids_¸óã
 (
öãrvÆ
, 
do_group_°©
);

66 
gids_de°roy
 (
gids_t
 
gids
);

71 
gids_upd©e
 (
gids_t
 
gids
);

76 
gids_is_membî
 (
gids_t
 
gids
, 
uid_t
 
uid
, 
gid_t
 
gid
);

	@src/munged/hash.c

31 #i‡
HAVE_CONFIG_H


32 
	~"c⁄fig.h
"

35 
	~<as£π.h
>

36 
	~<î∫o.h
>

37 
	~<°dlib.h
>

38 
	~<°rög.h
>

40 
	~"thªad.h
"

41 
	~"hash.h
"

48 
	#HASH_ALLOC
 1024

	)

49 
	#HASH_DEF_SIZE
 1213

	)

50 
	#HASH_MAGIC
 0xDEADBEEF

	)

57 
	shash_node
 {

58 
hash_node
 *
	m√xt
;

59 *
	md©a
;

60 c⁄° *
	mhkey
;

63 
	shash
 {

64 
	mcou¡
;

65 
	msize
;

66 
hash_node
 **
	mèbÀ
;

67 
hash_cmp_f
 
	mcmp_f
;

68 
hash_dñ_f
 
	mdñ_f
;

69 
hash_key_f
 
	mkey_f
;

70 #i‡
WITH_PTHREADS


71 
±hªad_muãx_t
 
	mmuãx
;

73 #i‚de‡
NDEBUG


74 
	mmagic
;

83 
hash_node
 * 
hash_node_Æloc
 ();

85 
hash_node_‰ì
 (
hash_node
 *
node
);

92 
hash_node
 *
	ghash_‰ì_li°
 = 
NULL
;

94 #i‡
WITH_PTHREADS


95 
±hªad_muãx_t
 
	ghash_‰ì_lock
 = 
PTHREAD_MUTEX_INITIALIZER
;

103 #ifde‡
WITH_LSD_FATAL_ERROR_FUNC


104 #unde‡
lsd_Áèl_îr‹


105 
lsd_Áèl_îr‹
 (*
fûe
, 
löe
, *
mesg
);

107 #i‚de‡
lsd_Áèl_îr‹


108 
	#lsd_Áèl_îr‹
(
fûe
, 
löe
, 
mesg
Ë(
	`ab‹t
 ())

	)

112 #ifde‡
WITH_LSD_NOMEM_ERROR_FUNC


113 #unde‡
lsd_nomem_îr‹


114 * 
lsd_nomem_îr‹
 (*
fûe
, 
löe
, *
mesg
);

116 #i‚de‡
lsd_nomem_îr‹


117 
	#lsd_nomem_îr‹
(
fûe
, 
löe
, 
mesg
Ë(
NULL
)

	)

126 
hash_t


127 
	$hash_¸óã
 (
size
, 
hash_key_f
 
key_f
, 
hash_cmp_f
 
cmp_f
, 
hash_dñ_f
 
dñ_f
)

129 
hash_t
 
h
;

131 i‡(!
cmp_f
 || !
key_f
) {

132 
î∫o
 = 
EINVAL
;

133  (
NULL
);

135 i‡(
size
 <= 0) {

136 
size
 = 
HASH_DEF_SIZE
;

138 i‡(!(
h
 = 
	`mÆloc
 ( (*h)))) {

139  (
	`lsd_nomem_îr‹
 (
__FILE__
, 
__LINE__
, "hash_create"));

141 i‡(!(
h
->
èbÀ
 = 
	`ˇŒoc
 (
size
,  (
hash_node
 *)))) {

142 
	`‰ì
 (
h
);

143  (
	`lsd_nomem_îr‹
 (
__FILE__
, 
__LINE__
, "hash_create"));

145 
h
->
cou¡
 = 0;

146 
h
->
size
 = size;

147 
h
->
cmp_f
 = cmp_f;

148 
h
->
dñ_f
 = del_f;

149 
h
->
key_f
 = key_f;

150 
	`lsd_muãx_öô
 (&
h
->
muãx
);

151 
	`as£π
 (
h
->
magic
 = 
HASH_MAGIC
);

152  (
h
);

153 
	}
}

157 
	$hash_de°roy
 (
hash_t
 
h
)

159 
i
;

160 
hash_node
 *
p
, *
q
;

162 i‡(!
h
) {

163 
î∫o
 = 
EINVAL
;

166 
	`lsd_muãx_lock
 (&
h
->
muãx
);

167 
	`as£π
 (
h
->
magic
 =
HASH_MAGIC
);

168 
i
 = 0; i < 
h
->
size
; i++) {

169 
p
 = 
h
->
èbÀ
[
i
];Ö !
NULL
;Ö = 
q
) {

170 
q
 = 
p
->
√xt
;

171 i‡(
h
->
dñ_f
)

172 
h
->
	`dñ_f
 (
p
->
d©a
);

173 
	`hash_node_‰ì
 (
p
);

176 
	`as£π
 (
h
->
magic
 = ~
HASH_MAGIC
);

177 
	`lsd_muãx_u∆ock
 (&
h
->
muãx
);

178 
	`lsd_muãx_de°roy
 (&
h
->
muãx
);

179 
	`‰ì
 (
h
->
èbÀ
);

180 
	`‰ì
 (
h
);

182 
	}
}

185 
	$hash_ª£t
 (
hash_t
 
h
)

187 
i
;

188 
hash_node
 *
p
, *
q
;

190 i‡(!
h
) {

191 
î∫o
 = 
EINVAL
;

194 
	`lsd_muãx_lock
 (&
h
->
muãx
);

195 
	`as£π
 (
h
->
magic
 =
HASH_MAGIC
);

196 
i
 = 0; i < 
h
->
size
; i++) {

197 
p
 = 
h
->
èbÀ
[
i
];Ö !
NULL
;Ö = 
q
) {

198 
q
 = 
p
->
√xt
;

199 i‡(
h
->
dñ_f
)

200 
h
->
	`dñ_f
 (
p
->
d©a
);

201 
	`hash_node_‰ì
 (
p
);

203 
h
->
èbÀ
[
i
] = 
NULL
;

205 
h
->
cou¡
 = 0;

206 
	`lsd_muãx_u∆ock
 (&
h
->
muãx
);

208 
	}
}

212 
	$hash_is_em±y
 (
hash_t
 
h
)

214 
n
;

216 i‡(!
h
) {

217 
î∫o
 = 
EINVAL
;

220 
	`lsd_muãx_lock
 (&
h
->
muãx
);

221 
	`as£π
 (
h
->
magic
 =
HASH_MAGIC
);

222 
n
 = 
h
->
cou¡
;

223 
	`lsd_muãx_u∆ock
 (&
h
->
muãx
);

224  (
n
 == 0);

225 
	}
}

229 
	$hash_cou¡
 (
hash_t
 
h
)

231 
n
;

233 i‡(!
h
) {

234 
î∫o
 = 
EINVAL
;

237 
	`lsd_muãx_lock
 (&
h
->
muãx
);

238 
	`as£π
 (
h
->
magic
 =
HASH_MAGIC
);

239 
n
 = 
h
->
cou¡
;

240 
	`lsd_muãx_u∆ock
 (&
h
->
muãx
);

241  (
n
);

242 
	}
}

246 
	$hash_föd
 (
hash_t
 
h
, c⁄° *
key
)

248 
¶Ÿ
;

249 
hash_node
 *
p
;

250 *
d©a
 = 
NULL
;

252 i‡(!
h
 || !
key
) {

253 
î∫o
 = 
EINVAL
;

254  (
NULL
);

256 
î∫o
 = 0;

257 
	`lsd_muãx_lock
 (&
h
->
muãx
);

258 
	`as£π
 (
h
->
magic
 =
HASH_MAGIC
);

259 
¶Ÿ
 = 
h
->
	`key_f
 (
key
Ë% h->
size
;

260 
p
 = 
h
->
èbÀ
[
¶Ÿ
];Ö !
NULL
;Ö =Ö->
√xt
) {

261 i‡(!
h
->
	`cmp_f
 (
p
->
hkey
, 
key
)) {

262 
d©a
 = 
p
->data;

266 
	`lsd_muãx_u∆ock
 (&
h
->
muãx
);

267  (
d©a
);

268 
	}
}

272 
	$hash_ö£π
 (
hash_t
 
h
, c⁄° *
key
, *
d©a
)

274 
hash_node
 *
p
;

275 
¶Ÿ
;

277 i‡(!
h
 || !
key
 || !
d©a
) {

278 
î∫o
 = 
EINVAL
;

279  (
NULL
);

281 
	`lsd_muãx_lock
 (&
h
->
muãx
);

282 
	`as£π
 (
h
->
magic
 =
HASH_MAGIC
);

283 
¶Ÿ
 = 
h
->
	`key_f
 (
key
Ë% h->
size
;

284 
p
 = 
h
->
èbÀ
[
¶Ÿ
];Ö !
NULL
;Ö =Ö->
√xt
) {

285 i‡(!
h
->
	`cmp_f
 (
p
->
hkey
, 
key
)) {

286 
î∫o
 = 
EEXIST
;

287 
d©a
 = 
NULL
;

288 
íd
;

291 i‡(!(
p
 = 
	`hash_node_Æloc
 ())) {

292 
d©a
 = 
	`lsd_nomem_îr‹
 (
__FILE__
, 
__LINE__
, "hash_insert");

293 
íd
;

295 
p
->
hkey
 = 
key
;

296 
p
->
d©a
 = data;

297 
p
->
√xt
 = 
h
->
èbÀ
[
¶Ÿ
];

298 
h
->
èbÀ
[
¶Ÿ
] = 
p
;

299 
h
->
cou¡
++;

301 
íd
:

302 
	`lsd_muãx_u∆ock
 (&
h
->
muãx
);

303  (
d©a
);

304 
	}
}

308 
	$hash_ªmove
 (
hash_t
 
h
, c⁄° *
key
)

310 
hash_node
 **
µ
;

311 
hash_node
 *
p
;

312 
¶Ÿ
;

313 *
d©a
 = 
NULL
;

315 i‡(!
h
 || !
key
) {

316 
î∫o
 = 
EINVAL
;

317  (
NULL
);

319 
î∫o
 = 0;

320 
	`lsd_muãx_lock
 (&
h
->
muãx
);

321 
	`as£π
 (
h
->
magic
 =
HASH_MAGIC
);

322 
¶Ÿ
 = 
h
->
	`key_f
 (
key
Ë% h->
size
;

323 
µ
 = &(
h
->
èbÀ
[
¶Ÿ
]); (
p
 = *µË!
NULL
;Ö∞&((*µ)->
√xt
)) {

324 i‡(!
h
->
	`cmp_f
 (
p
->
hkey
, 
key
)) {

325 
d©a
 = 
p
->data;

326 *
µ
 = 
p
->
√xt
;

327 
	`hash_node_‰ì
 (
p
);

328 
h
->
cou¡
--;

332 
	`lsd_muãx_u∆ock
 (&
h
->
muãx
);

333  (
d©a
);

334 
	}
}

338 
	$hash_dñëe_if
 (
hash_t
 
h
, 
hash_¨g_f
 
¨g_f
, *
¨g
)

340 
i
;

341 
hash_node
 **
µ
;

342 
hash_node
 *
p
;

343 
n
 = 0;

345 i‡(!
h
 || !
¨g_f
) {

346 
î∫o
 = 
EINVAL
;

349 
	`lsd_muãx_lock
 (&
h
->
muãx
);

350 
	`as£π
 (
h
->
magic
 =
HASH_MAGIC
);

351 
i
 = 0; i < 
h
->
size
; i++) {

352 
µ
 = &(
h
->
èbÀ
[
i
]);

353 (
p
 = *
µ
Ë!
NULL
) {

354 i‡(
	`¨g_f
 (
p
->
d©a
,Ö->
hkey
, 
¨g
) > 0) {

355 i‡(
h
->
dñ_f
)

356 
h
->
	`dñ_f
 (
p
->
d©a
);

357 *
µ
 = 
p
->
√xt
;

358 
	`hash_node_‰ì
 (
p
);

359 
h
->
cou¡
--;

360 
n
++;

363 
µ
 = &(
p
->
√xt
);

367 
	`lsd_muãx_u∆ock
 (&
h
->
muãx
);

368  (
n
);

369 
	}
}

373 
	$hash_f‹_óch
 (
hash_t
 
h
, 
hash_¨g_f
 
¨g_f
, *
¨g
)

375 
i
;

376 
hash_node
 *
p
;

377 
n
 = 0;

379 i‡(!
h
 || !
¨g_f
) {

380 
î∫o
 = 
EINVAL
;

383 
	`lsd_muãx_lock
 (&
h
->
muãx
);

384 
	`as£π
 (
h
->
magic
 =
HASH_MAGIC
);

385 
i
 = 0; i < 
h
->
size
; i++) {

386 
p
 = 
h
->
èbÀ
[
i
];Ö !
NULL
;Ö =Ö->
√xt
) {

387 i‡(
	`¨g_f
 (
p
->
d©a
,Ö->
hkey
, 
¨g
) > 0) {

388 
n
++;

392 
	`lsd_muãx_u∆ock
 (&
h
->
muãx
);

393  (
n
);

394 
	}
}

402 
	$hash_key_°rög
 (c⁄° *
°r
)

404 *
p
;

405 
hvÆ
 = 0;

406 c⁄° 
mu…ùlõr
 = 31;

408 
p
 = (*Ë
°r
; *p != '\0';Ö++) {

409 
hvÆ
 +(
mu…ùlõr
 * hvÆË+ *
p
;

411  (
hvÆ
);

412 
	}
}

419 
hash_node
 *

420 
	$hash_node_Æloc
 ()

426 
i
;

427 
hash_node
 *
p
 = 
NULL
;

429 
	`as£π
 (
HASH_ALLOC
 > 0);

430 
	`lsd_muãx_lock
 (&
hash_‰ì_lock
);

431 i‡(!
hash_‰ì_li°
) {

432 i‡((
hash_‰ì_li°
 = 
	`mÆloc
 (
HASH_ALLOC
 *  (*
p
)))) {

433 
i
 = 0; i < 
HASH_ALLOC
 - 1; i++)

434 
hash_‰ì_li°
[
i
].
√xt
 = &hash_free_list[i+1];

435 
hash_‰ì_li°
[
i
].
√xt
 = 
NULL
;

438 i‡(
hash_‰ì_li°
) {

439 
p
 = 
hash_‰ì_li°
;

440 
hash_‰ì_li°
 = 
p
->
√xt
;

443 
î∫o
 = 
ENOMEM
;

445 
	`lsd_muãx_u∆ock
 (&
hash_‰ì_lock
);

446  (
p
);

447 
	}
}

451 
	$hash_node_‰ì
 (
hash_node
 *
node
)

455 
	`as£π
 (
node
 !
NULL
);

456 
	`mem£t
 (
node
, 0,  (*node));

457 
	`lsd_muãx_lock
 (&
hash_‰ì_lock
);

458 
node
->
√xt
 = 
hash_‰ì_li°
;

459 
hash_‰ì_li°
 = 
node
;

460 
	`lsd_muãx_u∆ock
 (&
hash_‰ì_lock
);

462 
	}
}

	@src/munged/hash.h

29 #i‚de‡
LSD_HASH_H


30 
	#LSD_HASH_H


	)

61 
hash
 * 
	thash_t
;

66 (*
	thash_key_f
Ë(c⁄° *
	tkey
);

72 (*
	thash_cmp_f
Ë(c⁄° *
	tkey1
, c⁄° *
	tkey2
);

78 (*
	thash_dñ_f
Ë(*
	td©a
);

85 (*
	thash_¨g_f
Ë(*
	td©a
, c⁄° *
	tkey
, *
	t¨g
);

97 
hash_t
 
	`hash_¸óã
 (
size
,

98 
hash_key_f
 
key_f
, 
hash_cmp_f
 
cmp_f
, 
hash_dñ_f
 
dñ_f
);

113 
	`hash_de°roy
 (
hash_t
 
h
);

120 
	`hash_ª£t
 (
hash_t
 
h
);

127 
	`hash_is_em±y
 (
hash_t
 
h
);

132 
	`hash_cou¡
 (
hash_t
 
h
);

137 * 
	`hash_föd
 (
hash_t
 
h
, c⁄° *
key
);

145 * 
	`hash_ö£π
 (
hash_t
 
h
, c⁄° *
key
, *
d©a
);

155 * 
	`hash_ªmove
 (
hash_t
 
h
, c⁄° *
key
);

163 
	`hash_dñëe_if
 (
hash_t
 
h
, 
hash_¨g_f
 
¨gf
, *
¨g
);

173 
	`hash_f‹_óch
 (
hash_t
 
h
, 
hash_¨g_f
 
¨gf
, *
¨g
);

181 
	`hash_key_°rög
 (c⁄° *
°r
);

	@src/munged/job.c

29 #i‡
HAVE_CONFIG_H


30 
	~"c⁄fig.h
"

33 
	~<¨∑/öë.h
>

34 
	~<as£π.h
>

35 
	~<î∫o.h
>

36 
	~<munge.h
>

37 
	~<√töë/ö.h
>

38 
	~<sig«l.h
>

39 
	~<°rög.h
>

40 
	~<sys/sockë.h
>

41 
	~<uni°d.h
>

42 
	~"c⁄f.h
"

43 
	~"dec.h
"

44 
	~"íc.h
"

45 
	~"fd.h
"

46 
	~"log.h
"

47 
	~"m_msg.h
"

48 
	~"munge_defs.h
"

49 
	~"°r.h
"

50 
	~"w‹k.h
"

57 vﬁ©ûê
sig_©omic_t
 
d⁄e
;

64 
_job_exec
 (
m_msg_t
 
m
);

72 
	$job_ac˚±
 (
c⁄f_t
 
c⁄f
)

74 
w‹k_p
 
w
;

75 
m_msg_t
 
m
;

76 
sd
;

78 
	`as£π
 (
c⁄f
 !
NULL
);

79 
	`as£π
 (
c⁄f
->
ld
 >= 0);

81 i‡(!(
w
 = 
	`w‹k_öô
 ((
w‹k_func_t
Ë
_job_exec
, 
c⁄f
->
¡hªads
))) {

82 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

83 "FaûedÅÿ¸óã %d w‹kÅhªad%s", 
c⁄f
->
¡hªads
,

84 ((
c⁄f
->
¡hªads
 > 1) ? "s" : ""));

86 
	`log_msg
 (
LOG_INFO
, "Cª©ed %d w‹kÅhªad%s", 
c⁄f
->
¡hªads
,

87 ((
c⁄f
->
¡hªads
 > 1) ? "s" : ""));

89 !
d⁄e
) {

90 i‡((
sd
 = 
	`ac˚±
 (
c⁄f
->
ld
, 
NULL
, NULL)) < 0) {

91 
î∫o
) {

92 
ECONNABORTED
:

93 
EINTR
:

95 
EMFILE
:

96 
ENFILE
:

97 
ENOBUFS
:

98 
ENOMEM
:

99 
	`log_msg
 (
LOG_INFO
,

101 
	`w‹k_waô
 (
w
);

104 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

120 i‡(
	`fd_£t_n⁄blockög
 (
sd
) < 0) {

121 
	`˛o£
 (
sd
);

122 
	`log_msg
 (
LOG_WARNING
,

124 
	`°ªº‹
 (
î∫o
));

126 i‡(
	`m_msg_¸óã
 (&
m
Ë!
EMUNGE_SUCCESS
) {

127 
	`˛o£
 (
sd
);

128 
	`log_msg
 (
LOG_WARNING
, "FailedÅo create clientÑequest");

130 i‡(
	`m_msg_böd
 (
m
, 
sd
Ë!
EMUNGE_SUCCESS
) {

131 
	`m_msg_de°roy
 (
m
);

132 
	`log_msg
 (
LOG_WARNING
, "FailedÅo bind socket for clientÑequest");

134 i‡(
	`w‹k_queue
 (
w
, 
m
) < 0) {

135 
	`m_msg_de°roy
 (
m
);

136 
	`log_msg
 (
LOG_WARNING
, "FailedÅo queue clientÑequest");

139 
	`log_msg
 (
LOG_NOTICE
, "Exôög o¿sig«l=%d", 
d⁄e
);

140 
	`w‹k_föi
 (
w
, 1);

142 
	}
}

150 
	$_job_exec
 (
m_msg_t
 
m
)

154 
munge_îr_t
 
e
;

155 c⁄° *
p
;

157 
	`as£π
 (
m
 !
NULL
);

159 
e
 = 
	`m_msg_ªcv
 (
m
, 
MUNGE_MSG_UNDEF
, 
MUNGE_MAXIMUM_REQ_LEN
);

160 i‡(
e
 =
EMUNGE_SUCCESS
) {

161 
m
->
ty≥
) {

162 
MUNGE_MSG_ENC_REQ
:

163 
	`íc_¥o˚ss_msg
 (
m
);

165 
MUNGE_MSG_DEC_REQ
:

166 
	`dec_¥o˚ss_msg
 (
m
);

169 
	`m_msg_£t_îr
 (
m
, 
EMUNGE_SNAFU
,

170 
	`°rdupf
 ("InvÆid mesßgêty≥ %d", 
m
->
ty≥
));

179 i‡(
m
->
îr‹_num
 !
EMUNGE_SUCCESS
) {

180 
p
 = (
m
->
îr‹_°r
 !
NULL
)

181 ? 
m
->
îr‹_°r


182 : 
	`munge_°ªº‹
 (
m
->
îr‹_num
);

183 
m
->
îr‹_num
) {

184 
EMUNGE_CRED_EXPIRED
:

185 
EMUNGE_CRED_REWOUND
:

186 
EMUNGE_CRED_REPLAYED
:

187 i‡(
m
->
addr_Àn
 == 4) {

188 
ù_addr_buf
 [
INET_ADDRSTRLEN
];

189 i‡(
	`öë_¡›
 (
AF_INET
, &
m
->
addr
, 
ù_addr_buf
,

190  (
ù_addr_buf
)Ë!
NULL
) {

191 
	`log_msg
 (
LOG_INFO
, "%†‰om %s", 
p
, 
ù_addr_buf
);

197 
	`log_msg
 (
LOG_INFO
, "%s", 
p
);

201 
	`m_msg_de°roy
 (
m
);

203 
	}
}

	@src/munged/job.h

29 #i‚de‡
JOB_H


30 
	#JOB_H


	)

33 
	~"m_msg.h
"

36 
job_ac˚±
 (
c⁄f_t
 
c⁄f
);

	@src/munged/mac.c

29 #i‡
HAVE_CONFIG_H


30 
	~<c⁄fig.h
>

33 
	~<as£π.h
>

34 
	~<°rög.h
>

35 
	~"mac.h
"

36 
	~"md.h
"

43 
	#MAC_MAGIC
 0xDEADACE2

	)

50 
_mac_öô
 (
mac_˘x
 *
x
, 
munge_mac_t
 
md
, c⁄° *
key
, 
keyÀn
);

51 
_mac_upd©e
 (
mac_˘x
 *
x
, c⁄° *
§c
, 
§˛í
);

52 
_mac_föÆ
 (
mac_˘x
 *
x
, *
d°
, *
d°Àn
);

53 
_mac_˛ónup
 (
mac_˘x
 *
x
);

54 
_mac_block
 (
munge_mac_t
 
md
, c⁄° *
key
, 
keyÀn
,

55 *
d°
, *
d°Àn
, c⁄° *
§c
, 
§˛í
);

63 
	$mac_öô
 (
mac_˘x
 *
x
, 
munge_mac_t
 
md
, c⁄° *
key
, 
keyÀn
)

65 
rc
;

67 
	`as£π
 (
x
 !
NULL
);

68 
	`as£π
 (
key
 !
NULL
);

69 
	`as£π
 (
keyÀn
 > 0);

71 
rc
 = 
	`_mac_öô
 (
x
, 
md
, 
key
, 
keyÀn
);

72 i‡(
rc
 >= 0) {

73 
	`as£π
 (
x
->
magic
 = 
MAC_MAGIC
);

74 
	`as£π
 (!(
x
->
föÆized
 = 0));

76  (
rc
);

77 
	}
}

81 
	$mac_upd©e
 (
mac_˘x
 *
x
, c⁄° *
§c
, 
§˛í
)

83 
rc
;

85 
	`as£π
 (
x
 !
NULL
);

86 
	`as£π
 (
x
->
magic
 =
MAC_MAGIC
);

87 
	`as£π
 (
x
->
föÆized
 != 1);

88 
	`as£π
 (
§c
 !
NULL
);

90 i‡(
§˛í
 <= 0) {

93 
rc
 = 
	`_mac_upd©e
 (
x
, 
§c
, 
§˛í
);

94  (
rc
);

95 
	}
}

99 
	$mac_föÆ
 (
mac_˘x
 *
x
, *
d°
, *
d°Àn
)

101 
rc
;

103 
	`as£π
 (
x
 !
NULL
);

104 
	`as£π
 (
x
->
magic
 =
MAC_MAGIC
);

105 
	`as£π
 (
x
->
föÆized
 != 1);

106 
	`as£π
 (
d°
 !
NULL
);

107 
	`as£π
 (
d°Àn
 !
NULL
);

109 i‡((
d°Àn
 =
NULL
) || (*dstlen <= 0)) {

112 
rc
 = 
	`_mac_föÆ
 (
x
, 
d°
, 
d°Àn
);

113 
	`as£π
 (
x
->
föÆized
 = 1);

114  (
rc
);

115 
	}
}

119 
	$mac_˛ónup
 (
mac_˘x
 *
x
)

121 
rc
;

123 
	`as£π
 (
x
 !
NULL
);

124 
	`as£π
 (
x
->
magic
 =
MAC_MAGIC
);

126 
rc
 = 
	`_mac_˛ónup
 (
x
);

127 
	`mem£t
 (
x
, 0,  (*x));

128 
	`as£π
 (
x
->
magic
 = ~
MAC_MAGIC
);

129  (
rc
);

130 
	}
}

134 
	$mac_size
 (
munge_mac_t
 
md
)

136  (
	`md_size
 (
md
));

137 
	}
}

141 
	$mac_block
 (
munge_mac_t
 
md
, c⁄° *
key
, 
keyÀn
,

142 *
d°
, *
d°Àn
, c⁄° *
§c
, 
§˛í
)

144 
rc
;

146 
	`as£π
 (
key
 !
NULL
);

147 
	`as£π
 (
§c
 !
NULL
);

148 
	`as£π
 (
d°
 !
NULL
);

149 
	`as£π
 (
d°Àn
 !
NULL
);

151 i‡(
§˛í
 <= 0) {

152 *
d°Àn
 = 0;

155 
rc
 = 
	`_mac_block
 (
md
, 
key
, 
keyÀn
, 
d°
, 
d°Àn
, 
§c
, 
§˛í
);

156  (
rc
);

157 
	}
}

161 
	$mac_m≠_íum
 (
munge_mac_t
 
mac
, *
d°
)

163  (
	`md_m≠_íum
 (
mac
, 
d°
));

164 
	}
}

171 #i‡
HAVE_LIBGCRYPT


173 
	~<g¸y±.h
>

174 
	~"log.h
"

177 
	$_mac_öô
 (
mac_˘x
 *
x
, 
munge_mac_t
 
md
, c⁄° *
key
, 
keyÀn
)

179 
g¸y_îr‹_t
 
e
;

180 
Ægo
;

182 i‡(
	`md_m≠_íum
 (
md
, &
Ægo
) < 0) {

185 i‡((
e
 = 
	`g¸y_md_›í
 (&(
x
->
˘x
), 
Ægo
, 
GCRY_MD_FLAG_HMAC
)) != 0) {

186 
	`log_msg
 (
LOG_DEBUG
, "gcry_md_open failed for MAC=%d HMAC: %s",

187 
md
, 
	`g¸y_°ªº‹
 (
e
));

190 i‡((
e
 = 
	`g¸y_md_£tkey
 (
x
->
˘x
, 
key
, 
keyÀn
)) != 0) {

191 
	`log_msg
 (
LOG_DEBUG
, "gcry_md_setkey failed for MAC=%d HMAC: %s",

192 
md
, 
	`g¸y_°ªº‹
 (
e
));

195 
x
->
digÀn
 = 
	`g¸y_md_gë_Ægo_dÀn
 (
Ægo
);

197 
	}
}

201 
	$_mac_upd©e
 (
mac_˘x
 *
x
, c⁄° *
§c
, 
§˛í
)

203 
	`g¸y_md_wrôe
 (
x
->
˘x
, 
§c
, 
§˛í
);

205 
	}
}

209 
	$_mac_föÆ
 (
mac_˘x
 *
x
, *
d°
, *
d°Àn
)

211 *
dige°
;

213 i‡(*
d°Àn
 < 
x
->
digÀn
) {

216 i‡((
dige°
 = 
	`g¸y_md_ªad
 (
x
->
˘x
, 0)Ë=
NULL
) {

219 
	`mem˝y
 (
d°
, 
dige°
, 
x
->
digÀn
);

220 *
d°Àn
 = 
x
->
digÀn
;

222 
	}
}

226 
	$_mac_˛ónup
 (
mac_˘x
 *
x
)

228 
	`g¸y_md_˛o£
 (
x
->
˘x
);

230 
	}
}

234 
	$_mac_block
 (
munge_mac_t
 
md
, c⁄° *
key
, 
keyÀn
,

235 *
d°
, *
d°Àn
, c⁄° *
§c
, 
§˛í
)

237 
g¸y_îr‹_t
 
e
;

238 
Ægo
;

239 
Àn
;

240 
g¸y_md_hd_t
 
˘x
;

241 *
dige°
;

243 i‡(
	`md_m≠_íum
 (
md
, &
Ægo
) < 0) {

246 
Àn
 = 
	`g¸y_md_gë_Ægo_dÀn
 (
Ægo
);

247 i‡(*
d°Àn
 < 
Àn
) {

250 i‡((
e
 = 
	`g¸y_md_›í
 (&
˘x
, 
Ægo
, 
GCRY_MD_FLAG_HMAC
)) != 0) {

251 
	`log_msg
 (
LOG_DEBUG
, "gcry_md_open failed for MAC=%d HMAC: %s",

252 
md
, 
	`g¸y_°ªº‹
 (
e
));

255 i‡((
e
 = 
	`g¸y_md_£tkey
 (
˘x
, 
key
, 
keyÀn
)) != 0) {

256 
	`log_msg
 (
LOG_DEBUG
, "gcry_md_setkey failed for MAC=%d HMAC: %s",

257 
md
, 
	`g¸y_°ªº‹
 (
e
));

258 
	`g¸y_md_˛o£
 (
˘x
);

261 
	`g¸y_md_wrôe
 (
˘x
, 
§c
, 
§˛í
);

263 i‡((
dige°
 = 
	`g¸y_md_ªad
 (
˘x
, 0)Ë=
NULL
) {

264 
	`g¸y_md_˛o£
 (
˘x
);

267 
	`mem˝y
 (
d°
, 
dige°
, 
Àn
);

268 *
d°Àn
 = 
Àn
;

269 
	`g¸y_md_˛o£
 (
˘x
);

270 
	`mem£t
 (&
˘x
, 0,  (ctx));

272 
	}
}

286 #i‡
HAVE_OPENSSL


288 
	~<›ís¶/evp.h
>

289 
	~<›ís¶/hmac.h
>

292 
	$_mac_öô
 (
mac_˘x
 *
x
, 
munge_mac_t
 
md
, c⁄° *
key
, 
keyÀn
)

294 
EVP_MD
 *
Ægo
;

296 i‡(
	`md_m≠_íum
 (
md
, &
Ægo
) < 0) {

299 #i‡
HAVE_HMAC_INIT_EX


300 
	`HMAC_CTX_öô
 (&(
x
->
˘x
));

301 
	`HMAC_Inô_ex
 (&(
x
->
˘x
), 
key
, 
keyÀn
, 
Ægo
, 
NULL
);

303 
	`HMAC_Inô
 (&(
x
->
˘x
), 
key
, 
keyÀn
, 
Ægo
);

305 
x
->
digÀn
 = 
	`EVP_MD_size
 (
Ægo
);

307 
	}
}

311 
	$_mac_upd©e
 (
mac_˘x
 *
x
, c⁄° *
§c
, 
§˛í
)

313 
	`HMAC_Upd©e
 (&(
x
->
˘x
), 
§c
, 
§˛í
);

315 
	}
}

319 
	$_mac_föÆ
 (
mac_˘x
 *
x
, *
d°
, *
d°Àn
)

321 i‡(*
d°Àn
 < 
x
->
digÀn
) {

324 
	`HMAC_FöÆ
 (&(
x
->
˘x
), 
d°
, (*Ë
d°Àn
);

326 
	}
}

330 
	$_mac_˛ónup
 (
mac_˘x
 *
x
)

332 #i‡
HAVE_HMAC_INIT_EX


333 
	`HMAC_CTX_˛ónup
 (&(
x
->
˘x
));

335 
	`HMAC_˛ónup
 (&(
x
->
˘x
));

338 
	}
}

342 
	$_mac_block
 (
munge_mac_t
 
md
, c⁄° *
key
, 
keyÀn
,

343 *
d°
, *
d°Àn
, c⁄° *
§c
, 
§˛í
)

345 
EVP_MD
 *
Ægo
;

347 i‡(
	`md_m≠_íum
 (
md
, &
Ægo
) < 0) {

350 i‡(*
d°Àn
 < 
	`EVP_MD_size
 (
Ægo
)) {

353 
	`HMAC
 (
Ægo
, 
key
, 
keyÀn
, 
§c
, 
§˛í
, 
d°
, (*Ë
d°Àn
);

355 
	}
}

	@src/munged/mac.h

29 #i‚de‡
MAC_H


30 
	#MAC_H


	)

33 #i‡
HAVE_CONFIG_H


34 
	~<c⁄fig.h
>

37 
	~<munge.h
>

44 #i‡
HAVE_LIBGCRYPT


46 
	~<g¸y±.h
>

49 
g¸y_md_hd_t
 
	m˘x
;

50 
	mdigÀn
;

51 #i‚de‡
NDEBUG


52 
	mmagic
;

53 
	mföÆized
;

55 } 
	tmac_˘x
;

60 #i‡
HAVE_OPENSSL


62 
	~<›ís¶/evp.h
>

63 
	~<›ís¶/hmac.h
>

66 
HMAC_CTX
 
	m˘x
;

67 
	mdigÀn
;

68 #i‚de‡
NDEBUG


69 
	mmagic
;

70 
	mföÆized
;

72 } 
	tmac_˘x
;

81 
mac_öô
 (
mac_˘x
 *
x
, 
munge_mac_t
 
md
, c⁄° *
key
, 
keyÀn
);

88 
mac_upd©e
 (
mac_˘x
 *
x
, c⁄° *
§c
, 
§˛í
);

95 
mac_föÆ
 (
mac_˘x
 *
x
, *
d°
, *
d°Àn
);

105 
mac_˛ónup
 (
mac_˘x
 *
x
);

111 
mac_size
 (
munge_mac_t
 
md
);

116 
mac_block
 (
munge_mac_t
 
md
, c⁄° *
key
, 
keyÀn
,

117 *
d°
, *
d°Àn
, c⁄° *
§c
, 
§˛í
);

128 
mac_m≠_íum
 (
munge_mac_t
 
mac
, *
d°
);

	@src/munged/md.c

29 #i‡
HAVE_CONFIG_H


30 
	~<c⁄fig.h
>

33 
	~<as£π.h
>

34 
	~<munge.h
>

35 
	~<°rög.h
>

36 
	~"md.h
"

43 
	#MD_MAGIC
 0xDEADACE3

	)

50 
	g_md_is_öôülized
 = 0;

57 
_md_öô_subsy°em
 ();

58 
_md_öô
 (
md_˘x
 *
x
, 
munge_mac_t
 
md
);

59 
_md_upd©e
 (
md_˘x
 *
x
, c⁄° *
§c
, 
§˛í
);

60 
_md_föÆ
 (
md_˘x
 *
x
, *
d°
, *
d°Àn
);

61 
_md_˛ónup
 (
md_˘x
 *
x
);

62 
_md_c›y
 (
md_˘x
 *
xd°
, md_˘x *
x§c
);

63 
_md_size
 (
munge_mac_t
 
md
);

64 
_md_m≠_íum
 (
munge_mac_t
 
md
, *
d°
);

72 
	$md_öô_subsy°em
 ()

76 i‡(! 
_md_is_öôülized
) {

77 
	`_md_öô_subsy°em
 ();

78 
_md_is_öôülized
++;

81 
	}
}

85 
	$md_öô
 (
md_˘x
 *
x
, 
munge_mac_t
 
md
)

87 
rc
;

89 
	`as£π
 (
_md_is_öôülized
);

90 
	`as£π
 (
x
 !
NULL
);

92 
rc
 = 
	`_md_öô
 (
x
, 
md
);

93 i‡(
rc
 >= 0) {

94 
	`as£π
 (
x
->
magic
 = 
MD_MAGIC
);

95 
	`as£π
 (!(
x
->
föÆized
 = 0));

97  (
rc
);

98 
	}
}

102 
	$md_upd©e
 (
md_˘x
 *
x
, c⁄° *
§c
, 
§˛í
)

104 
rc
;

106 
	`as£π
 (
_md_is_öôülized
);

107 
	`as£π
 (
x
 !
NULL
);

108 
	`as£π
 (
x
->
magic
 =
MD_MAGIC
);

109 
	`as£π
 (
x
->
föÆized
 != 1);

110 
	`as£π
 (
§c
 !
NULL
);

112 i‡(
§˛í
 <= 0) {

115 
rc
 = 
	`_md_upd©e
 (
x
, 
§c
, 
§˛í
);

116  (
rc
);

117 
	}
}

121 
	$md_föÆ
 (
md_˘x
 *
x
, *
d°
, *
d°Àn
)

123 
rc
;

125 
	`as£π
 (
_md_is_öôülized
);

126 
	`as£π
 (
x
 !
NULL
);

127 
	`as£π
 (
x
->
magic
 =
MD_MAGIC
);

128 
	`as£π
 (
x
->
föÆized
 != 1);

129 
	`as£π
 (
d°
 !
NULL
);

130 
	`as£π
 (
d°Àn
 !
NULL
);

132 i‡((
d°Àn
 =
NULL
) || (*dstlen <= 0)) {

135 
rc
 = 
	`_md_föÆ
 (
x
, 
d°
, 
d°Àn
);

136 
	`as£π
 (
x
->
föÆized
 = 1);

137  (
rc
);

138 
	}
}

142 
	$md_˛ónup
 (
md_˘x
 *
x
)

144 
rc
;

146 
	`as£π
 (
_md_is_öôülized
);

147 
	`as£π
 (
x
 !
NULL
);

148 
	`as£π
 (
x
->
magic
 =
MD_MAGIC
);

150 
rc
 = 
	`_md_˛ónup
 (
x
);

151 
	`mem£t
 (
x
, 0,  (*x));

152 
	`as£π
 (
x
->
magic
 = ~
MD_MAGIC
);

153  (
rc
);

154 
	}
}

158 
	$md_c›y
 (
md_˘x
 *
xd°
, md_˘x *
x§c
)

160 
rc
;

162 
	`as£π
 (
_md_is_öôülized
);

163 
	`as£π
 (
xd°
 !
NULL
);

164 
	`as£π
 (
x§c
 !
NULL
);

165 
	`as£π
 (
x§c
->
magic
 =
MD_MAGIC
);

166 
	`as£π
 (
x§c
->
föÆized
 != 1);

168 
xd°
->
digÀn
 = 
x§c
->diglen;

169 
rc
 = 
	`_md_c›y
 (
xd°
, 
x§c
);

170 
	`as£π
 (!(
xd°
->
föÆized
 = 0));

171 
	`as£π
 (
xd°
->
magic
 = 
MD_MAGIC
);

172  (
rc
);

173 
	}
}

177 
	$md_size
 (
munge_mac_t
 
md
)

179 
	`as£π
 (
_md_is_öôülized
);

180  (
	`_md_size
 (
md
));

181 
	}
}

185 
	$md_m≠_íum
 (
munge_mac_t
 
md
, *
d°
)

187 
	`as£π
 (
_md_is_öôülized
);

188  (
	`_md_m≠_íum
 (
md
, 
d°
));

189 
	}
}

196 #i‡
HAVE_LIBGCRYPT


198 
	~<g¸y±.h
>

199 
	~<°rög.h
>

200 
	~"log.h
"

202 
	g_md_m≠
 [
MUNGE_MAC_LAST_ITEM
];

206 
	$_md_öô_subsy°em
 ()

208 
i
;

210 
i
 = 0; i < 
MUNGE_MAC_LAST_ITEM
; i++) {

211 
_md_m≠
 [
i
] = -1;

213 
_md_m≠
 [
MUNGE_MAC_MD5
] = 
GCRY_MD_MD5
;

214 
_md_m≠
 [
MUNGE_MAC_SHA1
] = 
GCRY_MD_SHA1
;

215 
_md_m≠
 [
MUNGE_MAC_RIPEMD160
] = 
GCRY_MD_RMD160
;

216 
_md_m≠
 [
MUNGE_MAC_SHA256
] = 
GCRY_MD_SHA256
;

217 
_md_m≠
 [
MUNGE_MAC_SHA512
] = 
GCRY_MD_SHA512
;

219 
	}
}

223 
	$_md_öô
 (
md_˘x
 *
x
, 
munge_mac_t
 
md
)

225 
g¸y_îr‹_t
 
e
;

226 
Ægo
;

228 i‡(
	`_md_m≠_íum
 (
md
, &
Ægo
) < 0) {

231 i‡((
e
 = 
	`g¸y_md_›í
 (&(
x
->
˘x
), 
Ægo
, 0)) != 0) {

232 
	`log_msg
 (
LOG_DEBUG
, "gcry_md_open failed for MAC=%d: %s",

233 
md
, 
	`g¸y_°ªº‹
 (
e
));

236 
x
->
digÀn
 = 
	`g¸y_md_gë_Ægo_dÀn
 (
Ægo
);

238 
	}
}

242 
	$_md_upd©e
 (
md_˘x
 *
x
, c⁄° *
§c
, 
§˛í
)

244 
	`g¸y_md_wrôe
 (
x
->
˘x
, 
§c
, 
§˛í
);

246 
	}
}

250 
	$_md_föÆ
 (
md_˘x
 *
x
, *
d°
, *
d°Àn
)

252 *
dige°
;

254 i‡(*
d°Àn
 < 
x
->
digÀn
) {

257 i‡((
dige°
 = 
	`g¸y_md_ªad
 (
x
->
˘x
, 0)Ë=
NULL
) {

260 
	`mem˝y
 (
d°
, 
dige°
, 
x
->
digÀn
);

261 *
d°Àn
 = 
x
->
digÀn
;

263 
	}
}

267 
	$_md_˛ónup
 (
md_˘x
 *
x
)

269 
	`g¸y_md_˛o£
 (
x
->
˘x
);

271 
	}
}

275 
	$_md_c›y
 (
md_˘x
 *
xd°
, md_˘x *
x§c
)

277 
g¸y_îr‹_t
 
e
;

279 i‡((
e
 = 
	`g¸y_md_c›y
 (&(
xd°
->
˘x
), 
x§c
->ctx)) != 0) {

280 
	`log_msg
 (
LOG_DEBUG
, "g¸y_md_c›y faûed: %s", 
	`g¸y_°ªº‹
 (
e
));

284 
	}
}

288 
	$_md_size
 (
munge_mac_t
 
md
)

290 
Ægo
;

292 i‡(
	`_md_m≠_íum
 (
md
, &
Ægo
) < 0) {

295  (
	`g¸y_md_gë_Ægo_dÀn
 (
Ægo
));

296 
	}
}

300 
	$_md_m≠_íum
 (
munge_mac_t
 
md
, *
d°
)

302 
Ægo
 = -1;

304 i‡((
md
 > 
MUNGE_MAC_DEFAULT
Ë&& (md < 
MUNGE_MAC_LAST_ITEM
)) {

305 
Ægo
 = 
_md_m≠
 [
md
];

307 i‡(
Ægo
 < 0) {

310 i‡(
d°
 !
NULL
) {

311 * (*Ë
d°
 = 
Ægo
;

314 
	}
}

331 #i‡
HAVE_OPENSSL


333 
	~<›ís¶/evp.h
>

335 c⁄° 
EVP_MD
 * 
	g_md_m≠
 [
MUNGE_MAC_LAST_ITEM
];

339 
	$_md_öô_subsy°em
 ()

341 
i
;

343 
i
 = 0; i < 
MUNGE_MAC_LAST_ITEM
; i++) {

344 
_md_m≠
 [
i
] = 
NULL
;

346 
_md_m≠
 [
MUNGE_MAC_MD5
] = 
	`EVP_md5
 ();

347 
_md_m≠
 [
MUNGE_MAC_SHA1
] = 
	`EVP_sha1
 ();

348 
_md_m≠
 [
MUNGE_MAC_RIPEMD160
] = 
	`EVP_rùemd160
 ();

350 #i‡
HAVE_EVP_SHA256


351 
_md_m≠
 [
MUNGE_MAC_SHA256
] = 
	`EVP_sha256
 ();

354 #i‡
HAVE_EVP_SHA512


355 
_md_m≠
 [
MUNGE_MAC_SHA512
] = 
	`EVP_sha512
 ();

359 
	}
}

363 
	$_md_öô
 (
md_˘x
 *
x
, 
munge_mac_t
 
md
)

365 
EVP_MD
 *
Ægo
;

367 i‡(
	`_md_m≠_íum
 (
md
, &
Ægo
) < 0) {

370 #i‡
HAVE_EVP_DIGESTINIT_EX


371 
	`EVP_MD_CTX_öô
 (&(
x
->
˘x
));

372 i‡(!(
	`EVP_Dige°Inô_ex
 (&(
x
->
˘x
), 
Ægo
, 
NULL
))) {

376 
	`EVP_Dige°Inô
 (&(
x
->
˘x
), 
Ægo
);

378 
x
->
digÀn
 = 
	`EVP_MD_size
 (
Ægo
);

380 
	}
}

384 
	$_md_upd©e
 (
md_˘x
 *
x
, c⁄° *
§c
, 
§˛í
)

389 #i‡
HAVE_EVP_DIGESTINIT_EX


390 i‡(!(
	`EVP_Dige°Upd©e
 (&(
x
->
˘x
), 
§c
, (Ë
§˛í
))) {

394 
	`EVP_Dige°Upd©e
 (&(
x
->
˘x
), 
§c
, (Ë
§˛í
);

397 
	}
}

401 
	$_md_föÆ
 (
md_˘x
 *
x
, *
d°
, *
d°Àn
)

403 i‡(*
d°Àn
 < 
x
->
digÀn
) {

406 #i‡
HAVE_EVP_DIGESTINIT_EX


407 i‡(!(
	`EVP_Dige°FöÆ_ex
 (&(
x
->
˘x
), 
d°
, (*Ë
d°Àn
))) {

411 
	`EVP_Dige°FöÆ
 (&(
x
->
˘x
), 
d°
, (*Ë
d°Àn
);

414 
	}
}

418 
	$_md_˛ónup
 (
md_˘x
 *
x
)

420 #i‡
HAVE_EVP_DIGESTINIT_EX


421 i‡(!(
	`EVP_MD_CTX_˛ónup
 (&(
x
->
˘x
)))) {

426 
	}
}

430 
	$_md_c›y
 (
md_˘x
 *
xd°
, md_˘x *
x§c
)

432 #i‡
HAVE_EVP_DIGESTINIT_EX


433 
	`EVP_MD_CTX_öô
 (&(
xd°
->
˘x
));

434 i‡(!(
	`EVP_MD_CTX_c›y_ex
 (&(
xd°
->
˘x
), &(
x§c
->ctx)))) {

438 i‡(!(
	`EVP_MD_CTX_c›y
 (&(
xd°
->
˘x
), &(
x§c
->ctx)))) {

443 
	}
}

447 
	$_md_size
 (
munge_mac_t
 
md
)

449 
EVP_MD
 *
Ægo
;

451 i‡(
	`_md_m≠_íum
 (
md
, &
Ægo
) < 0) {

454  (
	`EVP_MD_size
 (
Ægo
));

455 
	}
}

459 
	$_md_m≠_íum
 (
munge_mac_t
 
md
, *
d°
)

461 c⁄° 
EVP_MD
 *
Ægo
 = 
NULL
;

463 i‡((
md
 > 
MUNGE_MAC_DEFAULT
Ë&& (md < 
MUNGE_MAC_LAST_ITEM
)) {

464 
Ægo
 = 
_md_m≠
 [
md
];

466 i‡(
Ægo
 =
NULL
) {

469 i‡(
d°
 !
NULL
) {

470 * (c⁄° 
EVP_MD
 **Ë
d°
 = 
Ægo
;

473 
	}
}

	@src/munged/md.h

29 #i‚de‡
MD_H


30 
	#MD_H


	)

33 #i‡
HAVE_CONFIG_H


34 
	~<c⁄fig.h
>

37 
	~<munge.h
>

44 #i‡
HAVE_LIBGCRYPT


46 
	~<g¸y±.h
>

49 
g¸y_md_hd_t
 
	m˘x
;

50 
	mdigÀn
;

51 #i‚de‡
NDEBUG


52 
	mmagic
;

53 
	mföÆized
;

55 } 
	tmd_˘x
;

60 #i‡
HAVE_OPENSSL


62 
	~<›ís¶/evp.h
>

65 
EVP_MD_CTX
 
	m˘x
;

66 
	mdigÀn
;

67 #i‚de‡
NDEBUG


68 
	mmagic
;

69 
	mföÆized
;

71 } 
	tmd_˘x
;

80 
md_öô_subsy°em
 ();

86 
md_öô
 (
md_˘x
 *
x
, 
munge_mac_t
 
md
);

92 
md_upd©e
 (
md_˘x
 *
x
, c⁄° *
§c
, 
§˛í
);

99 
md_föÆ
 (
md_˘x
 *
x
, *
d°
, *
d°Àn
);

109 
md_˛ónup
 (
md_˘x
 *
x
);

115 
md_c›y
 (
md_˘x
 *
xd°
, md_˘x *
x§c
);

123 
md_size
 (
munge_mac_t
 
md
);

128 
md_m≠_íum
 (
munge_mac_t
 
md
, *
d°
);

	@src/munged/munged.c

29 #i‡
HAVE_CONFIG_H


30 
	~"c⁄fig.h
"

33 
	~<as£π.h
>

34 
	~<î∫o.h
>

35 
	~<f˙é.h
>

36 
	~<munge.h
>

37 
	~<sig«l.h
>

38 
	~<°dlib.h
>

39 
	~<°rög.h
>

40 #i‡
HAVE_MLOCKALL


41 
	~<sys/mm™.h
>

43 
	~<sys/time.h
>

44 
	~<sys/ªsour˚.h
>

45 
	~<sys/sockë.h
>

46 
	~<sys/°©.h
>

47 
	~<sys/ty≥s.h
>

48 
	~<sys/un.h
>

49 
	~<uni°d.h
>

50 
	~"auth_ªcv.h
"

51 
	~"comm⁄.h
"

52 
	~"c⁄f.h
"

53 
	~"¸y±o.h
"

54 
	~"gids.h
"

55 
	~"job.h
"

56 
	~"log.h
"

57 
	~"missög.h
"

58 
	~"munge_defs.h
"

59 
	~"∑th.h
"

60 
	~"posig«l.h
"

61 
	~"øndom.h
"

62 
	~"ª∂ay.h
"

63 
	~"°r.h
"

64 
	~"timî.h
"

71 
dißbÀ_c‹e_dumps
 ();

72 
d´m⁄ize_öô
 (*
¥og«me
);

73 
d´m⁄ize_föi
 (
fd
);

74 
›í_logfûe
 (c⁄° *
logfûe
, 
¥i‹ôy
, 
gŸ_f‹˚
);

75 
h™dÀ_sig«ls
 ();

76 
hup_h™dÀr
 (
signum
);

77 
exô_h™dÀr
 (
signum
);

78 
wrôe_pidfûe
 (c⁄° *
pidfûe
, 
gŸ_f‹˚
);

79 
lock_mem‹y
 ();

80 
sock_¸óã
 (
c⁄f_t
 
c⁄f
);

81 
sock_lock
 (
c⁄f_t
 
c⁄f
);

82 
£t_fûe_lock
 (
fd
);

83 
pid_t
 
is_fûe_locked
 (
fd
);

84 
sock_de°roy
 (
c⁄f_t
 
c⁄f
);

91 vﬁ©ûê
sig_©omic_t
 
	gd⁄e
 = 0;

99 
	$maö
 (
¨gc
, *
¨gv
[])

101 
fd
 = -1;

102 *
log_idítôy
 = 
¨gv
[0];

103 
log_¥i‹ôy
 = 
LOG_INFO
;

104 
log_›ti⁄s
 = 
LOG_OPT_PRIORITY
;

106 #i‚de‡
NDEBUG


107 
log_¥i‹ôy
 = 
LOG_DEBUG
;

108 
log_›ti⁄s
 |
LOG_OPT_TIMESTAMP
;

110 
	`log_›í_fûe
 (
°dîr
, 
log_idítôy
, 
log_¥i‹ôy
, 
log_›ti⁄s
);

112 
	`dißbÀ_c‹e_dumps
 ();

113 
c⁄f
 = 
	`¸óã_c⁄f
 ();

114 
	`∑r£_cmdlöe
 (
c⁄f
, 
¨gc
, 
¨gv
);

115 
	`auth_ªcv_öô
 (
c⁄f
->
auth_£rvî_dú
, c⁄f->
auth_˛õ¡_dú
,

116 
c⁄f
->
gŸ_f‹˚
);

118 i‡(!
c⁄f
->
gŸ_f‹eground
) {

119 
fd
 = 
	`d´m⁄ize_öô
 (
¨gv
[0]);

120 i‡(
c⁄f
->
gŸ_sy¶og
) {

121 
	`log_›í_fûe
 (
NULL
, NULL, 0, 0);

122 
	`log_›í_sy¶og
 (
log_idítôy
, 
LOG_DAEMON
);

125 
	`›í_logfûe
 (
c⁄f
->
logfûe_«me
, 
log_¥i‹ôy
, c⁄f->
gŸ_f‹˚
);

128 
	`h™dÀ_sig«ls
 ();

129 
	`lookup_ù_addr
 (
c⁄f
);

130 
	`wrôe_pidfûe
 (
c⁄f
->
pidfûe_«me
, c⁄f->
gŸ_f‹˚
);

131 i‡(
c⁄f
->
gŸ_mlockÆl
) {

132 
	`lock_mem‹y
 ();

134 
	`¸y±o_öô
 ();

135 i‡(
	`øndom_öô
 (
c⁄f
->
£ed_«me
) < 0) {

136 i‡(
c⁄f
->
£ed_«me
) {

137 
	`‰ì
 (
c⁄f
->
£ed_«me
);

138 
c⁄f
->
£ed_«me
 = 
NULL
;

141 
	`¸óã_subkeys
 (
c⁄f
);

142 
c⁄f
->
gids
 = 
	`gids_¸óã
 (c⁄f->
gids_upd©e_£cs
, c⁄f->
gŸ_group_°©
);

143 
	`ª∂ay_öô
 ();

144 
	`timî_öô
 ();

145 
	`sock_¸óã
 (
c⁄f
);

147 i‡(!
c⁄f
->
gŸ_f‹eground
) {

148 
	`d´m⁄ize_föi
 (
fd
);

150 
	`log_msg
 (
LOG_NOTICE
, "Starting %s daemon (pid %d)",

151 
META_ALIAS
, (Ë
	`gëpid
 ());

153 
	`job_ac˚±
 (
c⁄f
);

155 
	`sock_de°roy
 (
c⁄f
);

156 
	`timî_föi
 ();

157 
	`ª∂ay_föi
 ();

158 
	`gids_de°roy
 (
c⁄f
->
gids
);

159 
	`øndom_föi
 (
c⁄f
->
£ed_«me
);

160 
	`¸y±o_föi
 ();

161 
	`de°roy_c⁄f
 (
c⁄f
);

163 
	`log_msg
 (
LOG_NOTICE
, "Stopping %s daemon (pid %d)",

164 
META_ALIAS
, (Ë
	`gëpid
 ());

166 
	`exô
 (
EMUNGE_SUCCESS
);

167 
	}
}

171 
	$dißbÀ_c‹e_dumps
 ()

175 #ifde‡
NDEBUG


176 
æimô
 
limô
;

178 
limô
.
æim_cur
 = 0;

179 
limô
.
æim_max
 = 0;

180 i‡(
	`£ålimô
 (
RLIMIT_CORE
, &
limô
) < 0) {

181 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

186 
	}
}

190 
	$d´m⁄ize_öô
 (*
¥og«me
)

197 
fds
 [2];

198 
pid_t
 
pid
;

199 
n
;

200 sig√d 
¥i‹ôy
;

201 
ebuf
 [1024];

205 
	`umask
 (0);

212 i‡(
	`pùe
 (
fds
) < 0) {

213 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
, "FailedÅo create daemonÖipe");

217 
	`log_£t_îr_pùe
 (
fds
[1]);

222 i‡((
pid
 = 
	`f‹k
 ()) < 0) {

223 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
, "FailedÅo create childÖrocess");

225 i‡(
pid
 > 0) {

226 
	`log_£t_îr_pùe
 (-1);

227 i‡(
	`˛o£
 (
fds
[1]) < 0) {

228 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

231 i‡((
n
 = 
	`ªad
 (
fds
[0], &
¥i‹ôy
,  (priority))) < 0) {

232 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

235 i‡((
n
 > 0Ë&& (
¥i‹ôy
 >= 0)) {

236 i‡((
n
 = 
	`ªad
 (
fds
[0], 
ebuf
,  (ebuf))) < 0) {

237 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

240 i‡((
n
 > 0Ë&& (
ebuf
[0] != '\0')) {

241 
	`log_›í_fûe
 (
°dîr
, 
¥og«me
, 
¥i‹ôy
, 
LOG_OPT_PRIORITY
);

242 
	`log_msg
 (
¥i‹ôy
, "%s", 
ebuf
);

244 
	`exô
 (
EXIT_FAILURE
);

246 
	`exô
 (
EXIT_SUCCESS
);

248 i‡(
	`˛o£
 (
fds
[0]) < 0) {

249 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

255 i‡(
	`£tsid
 () < 0) {

256 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

262 i‡(
	`posig«l
 (
SIGHUP
, 
SIG_IGN
Ë=
SIG_ERR
) {

263 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
, "FaûedÅÿign‹êsig«l=%d", 
SIGHUP
);

268 i‡((
pid
 = 
	`f‹k
 ()) < 0) {

269 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

272 i‡(
pid
 > 0) {

273 
	`exô
 (
EXIT_SUCCESS
);

275  (
fds
[1]);

276 
	}
}

280 
	$d´m⁄ize_föi
 (
fd
)

285 
dev_nuŒ
;

290 i‡(
	`chdú
 ("/") < 0) {

291 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

296 i‡((
dev_nuŒ
 = 
	`›í
 ("/dev/nuŒ", 
O_RDWR
)) < 0) {

297 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
, "FailedÅo open \"/dev/null\"");

299 i‡(
	`dup2
 (
dev_nuŒ
, 
STDIN_FILENO
) < 0) {

300 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

303 i‡(
	`dup2
 (
dev_nuŒ
, 
STDOUT_FILENO
) < 0) {

304 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

307 i‡(
	`dup2
 (
dev_nuŒ
, 
STDERR_FILENO
) < 0) {

308 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

311 i‡(
	`˛o£
 (
dev_nuŒ
) < 0) {

312 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
, "FailedÅo close \"/dev/null\"");

316 
	`log_£t_îr_pùe
 (-1);

320 i‡((
fd
 >0Ë&& (
	`˛o£
 (fd) < 0)) {

321 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

325 
	}
}

329 
	$›í_logfûe
 (c⁄° *
logfûe
, 
¥i‹ôy
, 
gŸ_f‹˚
)

331 
gŸ_symlök
;

332 
°©
 
°
;

333 
n
;

334 
logdú
 [
PATH_MAX
];

335 
ebuf
 [1024];

336 
mode_t
 
mask
;

337 
FILE
 *
Â
;

341 
gŸ_symlök
 = (
	`l°©
 (
logfûe
, &
°
Ë=0Ë? 
	`S_ISLNK
 (°.
°_mode
) : 0;

343 i‡(((
n
 = 
	`°©
 (
logfûe
, &
°
)Ë< 0Ë&& (
î∫o
 =
ENOENT
)) {

344 i‡(!
gŸ_symlök
) {

347 i‡(!
gŸ_f‹˚
) {

348 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

350 
logfûe
);

353 
	`log_msg
 (
LOG_WARNING
,

355 
logfûe
);

359 i‡(
n
 < 0) {

360 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

361 "FaûedÅÿcheckÜogfûê\"%s\"", 
logfûe
);

363 i‡(!
	`S_ISREG
 (
°
.
°_mode
Ë|| 
gŸ_symlök
) {

364 i‡(!
gŸ_f‹˚
 || !
gŸ_symlök
)

365 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

367 
logfûe
);

369 
	`log_msg
 (
LOG_WARNING
,

371 
logfûe
);

373 i‡(
°
.
°_uid
 !
	`gëeuid
 ()) {

374 i‡(!
gŸ_f‹˚
)

375 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

377 
logfûe
, (Ë
	`gëeuid
 ());

379 
	`log_msg
 (
LOG_WARNING
,

381 
logfûe
, (Ë
	`gëeuid
 ());

383 i‡(
°
.
°_mode
 & (
S_IWGRP
 | 
S_IWOTH
)) {

384 i‡(!
gŸ_f‹˚
)

385 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

387 "by grou∞‹ w‹ld", 
logfûe
);

389 
	`log_msg
 (
LOG_WARNING
,

391 "by grou∞‹ w‹ld", 
logfûe
);

396 i‡(
	`∑th_dú«me
 (
logfûe
, 
logdú
,  (logdir)) < 0) {

397 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

398 "FaûedÅÿdëîmöêdú«mêo‡logfûê\"%s\"", 
logfûe
);

400 
n
 = 
	`∑th_is_£cuª
 (
logdú
, 
ebuf
,  (ebuf));

401 i‡(
n
 < 0) {

402 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

403 "FaûedÅÿcheckÜogfûêdú \"%s\": %s", 
logdú
, 
ebuf
);

405 i‡((
n
 =0Ë&& (!
gŸ_f‹˚
)) {

406 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
, "Logfûêi†ö£cuª: %s", 
ebuf
);

408 i‡(
n
 == 0) {

409 
	`log_msg
 (
LOG_WARNING
, "Logfûêi†ö£cuª: %s", 
ebuf
);

414 
mask
 = 
	`umask
 (0);

415 
	`umask
 (
mask
 | 027);

416 
Â
 = 
	`f›í
 (
logfûe
, "a");

417 
	`umask
 (
mask
);

419 i‡(!
Â
) {

420 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

421 "FaûedÅÿ›íÜogfûê\"%s\"", 
logfûe
);

423 
	`log_›í_fûe
 (
Â
, 
NULL
, 
¥i‹ôy
,

424 
LOG_OPT_JUSTIFY
 | 
LOG_OPT_PRIORITY
 | 
LOG_OPT_TIMESTAMP
);

426 
	}
}

430 
	$h™dÀ_sig«ls
 ()

432 i‡(
	`posig«l
 (
SIGHUP
, 
hup_h™dÀr
Ë=
SIG_ERR
) {

433 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
, "FaûedÅÿh™dÀ sig«l=%d", 
SIGHUP
);

435 i‡(
	`posig«l
 (
SIGINT
, 
exô_h™dÀr
Ë=
SIG_ERR
) {

436 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
, "FaûedÅÿh™dÀ sig«l=%d", 
SIGINT
);

438 i‡(
	`posig«l
 (
SIGTERM
, 
exô_h™dÀr
Ë=
SIG_ERR
) {

439 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
, "FaûedÅÿh™dÀ sig«l=%d", 
SIGTERM
);

441 i‡(
	`posig«l
 (
SIGPIPE
, 
SIG_IGN
Ë=
SIG_ERR
) {

442 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
, "FaûedÅÿign‹êsig«l=%d", 
SIGPIPE
);

445 
	}
}

449 
	$hup_h™dÀr
 (
signum
)

451 i‡(
c⁄f
) {

452 
	`gids_upd©e
 (
c⁄f
->
gids
);

455 
	}
}

459 
	$exô_h™dÀr
 (
signum
)

461 i‡(!
d⁄e
) {

462 
d⁄e
 = 
signum
;

465 
	}
}

469 
	$wrôe_pidfûe
 (c⁄° *
pidfûe
, 
gŸ_f‹˚
)

474 
piddú
 [
PATH_MAX
];

475 
ebuf
 [1024];

476 
n
;

477 
mode_t
 
mask
;

478 
FILE
 *
Â
;

480 
	`as£π
 (
pidfûe
 !
NULL
);

486 i‡(
pidfûe
[0] != '/') {

487 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

488 "Pidfûê\"%s\"Ñequúe†™ábsﬁuãÖ©h", 
pidfûe
);

492 i‡(
	`∑th_dú«me
 (
pidfûe
, 
piddú
,  (piddir)) < 0) {

493 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

494 "FaûedÅÿdëîmöêdú«mêo‡pidfûê\"%s\"", 
pidfûe
);

496 
n
 = 
	`∑th_is_£cuª
 (
piddú
, 
ebuf
,  (ebuf));

497 i‡(
n
 < 0) {

498 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

499 "FaûedÅÿcheckÖidfûêdú \"%s\": %s", 
piddú
, 
ebuf
);

501 i‡((
n
 =0Ë&& (!
gŸ_f‹˚
)) {

502 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
, "Pidfûêi†ö£cuª: %s", 
ebuf
);

504 i‡(
n
 == 0) {

505 
	`log_msg
 (
LOG_WARNING
, "Pidfûêi†ö£cuª: %s", 
ebuf
);

510 
mask
 = 
	`umask
 (0);

511 
	`umask
 (
mask
 | 022);

512 (Ë
	`u∆ök
 (
pidfûe
);

513 
Â
 = 
	`f›í
 (
pidfûe
, "w");

514 
	`umask
 (
mask
);

518 i‡(!
Â
) {

519 
	`log_msg
 (
LOG_WARNING
, "FailedÅo openÖidfile \"%s\": %s",

520 
pidfûe
, 
	`°ªº‹
 (
î∫o
));

522 i‡(
	`Ârötf
 (
Â
, "%d\n", (Ë
	`gëpid
 ()Ë=
EOF
) {

523 
	`log_msg
 (
LOG_WARNING
, "FailedÅo writeÅoÖidfile \"%s\": %s",

524 
pidfûe
, 
	`°ªº‹
 (
î∫o
));

525 (Ë
	`f˛o£
 (
Â
);

527 i‡(
	`f˛o£
 (
Â
Ë=
EOF
) {

528 
	`log_msg
 (
LOG_WARNING
, "FailedÅo closeÖidfile \"%s\": %s",

529 
pidfûe
, 
	`°ªº‹
 (
î∫o
));

534 (Ë
	`u∆ök
 (
pidfûe
);

536 
	}
}

540 
	$lock_mem‹y
 ()

547 #i‡! 
HAVE_MLOCKALL


548 
î∫o
 = 
ENOSYS
;

549 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
, "FailedÅoÜockÖages in memory");

551 
rv
;

552 
i
 = 0;

553 c⁄° 
max_åõs
 = 10;

556 
i
++;

557 
rv
 = 
	`mlockÆl
 (
MCL_CURRENT
 | 
MCL_FUTURE
);

558 i‡(
rv
 == 0) {

561 i‡((
î∫o
 =
EAGAIN
Ë&& (
i
 < 
max_åõs
)) {

564 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
, "FailedÅoÜockÖages in memory");

566 
	`log_msg
 (
LOG_INFO
, "LockedállÖages in memory");

569 
	}
}

573 
	$sock_¸óã
 (
c⁄f_t
 
c⁄f
)

575 
sockdú
 [
PATH_MAX
];

576 
ebuf
 [1024];

577 
n
;

578 
sd
;

579 
sockaddr_un
 
addr
;

580 
mode_t
 
mask
;

581 
rv
;

583 
	`as£π
 (
c⁄f
 !
NULL
);

585 i‡((
c⁄f
->
sockë_«me
 =
NULL
) || (*conf->socket_name == '\0')) {

586 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
, "MUNGE socketÇame is undefined");

590 i‡(
	`∑th_dú«me
 (
c⁄f
->
sockë_«me
, 
sockdú
,  (sockdir)) < 0) {

591 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

592 "FaûedÅÿdëîmöêdú«mêo‡sockë \"%s\"", 
c⁄f
->
sockë_«me
);

594 
n
 = 
	`∑th_is_£cuª
 (
sockdú
, 
ebuf
,  (ebuf));

595 i‡(
n
 < 0) {

596 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

597 "FaûedÅÿcheck sockë dú \"%s\": %s", 
sockdú
, 
ebuf
);

599 i‡((
n
 =0Ë&& (!
c⁄f
->
gŸ_f‹˚
)) {

600 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
, "Sockë i†ö£cuª: %s", 
ebuf
);

602 i‡(
n
 == 0) {

603 
	`log_msg
 (
LOG_WARNING
, "Sockë i†ö£cuª: %s", 
ebuf
);

607 
n
 = 
	`∑th_is_ac˚ssibÀ
 (
sockdú
, 
ebuf
,  (ebuf));

608 i‡(
n
 < 0) {

609 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

610 "FaûedÅÿcheck sockë dú \"%s\": %s", 
sockdú
, 
ebuf
);

612 i‡((
n
 =0Ë&& (!
c⁄f
->
gŸ_f‹˚
)) {

613 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
, "Sockë i†öac˚ssibÀ: %s", 
ebuf
);

615 i‡(
n
 == 0) {

616 
	`log_msg
 (
LOG_WARNING
, "Sockë i†öac˚ssibÀ: %s", 
ebuf
);

620 
	`sock_lock
 (
c⁄f
);

624 i‡((
sd
 = 
	`sockë
 (
PF_UNIX
, 
SOCK_STREAM
, 0)) < 0) {

625 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
, "FailedÅo create socket");

627 
	`mem£t
 (&
addr
, 0,  (addr));

628 
addr
.
sun_Ámûy
 = 
AF_UNIX
;

629 
n
 = 
	`°æ˝y
 (
addr
.
sun_∑th
, 
c⁄f
->
sockë_«me
,  (addr.sun_path));

630 i‡(
n
 > (
addr
.
sun_∑th
)) {

631 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

636 
mask
 = 
	`umask
 (0);

637 
rv
 = 
	`böd
 (
sd
, (
sockaddr
 *Ë&
addr
,  (addr));

638 
	`umask
 (
mask
);

640 i‡(
rv
 < 0) {

641 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

642 "FaûedÅÿböd \"%s\"", 
c⁄f
->
sockë_«me
);

644 i‡(
	`li°í
 (
sd
, 
MUNGE_SOCKET_BACKLOG
) < 0) {

645 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

646 "FaûedÅÿli°í o¿\"%s\"", 
c⁄f
->
sockë_«me
);

648 
c⁄f
->
ld
 = 
sd
;

650 
	}
}

654 
	$sock_lock
 (
c⁄f_t
 
c⁄f
)

658 
°©
 
°
;

659 
mode_t
 
mask
;

660 
rv
;

662 
	`as£π
 (
c⁄f
 !
NULL
);

663 
	`as£π
 (
c⁄f
->
lockfûe_«me
 =
NULL
);

664 
	`as£π
 (
c⁄f
->
lockfûe_fd
 == -1);

665 
	`as£π
 (
c⁄f
->
sockë_«me
 !
NULL
);

667 i‡(!(
c⁄f
->
lockfûe_«me
 = 
	`°rdupf
 ("%s.lock", c⁄f->
sockë_«me
))) {

668 
	`log_î∫o
 (
EMUNGE_NO_MEMORY
, 
LOG_ERR
,

671 i‡(
c⁄f
->
gŸ_f‹˚
) {

672 i‡((
	`u∆ök
 (
c⁄f
->
lockfûe_«me
Ë< 0Ë&& (
î∫o
 !
ENOENT
)) {

673 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
, "FailedÅoÑemove \"%s\"",

674 
c⁄f
->
lockfûe_«me
);

677 i‡(
	`l°©
 (
c⁄f
->
lockfûe_«me
, &
°
) < 0) {

678 i‡(
î∫o
 !
ENOENT
) {

679 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
, "FailedÅo stat \"%s\"",

680 
c⁄f
->
lockfûe_«me
);

683 i‡(!
	`S_ISREG
(
°
.
°_mode
)) {

684 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

686 
c⁄f
->
lockfûe_«me
);

688 i‡(
°
.
°_uid
 !
	`gëeuid
()) {

689 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

691 
c⁄f
->
lockfûe_«me
, (Ë
	`gëeuid
());

693 i‡((
°
.
°_mode
 & 07777Ë!
S_IWUSR
) {

694 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

696 
c⁄f
->
lockfûe_«me
);

698 
mask
 = 
	`umask
 (0);

699 
c⁄f
->
lockfûe_fd
 = 
	`¸ót
 (c⁄f->
lockfûe_«me
, 
S_IWUSR
);

700 
	`umask
 (
mask
);

702 i‡(
c⁄f
->
lockfûe_fd
 < 0) {

703 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

704 "FaûedÅÿ¸óã \"%s\"", 
c⁄f
->
lockfûe_«me
);

706 i‡((
rv
 = 
	`£t_fûe_lock
 (
c⁄f
->
lockfûe_fd
)) < 0) {

707 i‡(!
c⁄f
->
gŸ_f‹˚
)

708 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

709 "FaûedÅÿlock \"%s\"", 
c⁄f
->
lockfûe_«me
);

711 
	`log_msg
 (
LOG_WARNING
,

712 "FaûedÅÿlock \"%s\"", 
c⁄f
->
lockfûe_«me
);

714 i‡(
rv
 > 0) {

716 
pid_t
 
pid
 = 
	`is_fûe_locked
 (
c⁄f
->
lockfûe_fd
);

718 i‡(
pid
 < 0) {

719 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

720 "FaûedÅÿã°Üock \"%s\"", 
c⁄f
->
lockfûe_«me
);

722 i‡(
pid
 > 0) {

723 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

724 "FoundÖid %d boundÅÿsockë \"%s\"", 
pid
, 
c⁄f
->
sockë_«me
);

727 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

729 
c⁄f
->
lockfûe_«me
);

732 i‡(
	`u∆ök
 (
c⁄f
->
sockë_«me
) == 0) {

733 
	`log_msg
 (
LOG_INFO
, "RemovedÉxisting socket \"%s\"",

734 
c⁄f
->
sockë_«me
);

736 i‡(
î∫o
 !
ENOENT
) {

737 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
, "FailedÅoÑemove \"%s\"",

738 
c⁄f
->
sockë_«me
);

741 
	}
}

745 
	$£t_fûe_lock
 (
fd
)

751 
Êock
 
Ê
;

752 
rv
;

754 i‡(
fd
 < 0) {

755 
î∫o
 = 
EBADF
;

758 
Ê
.
l_ty≥
 = 
F_WRLCK
;

759 
Ê
.
l_whí˚
 = 
SEEK_SET
;

760 
Ê
.
l_°¨t
 = 0;

761 
Ê
.
l_Àn
 = 0;

763 
rv
 = 
	`f˙é
 (
fd
, 
F_SETLK
, &
Ê
);

764 i‡(
rv
 < 0) {

765 i‡((
î∫o
 =
EACCES
Ë|| (î∫ÿ=
EAGAIN
)) {

771 
	}
}

774 
pid_t


775 
	$is_fûe_locked
 (
fd
)

782 
Êock
 
Ê
;

783 
rv
;

785 i‡(
fd
 < 0) {

786 
î∫o
 = 
EBADF
;

789 
Ê
.
l_ty≥
 = 
F_WRLCK
;

790 
Ê
.
l_whí˚
 = 
SEEK_SET
;

791 
Ê
.
l_°¨t
 = 0;

792 
Ê
.
l_Àn
 = 0;

794 
rv
 = 
	`f˙é
 (
fd
, 
F_GETLK
, &
Ê
);

795 i‡(
rv
 < 0) {

798 i‡(
Ê
.
l_ty≥
 =
F_UNLCK
) {

801  (
Ê
.
l_pid
);

802 
	}
}

806 
	$sock_de°roy
 (
c⁄f_t
 
c⁄f
)

808 
	`as£π
 (
c⁄f
 !
NULL
);

809 
	`as£π
 (
c⁄f
->
ld
 >= 0);

810 
	`as£π
 (
c⁄f
->
sockë_«me
 !
NULL
);

812 i‡(
c⁄f
->
sockë_«me
) {

813 i‡(
	`u∆ök
 (
c⁄f
->
sockë_«me
) < 0) {

814 
	`log_msg
 (
LOG_WARNING
, "FailedÅoÑemove \"%s\": %s",

815 
c⁄f
->
sockë_«me
, 
	`°ªº‹
 (
î∫o
));

818 i‡(
c⁄f
->
ld
 >= 0) {

819 i‡(
	`˛o£
 (
c⁄f
->
ld
) < 0) {

820 
	`log_msg
 (
LOG_WARNING
, "FailedÅo close \"%s\": %s",

821 
c⁄f
->
ld
, 
	`°ªº‹
 (
î∫o
));

823 
c⁄f
->
ld
 = -1;

825 i‡(
c⁄f
->
lockfûe_«me
) {

826 i‡(
	`u∆ök
 (
c⁄f
->
lockfûe_«me
) < 0) {

827 
	`log_msg
 (
LOG_WARNING
, "FailedÅoÑemove \"%s\": %s",

828 
c⁄f
->
lockfûe_«me
, 
	`°ªº‹
 (
î∫o
));

831 i‡(
c⁄f
->
lockfûe_fd
 >= 0) {

832 i‡(
	`˛o£
 (
c⁄f
->
lockfûe_fd
) < 0) {

833 
	`log_msg
 (
LOG_WARNING
, "FailedÅo close \"%s\": %s",

834 
c⁄f
->
lockfûe_fd
, 
	`°ªº‹
 (
î∫o
));

836 
c⁄f
->
lockfûe_fd
 = -1;

839 
	}
}

	@src/munged/path.c

31 #i‡
HAVE_CONFIG_H


32 
	~"c⁄fig.h
"

35 
	~<î∫o.h
>

36 
	~<limôs.h
>

37 
	~<°d¨g.h
>

38 
	~<°dio.h
>

39 
	~<°dlib.h
>

40 
	~<°rög.h
>

41 
	~<sys/°©.h
>

42 
	~<uni°d.h
>

43 
	~"∑th.h
"

44 
	~"°æ˝y.h
"

51 
_∑th_£t_îr
 (
rc
, *
buf
, 
size_t
 
buÊí
,

52 c⁄° *
f‹m©
, ...);

60 
	$∑th_ˇn⁄iˇlize
 (c⁄° *
§c
, *
d°
, 
d°Àn
)

62 
buf
 [
PATH_MAX
];

63 
n
 = 0;

65 i‡(!
§c
 || !*src) {

66 
î∫o
 = 
EINVAL
;

69 i‡(!
	`ªÆ∑th
 (
§c
, 
buf
)) {

72 i‡(
buf
[0] != '/') {

73 
î∫o
 = 
EINVAL
;

76 i‡((
d°
 !
NULL
Ë&& (
d°Àn
 > 0)) {

77 
n
 = 
	`°æ˝y
 (
d°
, 
buf
, 
d°Àn
);

79  (
n
);

80 
	}
}

84 
	$∑th_dú«me
 (c⁄° *
§c
, *
d°
, 
size_t
 
d°Àn
)

86 *
p
 = 
NULL
;

87 íum { 
°¨t
, 
œ°_¶ash
, 
œ°_w‹d
, 
¥ev_¶ash
 } 
°©e
 = start;

89 i‡((
§c
 =
NULL
Ë|| (
d°
 =NULLË|| (
d°Àn
 <= 1)) {

90 
î∫o
 = 
EINVAL
;

93 i‡(
	`°æ˝y
 (
d°
, 
§c
, 
d°Àn
) >= dstlen) {

94 
î∫o
 = 
ENAMETOOLONG
;

97 
p
 = 
d°
 + 
	`°æí
 (dst) - 1;Ö >= dst;Ö--) {

98 i‡(
°©e
 =
°¨t
) {

99 
°©e
 = (*
p
 ='/'Ë? 
œ°_¶ash
 : 
œ°_w‹d
;

101 i‡(
°©e
 =
œ°_¶ash
) {

102 i‡(*
p
 !'/'Ë
°©e
 = 
œ°_w‹d
;

104 i‡(
°©e
 =
œ°_w‹d
) {

105 i‡(*
p
 ='/'Ë
°©e
 = 
¥ev_¶ash
;

107 i‡(
°©e
 =
¥ev_¶ash
) {

108 i‡(*
p
 != '/') ;

110 *
p
 = '\0';

112 i‡(
p
 < 
d°
) {

113 
d°
[0] = (
°©e
 =
¥ev_¶ash
 || sèã =
œ°_¶ash
) ? '/' : '.';

114 
d°
[1] = '\0';

117 
	}
}

121 
	$∑th_is_ac˚ssibÀ
 (c⁄° *
∑th
, *
îrbuf
, 
size_t
 
îrbuÊí
)

123 
n
;

124 
buf
 [
PATH_MAX
];

125 
°©
 
°
;

126 *
p
;

128 
n
 = 
	`∑th_ˇn⁄iˇlize
 (
∑th
, 
buf
,  (buf));

129 i‡(
n
 < 0) {

130  (
	`_∑th_£t_îr
 (-1, 
îrbuf
, 
îrbuÊí
,

131 "ˇ¬Ÿ c™⁄iˇlizê\"%s\": %s", 
∑th
, 
	`°ªº‹
 (
î∫o
)));

133 i‡(
n
 > (
buf
)) {

134 
î∫o
 = 
ENAMETOOLONG
;

135  (
	`_∑th_£t_îr
 (-1, 
îrbuf
, 
îrbuÊí
,

136 "ˇ¬Ÿ c™⁄iˇlizê\"%s\":Éx˚eded maxÖ©hÜígth", 
∑th
));

138 i‡(
	`l°©
 (
buf
, &
°
) < 0) {

139  (
	`_∑th_£t_îr
 (-1, 
îrbuf
, 
îrbuÊí
,

140 "ˇ¬Ÿ sèà\"%s\": %s", 
buf
, 
	`°ªº‹
 (
î∫o
)));

142 i‡(!
	`S_ISDIR
 (
°
.
°_mode
)) {

143 i‡((
p
 = 
	`°ºchr
 (
buf
, '/'))) {

144 *
p
 = '\0';

147 
buf
[0] != '\0') {

148 i‡(
	`l°©
 (
buf
, &
°
) < 0) {

149  (
	`_∑th_£t_îr
 (-1, 
îrbuf
, 
îrbuÊí
,

150 "ˇ¬Ÿ sèà\"%s\": %s", 
buf
, 
	`°ªº‹
 (
î∫o
)));

152 i‡(!
	`S_ISDIR
 (
°
.
°_mode
)) {

153 
î∫o
 = 
EINVAL
;

154  (
	`_∑th_£t_îr
 (-1, 
îrbuf
, 
îrbuÊí
,

155 "ˇ¬Ÿ check \"%s\": u√x≥˘ed fûêty≥", 
buf
));

157 i‡((
°
.
°_mode
 & (
S_IXUSR
 | 
S_IXGRP
 | 
S_IXOTH
))

158 !(
S_IXUSR
 | 
S_IXGRP
 | 
S_IXOTH
)) {

159  (
	`_∑th_£t_îr
 (0, 
îrbuf
, 
îrbuÊí
,

160 "execuãÖîmissi⁄†f‹áŒÑequúed o¿\"%s\"", 
buf
));

162 i‡(!(
p
 = 
	`°ºchr
 (
buf
, '/'))) {

163 
î∫o
 = 
EINVAL
;

164  (
	`_∑th_£t_îr
 (-1, 
îrbuf
, 
îrbuÊí
,

165 "ˇ¬Ÿ check \"%s\": i¡î«»îr‹", 
buf
));

167 i‡((
p
 =
buf
) && (buf[1] != '\0')) {

168 
p
++;

170 *
p
 = '\0';

173 
	}
}

177 
	$∑th_is_£cuª
 (c⁄° *
∑th
, *
îrbuf
, 
size_t
 
îrbuÊí
)

179 
n
;

180 
buf
 [
PATH_MAX
];

181 
°©
 
°
;

182 *
p
;

183 
uid_t
 
euid
;

185 
n
 = 
	`∑th_ˇn⁄iˇlize
 (
∑th
, 
buf
,  (buf));

186 i‡(
n
 < 0) {

187  (
	`_∑th_£t_îr
 (-1, 
îrbuf
, 
îrbuÊí
,

188 "ˇ¬Ÿ c™⁄iˇlizê\"%s\": %s", 
∑th
, 
	`°ªº‹
 (
î∫o
)));

190 i‡(
n
 > (
buf
)) {

191 
î∫o
 = 
ENAMETOOLONG
;

192  (
	`_∑th_£t_îr
 (-1, 
îrbuf
, 
îrbuÊí
,

193 "ˇ¬Ÿ c™⁄iˇlizê\"%s\":Éx˚eded maxÖ©hÜígth", 
∑th
));

195 i‡(
	`l°©
 (
buf
, &
°
) < 0) {

196  (
	`_∑th_£t_îr
 (-1, 
îrbuf
, 
îrbuÊí
,

197 "ˇ¬Ÿ sèà\"%s\": %s", 
buf
, 
	`°ªº‹
 (
î∫o
)));

199 i‡(!
	`S_ISDIR
 (
°
.
°_mode
)) {

200 i‡((
p
 = 
	`°ºchr
 (
buf
, '/'))) {

201 *
p
 = '\0';

204 
euid
 = 
	`gëeuid
 ();

206 
buf
[0] != '\0') {

207 i‡(
	`l°©
 (
buf
, &
°
) < 0) {

208  (
	`_∑th_£t_îr
 (-1, 
îrbuf
, 
îrbuÊí
,

209 "ˇ¬Ÿ sèà\"%s\": %s", 
buf
, 
	`°ªº‹
 (
î∫o
)));

211 i‡(!
	`S_ISDIR
 (
°
.
°_mode
)) {

212 
î∫o
 = 
EINVAL
;

213  (
	`_∑th_£t_îr
 (-1, 
îrbuf
, 
îrbuÊí
,

214 "ˇ¬Ÿ check \"%s\": u√x≥˘ed fûêty≥", 
buf
));

216 i‡((
°
.
°_uid
 !0Ë&& (°.°_uid !
euid
)) {

217  (
	`_∑th_£t_îr
 (0, 
îrbuf
, 
îrbuÊí
,

218 "övÆid ow√rshù o‡\"%s\"", 
buf
));

220 i‡((
°
.
°_mode
 & 
S_IWGRP
Ë&& !(°.°_modê& 
S_ISVTX
)) {

221  (
	`_∑th_£t_îr
 (0, 
îrbuf
, 
îrbuÊí
,

222 "group-wrôabÀÖîmissi⁄†£à⁄ \"%s\"", 
buf
));

224 i‡((
°
.
°_mode
 & 
S_IWOTH
Ë&& !(°.°_modê& 
S_ISVTX
)) {

225  (
	`_∑th_£t_îr
 (0, 
îrbuf
, 
îrbuÊí
,

226 "w‹ld-wrôabÀÖîmissi⁄†£à⁄ \"%s\"", 
buf
));

228 i‡(!(
p
 = 
	`°ºchr
 (
buf
, '/'))) {

229 
î∫o
 = 
EINVAL
;

230  (
	`_∑th_£t_îr
 (-1, 
îrbuf
, 
îrbuÊí
,

231 "ˇ¬Ÿ check \"%s\": i¡î«»îr‹", 
buf
));

233 i‡((
p
 =
buf
) && (buf[1] != '\0')) {

234 
p
++;

236 *
p
 = '\0';

239 
	}
}

247 
	$_∑th_£t_îr
 (
rc
, *
buf
, 
size_t
 
buÊí
, c⁄° *
f‹m©
, ...)

254 
va_li°
 
v¨gs
;

256 i‡((
buf
 !
NULL
Ë&& (
buÊí
 > 0)) {

257 
	`va_°¨t
 (
v¨gs
, 
f‹m©
);

258 (Ë
	`v¢¥ötf
 (
buf
, 
buÊí
, 
f‹m©
, 
v¨gs
);

259 
buf
 [
buÊí
 - 1] = '\0';

260 
	`va_íd
 (
v¨gs
);

262  (
rc
);

263 
	}
}

	@src/munged/path.h

29 #i‚de‡
PATH_H


30 
	#PATH_H


	)

33 #i‡
HAVE_CONFIG_H


34 
	~"c⁄fig.h
"

37 
	~<limôs.h
>

38 
	~<uni°d.h
>

40 #i‚de‡
PATH_MAX


41 
	#PATH_MAX
 4096

	)

45 
∑th_ˇn⁄iˇlize
 (c⁄° *
§c
, *
d°
, 
d°Àn
);

56 
∑th_dú«me
 (c⁄° *
§c
, *
d°
, 
size_t
 
d°Àn
);

64 
∑th_is_ac˚ssibÀ
 (c⁄° *
∑th
, *
îrbuf
, 
size_t
 
îrbuÊí
);

73 
∑th_is_£cuª
 (c⁄° *
∑th
, *
îrbuf
, 
size_t
 
îrbuÊí
);

	@src/munged/random.c

29 #i‡
HAVE_CONFIG_H


30 
	~<c⁄fig.h
>

33 
	~<î∫o.h
>

34 
	~<f˙é.h
>

35 
	~<munge.h
>

36 
	~<°rög.h
>

37 
	~<sys/°©.h
>

38 
	~<sys/time.h
>

39 
	~<uni°d.h
>

40 
	~"comm⁄.h
"

41 
	~"c⁄f.h
"

42 
	~"¸y±o.h
"

43 
	~"log.h
"

44 
	~"munge_defs.h
"

45 
	~"∑th.h
"

46 
	~"øndom.h
"

47 
	~"timî.h
"

54 #i‚de‡
RANDOM_SEED_BYTES


55 
	#RANDOM_SEED_BYTES
 1024

	)

58 #i‚de‡
RANDOM_SEED_DEVICE


59 
	#RANDOM_SEED_DEVICE
 "/dev/uøndom"

	)

62 #i‚de‡
RANDOM_SEED_STIR_BYTES


63 
	#RANDOM_SEED_STIR_BYTES
 16

	)

66 #i‚de‡
RANDOM_SEED_STIR_MAX_SECS


67 
	#RANDOM_SEED_STIR_MAX_SECS
 3600

	)

70 #i‚de‡
RANDOM_SEED_STIR_MIN_SECS


71 
	#RANDOM_SEED_STIR_MIN_SECS
 1

	)

79 
	g_øndom_timî_id
 = 0;

86 
_øndom_ªad_£ed
 (c⁄° *
fûíame
, 
num_byãs
);

87 
_øndom_wrôe_£ed
 (c⁄° *
fûíame
, 
num_byãs
);

88 
_øndom_˛ónup
 ();

89 
_øndom_add
 (c⁄° *
buf
, 
n
);

90 
_øndom_byãs
 (*
buf
, 
n
);

91 
_øndom_p£udo_byãs
 (*
buf
, 
n
);

92 
_øndom_£ed_°ú_ˇŒback
 (*
_¨g_nŸ_u£d_
);

100 
	$øndom_öô
 (c⁄° *
£ed
)

102 
∫d_byãs_√eded
 = 
RANDOM_SEED_BYTES
;

103 
rc
 = 0;

104 
do_u∆ök
 = 1;

105 
gŸ_symlök
;

106 
°©
 
°
;

107 
n
;

108 
£ed_dú
 [
PATH_MAX
];

109 
ebuf
 [1024];

113 i‡((
∫d_byãs_√eded
 > 0Ë&& (
£ed
 !
NULL
) && (*seed != '\0')) {

117 
gŸ_symlök
 = (
	`l°©
 (
£ed
, &
°
Ë=0Ë? 
	`S_ISLNK
 (°.
°_mode
) : 0;

119 i‡(((
n
 = 
	`°©
 (
£ed
, &
°
)Ë< 0Ë&& (
î∫o
 =
ENOENT
)) {

120 i‡(!
gŸ_symlök
) {

121 
do_u∆ök
 = 0;

124 i‡(
n
 < 0) {

125 
	`log_msg
 (
LOG_WARNING
,

126 "Ign‹ög PRNG sìd \"%s\": %s", 
£ed
, 
	`°ªº‹
 (
î∫o
));

128 i‡(!
	`S_ISREG
 (
°
.
°_mode
Ë|| 
gŸ_symlök
) {

129 
	`log_msg
 (
LOG_WARNING
,

130 "Ign‹ög PRNG sìd \"%s\":ÇŸáÑeguœ∏fûe", 
£ed
);

132 i‡(
°
.
°_uid
 !
	`gëeuid
 ()) {

133 
	`log_msg
 (
LOG_WARNING
,

135 
£ed
, (Ë
	`gëeuid
 ());

137 i‡(
°
.
°_mode
 & (
S_IRGRP
 | 
S_IWGRP
 | 
S_IROTH
 | 
S_IWOTH
)) {

138 
	`log_msg
 (
LOG_WARNING
,

140 "ˇ¬Ÿ bêªadabÀ o∏wrôabÀ by grou∞‹ w‹ld", 
£ed
);

143 
do_u∆ök
 = 0;

147 i‡(
	`∑th_dú«me
 (
£ed
, 
£ed_dú
,  (seed_dir)) < 0) {

148 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

149 "FaûedÅÿdëîmöêdú«mêo‡PRNG sìd \"%s\"", 
£ed
);

151 
n
 = 
	`∑th_is_£cuª
 (
£ed_dú
, 
ebuf
,  (ebuf));

152 i‡(
n
 < 0) {

153 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

154 "FaûedÅÿcheck PRNG sìd dú \"%s\": %s", 
£ed_dú
, 
ebuf
);

156 i‡((
n
 =0Ë&& (!
c⁄f
->
gŸ_f‹˚
)) {

157 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

158 "PRNG sìd dú i†ö£cuª: %s", 
ebuf
);

160 i‡(
n
 == 0) {

161 
	`log_msg
 (
LOG_WARNING
,

162 "PRNG sìd dú i†ö£cuª: %s", 
ebuf
);

166 i‡(
do_u∆ök
 && (
	`u∆ök
 (
£ed
) < 0)) {

167 
	`log_msg
 (
LOG_WARNING
,

168 "FaûedÅÿªmovêö£cuª PRNG sìd \"%s\"", 
£ed
);

169 
rc
 = -1;

171 i‡(
do_u∆ök
) {

172 
	`log_msg
 (
LOG_INFO
,

173 "Removed in£cuª PRNG sìd \"%s\"", 
£ed
);

175 i‡((
n
 = 
	`_øndom_ªad_£ed
 (
£ed
, 
∫d_byãs_√eded
)) > 0) {

176 
	`log_msg
 (
LOG_INFO
,

177 "PRNG sìded wôh %d byã†‰om \"%s\"", 
n
, 
£ed
);

178 
∫d_byãs_√eded
 -
n
;

183 i‡(
∫d_byãs_√eded
 > 0) {

184 
n
 = 
	`_øndom_ªad_£ed
 (
RANDOM_SEED_DEVICE
, 
∫d_byãs_√eded
);

185 i‡(
n
 > 0) {

186 
	`log_msg
 (
LOG_INFO
, "PRNG seeded with %d bytes from \"%s\"",

187 
n
, 
RANDOM_SEED_DEVICE
);

188 
∫d_byãs_√eded
 -
n
;

193 i‡(
∫d_byãs_√eded
 > 0) {

194 i‡(!
c⁄f
->
gŸ_f‹˚
)

195 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

198 
	`log_msg
 (
LOG_WARNING
,

202 
rc
 = 1;

209 
	`øndom_°ú
 ();

216 i‡(
c⁄f
->
gŸ_bíchm¨k
) {

217 
	`log_msg
 (
LOG_INFO
, "Disabled PRNGÉntropyÖool stirring");

218  (
rc
);

220 
_øndom_timî_id
 = 
	`timî_£t_ªœtive
 (

221 (
ˇŒback_f
Ë
_øndom_£ed_°ú_ˇŒback
, 
NULL
,

222 
RANDOM_SEED_STIR_MIN_SECS
 * 1000);

224 i‡(
_øndom_timî_id
 < 0) {

225 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
, "FailedÅo set PRNG stirÅimer");

227  (
rc
);

228 
	}
}

232 
	$øndom_föi
 (c⁄° *
£ed
)

234 
mode_t
 
mask
;

235 
n
;

237 i‡(
_øndom_timî_id
 > 0) {

238 
	`timî_ˇn˚l
 (
_øndom_timî_id
);

240 
	`øndom_°ú
 ();

242 i‡(
£ed
 !
NULL
) {

244 
mask
 = 
	`umask
 (0);

245 
	`umask
 (
mask
 | 077);

246 
n
 = 
	`_øndom_wrôe_£ed
 (
£ed
, 
RANDOM_SEED_BYTES
);

247 
	`umask
 (
mask
);

249 i‡(
n
 > 0) {

250 
	`log_msg
 (
LOG_INFO
, "WrŸê%d byã†tÿPRNG sìd \"%s\"", 
n
, 
£ed
);

253 
	`_øndom_˛ónup
 ();

255 
	}
}

259 
	$øndom_add
 (c⁄° *
buf
, 
n
)

261 i‡(!
buf
 || (
n
 <= 0)) {

264 
	`_øndom_add
 (
buf
, 
n
);

266 
	}
}

270 
	$øndom_byãs
 (*
buf
, 
n
)

272 i‡(!
buf
 || (
n
 <= 0)) {

275 
	`_øndom_byãs
 (
buf
, 
n
);

277 
	}
}

281 
	$øndom_p£udo_byãs
 (*
buf
, 
n
)

283 i‡(!
buf
 || (
n
 <= 0)) {

286 
	`_øndom_p£udo_byãs
 (
buf
, 
n
);

288 
	}
}

292 
	$øndom_°ú
 ()

294 
fd
;

295 
n
;

296 
°ú_buf
 [
RANDOM_SEED_STIR_BYTES
];

298 
	`log_msg
 (
LOG_DEBUG
, "Stirring PRNGÉntropyÖool");

302 
fd
 = 
	`›í
 (
RANDOM_SEED_DEVICE
, 
O_RDONLY
 | 
O_NONBLOCK
);

303 i‡(
fd
 >= 0) {

304 
n
 = 
	`ªad
 (
fd
, 
°ú_buf
,  (stir_buf));

305 i‡(
n
 > 0) {

306 
	`_øndom_add
 (
°ú_buf
, 
n
);

308 (Ë
	`˛o£
 (
fd
);

311 
	}
}

318 #i‡
HAVE_LIBGCRYPT


320 
	~<as£π.h
>

321 
	~<g¸y±.h
>

322 
	~"fd.h
"

325 
	$_øndom_ªad_£ed
 (c⁄° *
fûíame
, 
num_byãs
)

327 
fd
;

328 
num_À·
;

329 
num_w™t
;

330 
n
;

331 
buf
 [
RANDOM_SEED_BYTES
];

332 
g¸y_îr‹_t
 
e
;

334 
	`as£π
 (
fûíame
 !
NULL
);

335 
	`as£π
 (
num_byãs
 > 0);

337 i‡((
fd
 = 
	`›í
 (
fûíame
, 
O_RDONLY
)) < 0) {

338 i‡(
î∫o
 =
ENOENT
) {

341 
	`log_msg
 (
LOG_WARNING
, "FailedÅo open PRNG seed \"%s\": %s",

342 
fûíame
, 
	`°ªº‹
 (
î∫o
));

345 
num_À·
 = 
num_byãs
;

346 
num_À·
 > 0) {

347 
num_w™t
 = (
num_À·
 <  (
buf
)) ?Çum_left :  (buf);

348 
n
 = 
	`fd_ªad_n
 (
fd
, 
buf
, 
num_w™t
);

349 i‡(
n
 < 0) {

350 
	`log_msg
 (
LOG_WARNING
, "FailedÅoÑead from PRNG seed \"%s\": %s",

351 
fûíame
, 
	`°ªº‹
 (
î∫o
));

354 i‡(
n
 == 0) {

357 
e
 = 
	`g¸y_øndom_add_byãs
 (
buf
, 
n
, -1);

358 i‡(
e
) {

359 
	`log_msg
 (
LOG_WARNING
,

361 
n
, (¿=1 ? "" : "s"), 
	`g¸y_°ªº‹
 (
e
));

364 
num_À·
 -
n
;

366 i‡(
	`˛o£
 (
fd
) < 0) {

367 
	`log_msg
 (
LOG_WARNING
, "FailedÅo close PRNG seed \"%s\": %s",

368 
fûíame
, 
	`°ªº‹
 (
î∫o
));

370 
	`g¸y_Á°_øndom_pﬁl
 ();

371  (
num_byãs
 - 
num_À·
);

372 
	}
}

376 
	$_øndom_wrôe_£ed
 (c⁄° *
fûíame
, 
num_byãs
)

378 
fd
;

379 
num_À·
;

380 
num_w™t
;

381 
n
;

382 
buf
 [
RANDOM_SEED_BYTES
];

384 
	`as£π
 (
fûíame
 !
NULL
);

385 
	`as£π
 (
num_byãs
 > 0);

387 (Ë
	`u∆ök
 (
fûíame
);

388 i‡((
fd
 = 
	`›í
 (
fûíame
, 
O_WRONLY
 | 
O_CREAT
 | 
O_TRUNC
, 0600)) < 0) {

389 
	`log_msg
 (
LOG_WARNING
, "FailedÅo create PRNG seed \"%s\": %s",

390 
fûíame
, 
	`°ªº‹
 (
î∫o
));

393 
num_À·
 = 
num_byãs
;

394 
num_À·
 > 0) {

395 
num_w™t
 = (
num_À·
 <  (
buf
)) ?Çum_left :  (buf);

396 
	`g¸y_¸óã_n⁄˚
 (
buf
, 
num_w™t
);

397 
n
 = 
	`fd_wrôe_n
 (
fd
, 
buf
, 
num_w™t
);

398 i‡(
n
 < 0) {

399 
	`log_msg
 (
LOG_WARNING
, "FailedÅo writeÅo PRNG seed \"%s\": %s",

400 
fûíame
, 
	`°ªº‹
 (
î∫o
));

403 
num_À·
 -
n
;

405 i‡(
	`˛o£
 (
fd
) < 0) {

406 
	`log_msg
 (
LOG_WARNING
, "FailedÅo close PRNG seed \"%s\": %s",

407 
fûíame
, 
	`°ªº‹
 (
î∫o
));

409  (
num_byãs
 - 
num_À·
);

410 
	}
}

414 
	$_øndom_˛ónup
 ()

417 
	}
}

421 
	$_øndom_add
 (c⁄° *
buf
, 
n
)

423 
g¸y_îr‹_t
 
e
;

425 
	`as£π
 (
buf
 !
NULL
);

426 
	`as£π
 (
n
 > 0);

428 
e
 = 
	`g¸y_øndom_add_byãs
 (
buf
, 
n
, -1);

429 i‡(
e
) {

430 
	`log_msg
 (
LOG_WARNING
, "FailedÅoádd %d byte%sÅoÉntropyÖool: %s",

431 
n
, (¿=1 ? "" : "s"), 
	`g¸y_°ªº‹
 (
e
));

433 
	`g¸y_Á°_øndom_pﬁl
 ();

435 
	}
}

439 
	$_øndom_byãs
 (*
buf
, 
n
)

441 
	`as£π
 (
buf
 !
NULL
);

442 
	`as£π
 (
n
 > 0);

444 
	`g¸y_Á°_øndom_pﬁl
 ();

445 
	`g¸y_øndomize
 (
buf
, 
n
, 
GCRY_VERY_STRONG_RANDOM
);

447 
	}
}

451 
	$_øndom_p£udo_byãs
 (*
buf
, 
n
)

453 
	`as£π
 (
buf
 !
NULL
);

454 
	`as£π
 (
n
 > 0);

456 
	`g¸y_¸óã_n⁄˚
 (
buf
, 
n
);

458 
	}
}

467 #i‡
HAVE_OPENSSL


469 
	~<as£π.h
>

470 
	~<›ís¶/ønd.h
>

473 
	$_øndom_ªad_£ed
 (c⁄° *
fûíame
, 
num_byãs
)

475 
	`as£π
 (
fûíame
 !
NULL
);

476 
	`as£π
 (
num_byãs
 > 0);

478  (
	`RAND_lﬂd_fûe
 (
fûíame
, 
num_byãs
));

479 
	}
}

483 
	$_øndom_wrôe_£ed
 (c⁄° *
fûíame
, 
num_byãs
)

485 
n
;

487 
	`as£π
 (
fûíame
 !
NULL
);

488 
	`as£π
 (
num_byãs
 > 0);

490 
n
 = 
	`RAND_wrôe_fûe
 (
fûíame
);

491 i‡(
n
 < 0) {

492 
	`log_msg
 (
LOG_WARNING
,

493 "PRNG sìd \"%s\" gíî©ed wôh insufficõ¡É¡r›y", 
fûíame
);

495 i‡(
n
 == 0) {

496 
	`log_msg
 (
LOG_WARNING
, "FaûedÅÿ¸óã PRNG sìd \"%s\"", 
fûíame
);

498  (
n
);

499 
	}
}

503 
	$_øndom_˛ónup
 ()

505 
	`RAND_˛ónup
 ();

507 
	}
}

511 
	$_øndom_add
 (c⁄° *
buf
, 
n
)

513 
	`as£π
 (
buf
 !
NULL
);

514 
	`as£π
 (
n
 > 0);

516 
	`RAND_£ed
 (
buf
, 
n
);

518 
	}
}

522 
	$_øndom_byãs
 (*
buf
, 
n
)

524 
rc
;

526 
	`as£π
 (
buf
 !
NULL
);

527 
	`as£π
 (
n
 > 0);

529 
rc
 = 
	`RAND_byãs
 (
buf
, 
n
);

530 i‡(
rc
 == -1) {

531 
	`log_msg
 (
LOG_ERR
,

534 i‡(
rc
 == 0) {

535 
	`›ís¶_log_msg
 (
LOG_WARNING
);

538 
	}
}

542 
	$_øndom_p£udo_byãs
 (*
buf
, 
n
)

544 
rc
;

546 
	`as£π
 (
buf
 !
NULL
);

547 
	`as£π
 (
n
 > 0);

549 
rc
 = 
	`RAND_p£udo_byãs
 (
buf
, 
n
);

550 i‡(
rc
 == -1) {

551 
	`log_msg
 (
LOG_ERR
,

554 i‡(
rc
 == 0) {

555 
	`›ís¶_log_msg
 (
LOG_WARNING
);

558 
	}
}

568 
	$_øndom_£ed_°ú_ˇŒback
 (*
_¨g_nŸ_u£d_
)

570 
timeout_£cs
 = 
RANDOM_SEED_STIR_MIN_SECS
;

571 
timevÆ
 
tv
;

572 
m£cs
;

574 
_øndom_timî_id
 = 0;

578 i‡(
timeout_£cs
 <= 0) {

581 
	`øndom_°ú
 ();

588 i‡(
	`gëtimeofday
 (&
tv
, 
NULL
) == 0) {

589 
	`_øndom_add
 (&
tv
.
tv_u£c
,  (tv.tv_usec));

594 i‡(
timeout_£cs
 < 
RANDOM_SEED_STIR_MAX_SECS
) {

595 
timeout_£cs
 = 
	`MIN
—imeout_£c†* 2, 
RANDOM_SEED_STIR_MAX_SECS
);

600 
m£cs
 = (
timeout_£cs
 * 1000Ë+ (
tv
.
tv_u£c
 & 0x3FF);

602 
_øndom_timî_id
 = 
	`timî_£t_ªœtive
 (

603 (
ˇŒback_f
Ë
_øndom_£ed_°ú_ˇŒback
, 
NULL
, 
m£cs
);

605 i‡(
_øndom_timî_id
 < 0) {

606 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
, "FailedÅo set PRNG stirÅimer");

609 
	}
}

	@src/munged/random.h

29 #i‚de‡
RANDOM_H


30 
	#RANDOM_H


	)

33 
øndom_öô
 (c⁄° *
£ed
);

42 
øndom_föi
 (c⁄° *
£ed
);

48 
øndom_add
 (c⁄° *
buf
, 
n
);

53 
øndom_byãs
 (*
buf
, 
n
);

58 
øndom_p£udo_byãs
 (*
buf
, 
n
);

64 
øndom_°ú
 ();

	@src/munged/replay.c

29 #i‡
HAVE_CONFIG_H


30 
	~<c⁄fig.h
>

33 
	~<as£π.h
>

34 
	~<î∫o.h
>

35 
	~<±hªad.h
>

36 
	~<°rög.h
>

37 
	~<time.h
>

38 
	~"c⁄f.h
"

39 
	~"¸ed.h
"

40 
	~"hash.h
"

41 
	~"log.h
"

42 
	~"m_msg.h
"

43 
	~"munge_defs.h
"

44 
	~"ª∂ay.h
"

45 
	~"thªad.h
"

46 
	~"timî.h
"

53 
	#REPLAY_ALLOC
 1024

	)

60 
	uª∂ay_key
 {

62 
ª∂ay_key
 *
	m√xt
;

63 } 
	mÆloc
;

65 
time_t
 
	mt_expúed
;

66 
	mmac
[
MUNGE_MINIMUM_MD_LEN
];

67 } 
	md©a
;

70 
ª∂ay_key
 * 
	tª∂ay_t
;

77 
ª∂ay_key_f
 (c⁄° 
ª∂ay_t
 
r
);

79 
ª∂ay_cmp_f
 (c⁄° 
ª∂ay_t
 
r1
, c⁄°Ñïœy_à
r2
);

81 
ª∂ay_is_expúed
 (
ª∂ay_t
 
r
, *
key
, 
time_t
 *
≤ow
);

83 
ª∂ay_t
 
ª∂ay_Æloc
 ();

85 
ª∂ay_‰ì
 (
ª∂ay_t
 
r
);

92 
hash_t
 
	gª∂ay_hash
 = 
NULL
;

94 
ª∂ay_t
 
	gª∂ay_‰ì_li°
 = 
NULL
;

96 
±hªad_muãx_t
 
	gª∂ay_‰ì_lock
 = 
PTHREAD_MUTEX_INITIALIZER
;

104 
	$ª∂ay_öô
 ()

108 
hash_key_f
 
keyf
 = (hash_key_fË
ª∂ay_key_f
;

109 
hash_cmp_f
 
cmpf
 = (hash_cmp_fË
ª∂ay_cmp_f
;

110 
hash_dñ_f
 
dñf
 = (hash_dñ_fË
ª∂ay_‰ì
;

112 i‡(
ª∂ay_hash
 !
NULL
) {

115 i‡(
c⁄f
->
gŸ_bíchm¨k
) {

116 
	`log_msg
 (
LOG_INFO
, "DisabledÑeplay hash");

119 i‡(!(
ª∂ay_hash
 = 
	`hash_¸óã
 (
REPLAY_HASH_SIZE
, 
keyf
, 
cmpf
, 
dñf
))) {

120 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
, "FailedÅoállocateÑeplay hash");

122 i‡(
	`timî_£t_ªœtive
 (

123 (
ˇŒback_f
Ë
ª∂ay_purge
, 
NULL
, 
MUNGE_REPLAY_PURGE_SECS
 * 1000) < 0) {

124 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
, "FailedÅo setÑeplayÖurgeÅimer");

127 
	}
}

131 
	$ª∂ay_föi
 ()

140 i‡(!
ª∂ay_hash
) {

143 
	`hash_de°roy
 (
ª∂ay_hash
);

144 
ª∂ay_hash
 = 
NULL
;

146 
	}
}

150 
	$ª∂ay_ö£π
 (
munge_¸ed_t
 
c
)

160 
m_msg_t
 
m
 = 
c
->
msg
;

161 
e
;

162 
ª∂ay_t
 
r
;

164 i‡(!
ª∂ay_hash
) {

165 i‡(
c⁄f
->
gŸ_bíchm¨k
)

167 
î∫o
 = 
EPERM
;

170 i‡(!(
r
 = 
	`ª∂ay_Æloc
 ())) {

173 
r
->
d©a
.
t_expúed
 = (
time_t
Ë(
m
->
time0
 + m->
âl
);

174 
	`as£π
 (
c
->
mac_Àn
 > (
r
->
d©a
.
mac
));

175 
	`mem˝y
 (
r
->
d©a
.
mac
, 
c
->mac,  (r->data.mac));

179 i‡(
	`hash_ö£π
 (
ª∂ay_hash
, 
r
,ÑË!
NULL
) {

182 
e
 = 
î∫o
;

183 
	`ª∂ay_‰ì
 (
r
);

185 i‡(
e
 =
EEXIST
) {

188 i‡(
e
 =
EINVAL
) {

189 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

193 
	}
}

197 
	$ª∂ay_ªmove
 (
munge_¸ed_t
 
c
)

201 
m_msg_t
 
m
 = 
c
->
msg
;

202 
ª∂ay_key
 
rkey_°
;

203 
ª∂ay_t
 
rkey
 = &
rkey_°
;

204 
ª∂ay_t
 
r
;

206 i‡(!
ª∂ay_hash
) {

207 i‡(
c⁄f
->
gŸ_bíchm¨k
)

209 
î∫o
 = 
EPERM
;

214 
rkey
->
d©a
.
t_expúed
 = (
time_t
Ë(
m
->
time0
 + m->
âl
);

215 
	`as£π
 (
c
->
mac_Àn
 > (
rkey
->
d©a
.
mac
));

216 
	`mem˝y
 (
rkey
->
d©a
.
mac
, 
c
->mac,  (rkey->data.mac));

218 i‡((
r
 = 
	`hash_ªmove
 (
ª∂ay_hash
, 
rkey
))) {

219 
	`ª∂ay_‰ì
 (
r
);

221  (
r
 ? 0 : -1);

222 
	}
}

226 
	$ª∂ay_purge
 ()

230 
time_t
 
now
;

231 
n
;

233 i‡(!
ª∂ay_hash
) {

236 i‡(
	`time
 (&
now
Ë=(
time_t
) -1) {

237 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
, "FailedÅo query currentÅime");

239 
n
 = 
	`hash_dñëe_if
 (
ª∂ay_hash
, (
hash_¨g_f
Ë
ª∂ay_is_expúed
, &
now
);

240 
	`as£π
 (
n
 >= 0);

241 i‡(
n
 > 0) {

242 
	`log_msg
 (
LOG_DEBUG
, "Purged %d credential%s fromÑeplay hash",

243 
n
, ((n == 1) ? "" : "s"));

245 i‡(
	`timî_£t_ªœtive
 (

246 (
ˇŒback_f
Ë
ª∂ay_purge
, 
NULL
, 
MUNGE_REPLAY_PURGE_SECS
 * 1000) < 0) {

247 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
, "FailedÅo setÑeplayÖurgeÅimer");

250 
	}
}

258 
	$ª∂ay_key_f
 (c⁄° 
ª∂ay_t
 
r
)

264  (* (*Ë
r
->
d©a
.
mac
);

265 
	}
}

269 
	$ª∂ay_cmp_f
 (c⁄° 
ª∂ay_t
 
r1
, c⁄°Ñïœy_à
r2
)

275 i‡(
r1
->
d©a
.
t_expúed
 !
r2
->data.t_expired) {

278 i‡(
	`memcmp
 (
r1
->
d©a
.
mac
, 
r2
->data.mac,  (r2->data.mac))) {

282 
	}
}

286 
	$ª∂ay_is_expúed
 (
ª∂ay_t
 
r
, *
key
, 
time_t
 *
≤ow
)

290 i‡(
r
->
d©a
.
t_expúed
 < *
≤ow
) {

294 
	}
}

297 
ª∂ay_t


298 
	$ª∂ay_Æloc
 ()

303 
i
;

304 
ª∂ay_t
 
r
;

306 
	`as£π
 (
REPLAY_ALLOC
 > 0);

308 
	`lsd_muãx_lock
 (&
ª∂ay_‰ì_lock
);

309 i‡(!
ª∂ay_‰ì_li°
) {

310 i‡((
ª∂ay_‰ì_li°
 = 
	`mÆloc
 (
REPLAY_ALLOC
 *  (*
r
)))) {

311 
i
 = 0; i < 
REPLAY_ALLOC
 - 1; i++)

312 
ª∂ay_‰ì_li°
[
i
].
Æloc
.
√xt
 = &replay_free_list[i+1];

313 
ª∂ay_‰ì_li°
[
i
].
Æloc
.
√xt
 = 
NULL
;

316 i‡((
r
 = 
ª∂ay_‰ì_li°
)) {

317 
ª∂ay_‰ì_li°
 = 
r
->
Æloc
.
√xt
;

320 
î∫o
 = 
ENOMEM
;

322 
	`lsd_muãx_u∆ock
 (&
ª∂ay_‰ì_lock
);

323  (
r
);

324 
	}
}

328 
	$ª∂ay_‰ì
 (
ª∂ay_t
 
r
)

332 
	`as£π
 (
r
 !
NULL
);

334 
	`lsd_muãx_lock
 (&
ª∂ay_‰ì_lock
);

335 
r
->
Æloc
.
√xt
 = 
ª∂ay_‰ì_li°
;

336 
ª∂ay_‰ì_li°
 = 
r
;

337 
	`lsd_muãx_u∆ock
 (&
ª∂ay_‰ì_lock
);

339 
	}
}

	@src/munged/replay.h

29 #i‚de‡
REPLAY_H


30 
	#REPLAY_H


	)

33 
	~"¸ed.h
"

40 
	#REPLAY_HASH_SIZE
 65537

	)

47 
ª∂ay_öô
 ();

49 
ª∂ay_föi
 ();

51 
ª∂ay_ö£π
 (
munge_¸ed_t
 
c
);

53 
ª∂ay_ªmove
 (
munge_¸ed_t
 
c
);

55 
ª∂ay_purge
 ();

	@src/munged/thread.c

29 #i‡
HAVE_CONFIG_H


30 
	~"c⁄fig.h
"

33 
	~<as£π.h
>

34 
	~<î∫o.h
>

35 
	~<±hªad.h
>

36 
	~"thªad.h
"

39 #i‡
WITH_PTHREADS


40 #i‚de‡
NDEBUG


42 
	$lsd_muãx_is_locked
 (
±hªad_muãx_t
 *
muãx
)

46 
rc
;

48 
	`as£π
 (
muãx
 !
NULL
);

49 
rc
 = 
	`±hªad_muãx_åylock
 (
muãx
);

50  (
rc
 =
EBUSY
 ? 1 : 0);

51 
	}
}

	@src/munged/thread.h

29 #i‚de‡
LSD_THREAD_H


30 
	#LSD_THREAD_H


	)

33 #i‡
WITH_PTHREADS


34 
	~<î∫o.h
>

35 
	~<±hªad.h
>

36 
	~<°dlib.h
>

44 #i‡
WITH_PTHREADS


46 #ifde‡
WITH_LSD_FATAL_ERROR_FUNC


47 #unde‡
lsd_Áèl_îr‹


48 
lsd_Áèl_îr‹
 (*
fûe
, 
löe
, *
mesg
);

50 #i‚de‡
lsd_Áèl_îr‹


51 
	#lsd_Áèl_îr‹
(
fûe
, 
löe
, 
mesg
Ë(
	`ab‹t
 ())

	)

55 
	#lsd_muãx_öô
(
pmuãx
) \

57 
e
 = 
	`±hªad_muãx_öô
 (
pmuãx
, 
NULL
); \

58 i‡(
e
 != 0) { \

59 
î∫o
 = 
e
; \

60 
	`lsd_Áèl_îr‹
 (
__FILE__
, 
__LINE__
, "mutex_init"); \

61 
	`ab‹t
 (); \

63 } 0)

	)

65 
	#lsd_muãx_lock
(
pmuãx
) \

67 
e
 = 
	`±hªad_muãx_lock
 (
pmuãx
); \

68 i‡(
e
 != 0) { \

69 
î∫o
 = 
e
; \

70 
	`lsd_Áèl_îr‹
 (
__FILE__
, 
__LINE__
, "mutex_lock"); \

71 
	`ab‹t
 (); \

73 } 0)

	)

75 
	#lsd_muãx_u∆ock
(
pmuãx
) \

77 
e
 = 
	`±hªad_muãx_u∆ock
 (
pmuãx
); \

78 i‡(
e
 != 0) { \

79 
î∫o
 = 
e
; \

80 
	`lsd_Áèl_îr‹
 (
__FILE__
, 
__LINE__
, "mutex_unlock"); \

81 
	`ab‹t
 (); \

83 } 0)

	)

85 
	#lsd_muãx_de°roy
(
pmuãx
) \

87 
e
 = 
	`±hªad_muãx_de°roy
 (
pmuãx
); \

88 i‡(
e
 != 0) { \

89 
î∫o
 = 
e
; \

90 
	`lsd_Áèl_îr‹
 (
__FILE__
, 
__LINE__
, "mutex_destroy"); \

91 
	`ab‹t
 (); \

93 } 0)

	)

95 #i‚de‡
NDEBUG


96 
lsd_muãx_is_locked
 (
±hªad_muãx_t
 *
pmuãx
);

101 
	#lsd_muãx_öô
(
muãx
)

	)

102 
	#lsd_muãx_lock
(
muãx
)

	)

103 
	#lsd_muãx_u∆ock
(
muãx
)

	)

104 
	#lsd_muãx_de°roy
(
muãx
)

	)

105 
	#lsd_muãx_is_locked
(
muãx
Ë(1)

	)

	@src/munged/timer.c

35 #i‡
HAVE_CONFIG_H


36 
	~<c⁄fig.h
>

39 
	~<as£π.h
>

40 
	~<î∫o.h
>

41 
	~<±hªad.h
>

42 
	~<sig«l.h
>

43 
	~<°dlib.h
>

44 
	~<sys/time.h
>

45 
	~<time.h
>

46 
	~<uni°d.h
>

47 
	~<munge.h
>

48 
	~"log.h
"

49 
	~"thªad.h
"

50 
	~"timî.h
"

57 #i‚de‡
_TIMER_CLOCK_CHECK


58 
	#_TIMER_CLOCK_CHECK
 0

	)

66 
	stimî
 {

67 
	mid
;

68 
time•ec
 
	mts
;

69 
ˇŒback_f
 
	mf
;

70 *
	m¨g
;

71 
timî
 *
	m√xt
;

74 
timî
 * 
	ttimî_p
;

81 * 
_timî_thªad
 (*
¨g
);

83 
_timî_thªad_˛ónup
 (*
¨g
);

85 
timî_p
 
_timî_Æloc
 ();

87 
_timî_gë_time•ec
 (
time•ec
 *
t•
);

89 
_timî_is_time•ec_ge
 (

90 
time•ec
 *
t•0
, time•e¯*
t•1
);

97 
±hªad_t
 
	g_timî_tid
 = 0;

98 
±hªad_c⁄d_t
 
	g_timî_c⁄d
 = 
PTHREAD_COND_INITIALIZER
;

99 
±hªad_muãx_t
 
	g_timî_muãx
 = 
PTHREAD_MUTEX_INITIALIZER
;

103 
	g_timî_id
 = 0;

108 
timî_p
 
	g_timî_a˘ive
 = 
NULL
;

113 
timî_p
 
	g_timî_öa˘ive
 = 
NULL
;

121 
	$timî_öô
 ()

123 
±hªad_©å_t
 
èâr
;

124 
size_t
 
°acksize
 = 256 * 1024;

126 i‡(
_timî_tid
 != 0) {

129 #i‡
_TIMER_CLOCK_CHECK


130 
	`log_msg
 (
LOG_INFO
, "EnabledÅimer clock check");

133 i‡((
î∫o
 = 
	`±hªad_©å_öô
 (&
èâr
)) != 0) {

134 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

137 #ifde‡
_POSIX_THREAD_ATTR_STACKSIZE


138 i‡((
î∫o
 = 
	`±hªad_©å_£t°acksize
 (&
èâr
, 
°acksize
)) != 0) {

139 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

142 i‡((
î∫o
 = 
	`±hªad_©å_gë°acksize
 (&
èâr
, &
°acksize
)) != 0) {

143 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

146 
	`log_msg
 (
LOG_DEBUG
, "SëÅimîÅhªad sècksizêtÿ%d", (Ë
°acksize
);

149 i‡((
î∫o
 = 
	`±hªad_¸óã
 (&
_timî_tid
, &
èâr
, 
_timî_thªad
, 
NULL
))

151 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

154 i‡((
î∫o
 = 
	`±hªad_©å_de°roy
 (&
èâr
)) != 0) {

155 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

159 
	}
}

163 
	$timî_föi
 ()

165 *
ªsu…
;

166 
timî_p
 *
t_¥ev_±r
;

167 
timî_p
 
t
;

169 i‡(
_timî_tid
 == 0) {

172 i‡((
î∫o
 = 
	`±hªad_ˇn˚l
 (
_timî_tid
)) != 0) {

173 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
, "FailedÅo cancelÅimerÅhread");

175 i‡((
î∫o
 = 
	`±hªad_joö
 (
_timî_tid
, &
ªsu…
)) != 0) {

176 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
, "FailedÅo joinÅimerÅhread");

178 i‡(
ªsu…
 !
PTHREAD_CANCELED
) {

179 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
, "TimerÅhread wasÇot canceled");

181 
_timî_tid
 = 0;

183 i‡((
î∫o
 = 
	`±hªad_muãx_lock
 (&
_timî_muãx
)) != 0) {

184 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
, "FailedÅoÜockÅimer mutex");

188 i‡(
_timî_a˘ive
) {

189 
t_¥ev_±r
 = &
_timî_a˘ive
;

190 *
t_¥ev_±r
) {

191 
t_¥ev_±r
 = &(*t_¥ev_±r)->
√xt
;

193 *
t_¥ev_±r
 = 
_timî_öa˘ive
;

194 
_timî_öa˘ive
 = 
_timî_a˘ive
;

195 
_timî_a˘ive
 = 
NULL
;

199 
_timî_öa˘ive
) {

200 
t
 = 
_timî_öa˘ive
;

201 
_timî_öa˘ive
 = _timî_öa˘ive->
√xt
;

202 
	`‰ì
 (
t
);

204 i‡((
î∫o
 = 
	`±hªad_muãx_u∆ock
 (&
_timî_muãx
)) != 0) {

205 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
, "FailedÅo unlockÅimer mutex");

208 
	}
}

212 
	$timî_£t_absﬁuã
 (
ˇŒback_f
 
cb
, *
¨g
, c⁄° 
time•ec
 *
t•
)

214 
timî_p
 
t
;

215 
timî_p
 *
t_¥ev_±r
;

216 
do_sig«l
 = 0;

218 i‡(!
cb
 || !
t•
) {

219 
î∫o
 = 
EINVAL
;

222 i‡((
î∫o
 = 
	`±hªad_muãx_lock
 (&
_timî_muãx
)) != 0) {

223 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
, "FailedÅoÜockÅimer mutex");

225 i‡(!(
t
 = 
	`_timî_Æloc
 ())) {

226 
	`log_î∫o
 (
EMUNGE_NO_MEMORY
, 
LOG_ERR
, "FailedÅoállocateÅimer");

230 
_timî_id
++;

231 i‡(
_timî_id
 <= 0) {

232 
_timî_id
 = 1;

234 
t
->
id
 = 
_timî_id
;

235 
t
->
f
 = 
cb
;

236 
t
->
¨g
 =árg;

237 
t
->
ts
 = *
t•
;

241 
t_¥ev_±r
 = &
_timî_a˘ive
;

242 *
t_¥ev_±r
 && 
	`_timî_is_time•ec_ge
 (&
t
->
ts
, &(*t_prev_ptr)->ts)) {

243 
t_¥ev_±r
 = &(*t_¥ev_±r)->
√xt
;

245 
t
->
√xt
 = *
t_¥ev_±r
;

246 *
t_¥ev_±r
 = 
t
;

251 i‡(
t_¥ev_±r
 =&
_timî_a˘ive
) {

252 
do_sig«l
 = 1;

254 i‡((
î∫o
 = 
	`±hªad_muãx_u∆ock
 (&
_timî_muãx
)) != 0) {

255 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
, "FailedÅo unlockÅimer mutex");

257 i‡(
do_sig«l
) {

258 i‡((
î∫o
 = 
	`±hªad_c⁄d_sig«l
 (&
_timî_c⁄d
)) != 0) {

259 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

263 
	`as£π
 (
t
->
id
 > 0);

264  (
t
->
id
);

265 
	}
}

269 
	$timî_£t_ªœtive
 (
ˇŒback_f
 
cb
, *
¨g
, 
m£c
)

271 
time•ec
 
ts
;

275 
	`_timî_gë_time•ec
 (&
ts
);

277 i‡(
m£c
 > 0) {

278 
ts
.
tv_£c
 +
m£c
 / 1000;

279 
ts
.
tv_n£c
 +(
m£c
 % 1000) * 1000000;

280 i‡(
ts
.
tv_n£c
 >= 1000000000) {

281 
ts
.
tv_£c
 +ts.
tv_n£c
 / 1000000000;

282 
ts
.
tv_n£c
 %= 1000000000;

285  (
	`timî_£t_absﬁuã
 (
cb
, 
¨g
, &
ts
));

286 
	}
}

290 
	$timî_ˇn˚l
 (
id
)

292 
timî_p
 *
t_¥ev_±r
;

293 
timî_p
 
t
 = 
NULL
;

294 
do_sig«l
 = 0;

296 i‡(
id
 <= 0) {

297 
î∫o
 = 
EINVAL
;

300 i‡((
î∫o
 = 
	`±hªad_muãx_lock
 (&
_timî_muãx
)) != 0) {

301 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
, "FailedÅoÜockÅimer mutex");

305 
t_¥ev_±r
 = &
_timî_a˘ive
;

306 *
t_¥ev_±r
 && (
id
 != (*t_prev_ptr)->id)) {

307 
t_¥ev_±r
 = &(*t_¥ev_±r)->
√xt
;

311 i‡(*
t_¥ev_±r
) {

312 
t
 = *
t_¥ev_±r
;

313 *
t_¥ev_±r
 = 
t
->
√xt
;

314 
t
->
√xt
 = 
_timî_öa˘ive
;

315 
_timî_öa˘ive
 = 
t
;

320 i‡(
t_¥ev_±r
 =&
_timî_a˘ive
) {

321 
do_sig«l
 = 1;

324 i‡((
î∫o
 = 
	`±hªad_muãx_u∆ock
 (&
_timî_muãx
)) != 0) {

325 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
, "FailedÅo unlockÅimer mutex");

327 i‡(
do_sig«l
) {

328 i‡((
î∫o
 = 
	`±hªad_c⁄d_sig«l
 (&
_timî_c⁄d
)) != 0) {

329 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

333  (
t
 ? 1 : 0);

334 
	}
}

342 
	$_timî_thªad
 (*
¨g
)

347 
sig£t_t
 
sig£t
;

348 
ˇn˚l_°©e
;

349 
time•ec
 
ts_now
;

350 
timî_p
 *
t_¥ev_±r
;

351 
timî_p
 
timî_expúed
;

353 #i‡
_TIMER_CLOCK_CHECK


354 
time•ec
 
ts_¥ev
 = {0, 0};

357 i‡(
	`sigfûl£t
 (&
sig£t
)) {

358 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
, "FailedÅo initÅimer sigset");

360 i‡(
	`±hªad_sigmask
 (
SIG_SETMASK
, &
sig£t
, 
NULL
) != 0) {

361 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
, "FailedÅo setÅimer sigset");

363 i‡((
î∫o
 = 
	`±hªad_muãx_lock
 (&
_timî_muãx
)) != 0) {

364 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
, "FailedÅoÜockÅimer mutex");

366 
	`±hªad_˛ónup_push
 (
_timî_thªad_˛ónup
, 
NULL
);

372 !
_timî_a˘ive
) {

376 i‡((
î∫o
 = 
	`±hªad_c⁄d_waô
 (&
_timî_c⁄d
, &
_timî_muãx
)) != 0)

378 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

385 
î∫o
 = 
	`±hªad_£tˇn˚l°©e
 (
PTHREAD_CANCEL_DISABLE
, &
ˇn˚l_°©e
);

386 i‡(
î∫o
 != 0) {

387 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

390 
	`_timî_gë_time•ec
 (&
ts_now
);

392 #i‡
_TIMER_CLOCK_CHECK


395 i‡(!
	`_timî_is_time•ec_ge
 (&
ts_now
, &
ts_¥ev
)) {

396 
	`log_msg
 (
LOG_WARNING
,

398 
ts_¥ev
.
tv_£c
,Ås_¥ev.
tv_n£c
,

399 
ts_now
.
tv_£c
,Ås_now.
tv_n£c
);

401 
ts_¥ev
 = 
ts_now
;

406 
t_¥ev_±r
 = &
_timî_a˘ive
;

407 *
t_¥ev_±r


408 && 
	`_timî_is_time•ec_ge
 (&
ts_now
, &(*
t_¥ev_±r
)->
ts
)) {

409 
t_¥ev_±r
 = &(*t_¥ev_±r)->
√xt
;

411 i‡(
t_¥ev_±r
 !&
_timî_a˘ive
) {

420 
timî_expúed
 = 
_timî_a˘ive
;

421 
_timî_a˘ive
 = *
t_¥ev_±r
;

422 *
t_¥ev_±r
 = 
NULL
;

427 i‡((
î∫o
 = 
	`±hªad_muãx_u∆ock
 (&
_timî_muãx
)) != 0) {

428 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

433 
t_¥ev_±r
 = &
timî_expúed
;

434 *
t_¥ev_±r
) {

435 (*
t_¥ev_±r
)->
	`f
 ((*t_¥ev_±r)->
¨g
);

436 
t_¥ev_±r
 = &(*t_¥ev_±r)->
√xt
;

438 i‡((
î∫o
 = 
	`±hªad_muãx_lock
 (&
_timî_muãx
)) != 0) {

439 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

446 *
t_¥ev_±r
 = 
_timî_öa˘ive
;

447 
_timî_öa˘ive
 = 
timî_expúed
;

457 
î∫o
 = 
	`±hªad_£tˇn˚l°©e
 (
ˇn˚l_°©e
, &cancel_state);

458 i‡(
î∫o
 != 0) {

459 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

465 
_timî_a˘ive
) {

469 
î∫o
 = 
	`±hªad_c⁄d_timedwaô
 (

470 &
_timî_c⁄d
, &
_timî_muãx
, &(
_timî_a˘ive
->
ts
));

472 i‡(
î∫o
 =
EINTR
) {

475 i‡((
î∫o
 =
ETIMEDOUT
) || (errno == 0)) {

478 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

482 
	`as£π
 (1);

483 
	`±hªad_˛ónup_p›
 (1);

484  (
NULL
);

485 
	}
}

489 
	$_timî_thªad_˛ónup
 (*
¨g
)

494 i‡((
î∫o
 = 
	`±hªad_muãx_u∆ock
 (&
_timî_muãx
)) != 0) {

495 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
, "FailedÅo unlockÅimer mutex");

498 
	}
}

501 
timî_p


502 
	$_timî_Æloc
 ()

507 
timî_p
 
t
;

509 
	`as£π
 (
	`lsd_muãx_is_locked
 (&
_timî_muãx
));

511 i‡(
_timî_öa˘ive
) {

512 
t
 = 
_timî_öa˘ive
;

513 
_timî_öa˘ive
 = _timî_öa˘ive->
√xt
;

514 
t
->
√xt
 = 
NULL
;

517 
t
 = 
	`mÆloc
 ( (
timî
));

519  (
t
);

520 
	}
}

524 
	$_timî_gë_time•ec
 (
time•ec
 *
t•
)

528 
timevÆ
 
tv
;

530 
	`as£π
 (
t•
 !
NULL
);

532 i‡(
	`gëtimeofday
 (&
tv
, 
NULL
) < 0) {

533 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
, "FailedÅo query currentÅime");

535 
t•
->
tv_£c
 = 
tv
.tv_sec;

536 
t•
->
tv_n£c
 = 
tv
.
tv_u£c
 * 1000;

538 
	}
}

542 
	$_timî_is_time•ec_ge
 (
time•ec
 *
t•0
, time•e¯*
t•1
)

547 
	`as£π
 (
t•0
 !
NULL
);

548 
	`as£π
 (
t•1
 !
NULL
);

550 i‡(
t•0
->
tv_n£c
 >= 1000000000) {

551 
t•0
->
tv_£c
 +t•0->
tv_n£c
 / 1000000000;

552 
t•0
->
tv_n£c
 %= 1000000000;

554 i‡(
t•1
->
tv_n£c
 >= 1000000000) {

555 
t•1
->
tv_£c
 +t•1->
tv_n£c
 / 1000000000;

556 
t•1
->
tv_n£c
 %= 1000000000;

558 i‡(
t•0
->
tv_£c
 =
t•1
->tv_sec) {

559  (
t•0
->
tv_n£c
 >
t•1
->tv_nsec);

562  (
t•0
->
tv_£c
 >
t•1
->tv_sec);

564 
	}
}

	@src/munged/timer.h

29 #i‚de‡
TIMER_H


30 
	#TIMER_H


	)

33 #i‡
HAVE_CONFIG_H


34 
	~<c⁄fig.h
>

37 
	~<time.h
>

44 (*
	tˇŒback_f
Ë(*
	t¨g
);

54 
	`timî_öô
 ();

60 
	`timî_föi
 ();

65 
	`timî_£t_absﬁuã
 (
ˇŒback_f
 
cb
, *
¨g
, c⁄° 
time•ec
 *
t•
);

72 
	`timî_£t_ªœtive
 (
ˇŒback_f
 
cb
, *
¨g
, 
m£c
);

79 
	`timî_ˇn˚l
 (
id
);

	@src/munged/work.c

31 #i‡
HAVE_CONFIG_H


32 
	~"c⁄fig.h
"

35 
	~<as£π.h
>

36 
	~<î∫o.h
>

37 
	~<±hªad.h
>

38 
	~<sig«l.h
>

39 
	~<°dlib.h
>

40 
	~<°rög.h
>

41 
	~<uni°d.h
>

42 
	~<munge.h
>

43 
	~"log.h
"

44 
	~"w‹k.h
"

51 
	sw‹k_¨g
 {

52 
w‹k_¨g
 *
	m√xt
;

53 *
	m¨g
;

54 } 
	tw‹k_¨g_t
, *
	tw‹k_¨g_p
;

56 
	sw‹k
 {

57 
±hªad_muãx_t
 
	mlock
;

58 
±hªad_c⁄d_t
 
	mª˚ived_w‹k
;

59 
±hªad_c⁄d_t
 
	mföished_w‹k
;

60 
±hªad_t
 *
	mw‹kîs
;

61 
w‹k_func_t
 
	mw‹k_func
;

62 
w‹k_¨g_p
 
	mw‹k_hód
;

63 
w‹k_¨g_p
 
	mw‹k_èû
;

64 
	mn_w‹kîs
;

65 
	mn_w‹kög
;

66 
	mgŸ_föi
;

67 } 
	tw‹k_t
;

74 * 
_w‹k_exec
 (*
¨g
);

75 
_w‹k_exec_˛ónup
 (*
¨g
);

76 * 
_w‹k_íqueue
 (
w‹k_p
 
wp
, *
w‹k
);

77 * 
_w‹k_dequeue
 (
w‹k_p
 
wp
);

84 
w‹k_p


85 
	$w‹k_öô
 (
w‹k_func_t
 
f
, 
n_thªads
)

87 
w‹k_p
 
wp
;

88 
±hªad_©å_t
 
èâr
;

89 
size_t
 
°acksize
 = 256 * 1024;

90 
i
;

94 i‡(
f
 =
NULL
) {

95 
î∫o
 = 
EINVAL
;

96  (
NULL
);

98 i‡(
n_thªads
 <= 0) {

99 
î∫o
 = 
EINVAL
;

100  (
NULL
);

104 i‡(!(
wp
 = 
	`mÆloc
 ( (
w‹k_t
)))) {

105 
	`log_î∫o
 (
EMUNGE_NO_MEMORY
, 
LOG_ERR
,

108 i‡(!(
wp
->
w‹kîs
 = 
	`mÆloc
 ( (*wp->w‹kîsË* 
n_thªads
))) {

109 
	`log_î∫o
 (
EMUNGE_NO_MEMORY
, 
LOG_ERR
,

114 i‡((
î∫o
 = 
	`±hªad_©å_öô
 (&
èâr
)) != 0) {

115 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

118 #ifde‡
_POSIX_THREAD_ATTR_STACKSIZE


119 i‡((
î∫o
 = 
	`±hªad_©å_£t°acksize
 (&
èâr
, 
°acksize
)) != 0) {

120 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

123 i‡((
î∫o
 = 
	`±hªad_©å_gë°acksize
 (&
èâr
, &
°acksize
)) != 0) {

124 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

127 
	`log_msg
 (
LOG_DEBUG
, "Së w‹kÅhªad sècksizêtÿ%d", (Ë
°acksize
);

130 i‡((
î∫o
 = 
	`±hªad_muãx_öô
 (&
wp
->
lock
, 
NULL
)) != 0) {

131 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

134 i‡((
î∫o
 = 
	`±hªad_c⁄d_öô
 (&
wp
->
ª˚ived_w‹k
, 
NULL
)) != 0) {

135 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

138 i‡((
î∫o
 = 
	`±hªad_c⁄d_öô
 (&
wp
->
föished_w‹k
, 
NULL
)) != 0) {

139 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

142 
wp
->
w‹k_func
 = 
f
;

143 
wp
->
w‹k_hód
 = wp->
w‹k_èû
 = 
NULL
;

144 
wp
->
n_w‹kîs
 = 
n_thªads
;

145 
wp
->
n_w‹kög
 = 0;

146 
wp
->
gŸ_föi
 = 0;

150 
i
 = 0; i < 
wp
->
n_w‹kîs
; i++) {

151 i‡((
î∫o
 = 
±hªad_¸óã


152 (&
wp
->
w‹kîs
[
i
], &
èâr
, 
_w‹k_exec
, wp)) != 0) {

153 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

154 "FaûedÅÿ¸óã w‹kÅhªad #%d", 
i
+1);

159 i‡((
î∫o
 = 
	`±hªad_©å_de°roy
 (&
èâr
)) != 0) {

160 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

163  (
wp
);

164 
	}
}

168 
	$w‹k_föi
 (
w‹k_p
 
wp
, 
do_waô
)

170 
i
;

172 i‡(!
wp
) {

173 
î∫o
 = 
EINVAL
;

176 i‡((
î∫o
 = 
	`±hªad_muãx_lock
 (&
wp
->
lock
)) != 0) {

177 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

182 
wp
->
gŸ_föi
 = 1;

186 i‡(
do_waô
) {

191 (
wp
->
n_w‹kög
 !0Ë&& (wp->
w‹k_hód
 !
NULL
)) {

192 i‡((
î∫o
 = 
±hªad_c⁄d_waô


193 (&
wp
->
föished_w‹k
, &wp->
lock
)) != 0) {

194 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

205 i‡((
î∫o
 = 
	`±hªad_muãx_u∆ock
 (&
wp
->
lock
)) != 0) {

206 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

209 
i
 = 0; i < 
wp
->
n_w‹kîs
; i++) {

210 i‡((
î∫o
 = 
	`±hªad_ˇn˚l
 (
wp
->
w‹kîs
[
i
])) != 0) {

211 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

212 "FaûedÅÿˇn˚»w‹kÅhªad #%d", 
i
+1);

215 
i
 = 0; i < 
wp
->
n_w‹kîs
; i++) {

216 *
ªsu…
;

217 i‡((
î∫o
 = 
	`±hªad_joö
 (
wp
->
w‹kîs
[
i
], &
ªsu…
)) != 0) {

218 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

219 "FaûedÅÿjoö w‹kÅhªad #%d", 
i
+1);

221 i‡(
ªsu…
 !
PTHREAD_CANCELED
) {

222 
	`log_îr
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

223 "W‹kÅhªad #%d wa†nŸ c™˚Àd", 
i
+1);

225 
wp
->
w‹kîs
[
i
] = 0;

229 i‡((
î∫o
 = 
	`±hªad_c⁄d_de°roy
 (&
wp
->
föished_w‹k
)) != 0) {

230 
	`log_msg
 (
LOG_ERR
,

232 
	`°ªº‹
 (
î∫o
));

234 i‡((
î∫o
 = 
	`±hªad_c⁄d_de°roy
 (&
wp
->
ª˚ived_w‹k
)) != 0) {

235 
	`log_msg
 (
LOG_ERR
,

237 
	`°ªº‹
 (
î∫o
));

239 i‡((
î∫o
 = 
	`±hªad_muãx_de°roy
 (&
wp
->
lock
)) != 0) {

240 
	`log_msg
 (
LOG_ERR
,

241 "FaûedÅÿde°roy w‹kÅhªad muãx: %s", 
	`°ªº‹
 (
î∫o
));

243 
	`‰ì
 (
wp
->
w‹kîs
);

244 
	`‰ì
 (
wp
);

246 
	}
}

250 
	$w‹k_queue
 (
w‹k_p
 
wp
, *
w‹k
)

252 
rc
 = 0;

253 
do_sig«l
 = 0;

255 i‡(!
wp
 || !
w‹k
) {

256 
î∫o
 = 
EINVAL
;

259 i‡((
î∫o
 = 
	`±hªad_muãx_lock
 (&
wp
->
lock
)) != 0) {

260 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

263 i‡(
wp
->
gŸ_föi
) {

264 
î∫o
 = 
EPERM
;

265 
rc
 = -1;

267 i‡(
	`_w‹k_íqueue
 (
wp
, 
w‹k
Ë=
NULL
) {

268 
î∫o
 = 
EINVAL
;

269 
rc
 = -1;

271 i‡((
wp
->
n_w‹kîs
 - wp->
n_w‹kög
) > 0) {

276 
do_sig«l
 = 1;

278 i‡((
î∫o
 = 
	`±hªad_muãx_u∆ock
 (&
wp
->
lock
)) != 0) {

279 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

282 i‡(
do_sig«l
) {

283 i‡((
î∫o
 = 
	`±hªad_c⁄d_sig«l
 (&
wp
->
ª˚ived_w‹k
)) != 0) {

284 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

288  (
rc
);

289 
	}
}

293 
	$w‹k_waô
 (
w‹k_p
 
wp
)

295 i‡(!
wp
) {

296 
î∫o
 = 
EINVAL
;

299 i‡((
î∫o
 = 
	`±hªad_muãx_lock
 (&
wp
->
lock
)) != 0) {

300 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

305 (
wp
->
n_w‹kög
 !0Ë&& (wp->
w‹k_hód
 !
NULL
)) {

306 i‡((
î∫o
 = 
	`±hªad_c⁄d_waô
 (&
wp
->
föished_w‹k
, &wp->
lock
)) != 0) {

307 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

311 i‡((
î∫o
 = 
	`±hªad_muãx_u∆ock
 (&
wp
->
lock
)) != 0) {

312 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

316 
	}
}

324 
	$_w‹k_exec
 (*
¨g
)

329 
w‹k_p
 
wp
;

330 
sig£t_t
 
sig£t
;

331 
ˇn˚l_°©e
;

332 *
w‹k
;

334 
	`as£π
 (
¨g
 !
NULL
);

335 
wp
 = 
¨g
;

337 i‡(
	`sigfûl£t
 (&
sig£t
)) {

338 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
, "FailedÅo init workÅhread sigset");

340 i‡(
	`±hªad_sigmask
 (
SIG_SETMASK
, &
sig£t
, 
NULL
) != 0) {

341 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
, "FailedÅo set workÅhread sigset");

343 i‡((
î∫o
 = 
	`±hªad_muãx_lock
 (&
wp
->
lock
)) != 0) {

344 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

347 
	`±hªad_˛ónup_push
 (
_w‹k_exec_˛ónup
, 
wp
);

351 
	`±hªad_ã°ˇn˚l
 ();

355 !
wp
->
w‹k_hód
) {

356 i‡((
î∫o
 = 
±hªad_c⁄d_waô


357 (&
wp
->
ª˚ived_w‹k
, &wp->
lock
)) != 0) {

358 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

364 i‡((
î∫o
 = 
±hªad_£tˇn˚l°©e


365 (
PTHREAD_CANCEL_DISABLE
, &
ˇn˚l_°©e
)) != 0) {

366 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

371 
w‹k
 = 
	`_w‹k_dequeue
 (
wp
);

372 
	`as£π
 (
w‹k
 !
NULL
);

374 
wp
->
n_w‹kög
++;

376 i‡((
î∫o
 = 
	`±hªad_muãx_u∆ock
 (&
wp
->
lock
)) != 0) {

377 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

380 
wp
->
	`w‹k_func
 (
w‹k
);

382 i‡((
î∫o
 = 
	`±hªad_muãx_lock
 (&
wp
->
lock
)) != 0) {

383 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

386 
wp
->
n_w‹kög
--;

394 i‡((
î∫o
 = 
±hªad_£tˇn˚l°©e


395 (
ˇn˚l_°©e
, &cancel_state)) != 0) {

396 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

401 i‡((
wp
->
n_w‹kög
 =0Ë&& (!wp->
w‹k_hód
)) {

402 i‡((
î∫o
 = 
	`±hªad_c⁄d_sig«l
 (&
wp
->
föished_w‹k
)) != 0) {

403 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

408 
	`as£π
 (1);

409 
	`±hªad_˛ónup_p›
 (1);

410  (
NULL
);

411 
	}
}

415 
	$_w‹k_exec_˛ónup
 (*
¨g
)

420 
w‹k_p
 
wp
;

422 
	`as£π
 (
¨g
 !
NULL
);

423 
wp
 = 
¨g
;

425 i‡((
î∫o
 = 
	`±hªad_muãx_u∆ock
 (&
wp
->
lock
)) != 0) {

426 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
,

430 
	}
}

434 
	$_w‹k_íqueue
 (
w‹k_p
 
wp
, *
w‹k
)

441 
w‹k_¨g_p
 
w≠
;

443 
	`as£π
 (
wp
 !
NULL
);

445 i‡(!
w‹k
) {

446  (
NULL
);

448 i‡(!(
w≠
 = 
	`mÆloc
 ( (*wap)))) {

449 
	`log_î∫o
 (
EMUNGE_NO_MEMORY
, 
LOG_ERR
, "FailedÅoÉnqueue work");

451 
w≠
->
√xt
 = 
NULL
;

452 
w≠
->
¨g
 = 
w‹k
;

453 i‡(!
wp
->
w‹k_èû
) {

454 
wp
->
w‹k_èû
 = wp->
w‹k_hód
 = 
w≠
;

457 
wp
->
w‹k_èû
->
√xt
 = 
w≠
;

458 
wp
->
w‹k_èû
 = 
w≠
;

460  (
w‹k
);

461 
	}
}

465 
	$_w‹k_dequeue
 (
w‹k_p
 
wp
)

472 
w‹k_¨g_p
 
w≠
;

473 *
w‹k
;

475 
	`as£π
 (
wp
 !
NULL
);

477 
w≠
 = 
wp
->
w‹k_hód
;

478 i‡(!
w≠
) {

479  (
NULL
);

481 
wp
->
w‹k_hód
 = 
w≠
->
√xt
;

482 
w‹k
 = 
w≠
->
¨g
;

483 
	`‰ì
 (
w≠
);

484 i‡(!
wp
->
w‹k_hód
) {

485 
wp
->
w‹k_èû
 = 
NULL
;

487  (
w‹k
);

488 
	}
}

	@src/munged/work.h

29 #i‚de‡
WORK_H


30 
	#WORK_H


	)

33 #i‡
HAVE_CONFIG_H


34 
	~<c⁄fig.h
>

42 
w‹k
 * 
	tw‹k_p
;

44 (*
	tw‹k_func_t
) (*);

51 
w‹k_p
 
	`w‹k_öô
 (
w‹k_func_t
 
f
, 
n_thªads
);

59 
	`w‹k_föi
 (
w‹k_p
 
wp
, 
do_waô
);

67 
	`w‹k_queue
 (
w‹k_p
 
wp
, *
w‹k
);

74 
	`w‹k_waô
 (
w‹k_p
 
wp
);

	@src/munged/xgetgrent.c

29 #i‡
HAVE_CONFIG_H


30 
	~"c⁄fig.h
"

33 #i‡ 
HAVE_GETGRENT_R_GNU


34 
	#_GNU_SOURCE
 1

	)

35 #ñi‡
HAVE_GETGRENT_R_AIX


36 
	#HAVE_GETGRENT_R_ERANGE_BROKEN
 1

	)

37 
	#_THREAD_SAFE
 1

	)

38 
	~<°dio.h
>

39 #ñi‡
HAVE_GETGRENT_R_SUN


40 
	#HAVE_GETGRENT_R_ERANGE_BROKEN
 1

	)

41 #ñi‡
HAVE_GETGRENT


42 
	~<±hªad.h
>

47 
	~<as£π.h
>

48 
	~<î∫o.h
>

49 
	~<gΩ.h
>

50 
	~<°ddef.h
>

51 
	~<°dlib.h
>

52 
	~<°rög.h
>

53 
	~<sys/ty≥s.h
>

54 
	~<uni°d.h
>

55 
	~<munge.h
>

56 
	~"log.h
"

57 
	~"xgëgª¡.h
"

64 #ifde‡
__GNUC__


65 
	#_UNUSED_
 
	`__©åibuã__
 ((
unu£d
))

	)

67 
	#_UNUSED_


	)

75 
	#MINIMUM_GR_BUF_SIZE
 1024

	)

82 
	sxgrbuf_t
 {

83 *
	mbuf
;

84 
size_t
 
	mÀn
;

92 #i‡
HAVE_GETGRENT_R_AIX


93 
FILE
 *
	g_gr_Â
;

101 
size_t
 
_xgëgª¡_buf_gë_sys_size
 ();

103 
_xgëgª¡_buf_grow
 (
xgrbuf_p
 
grbuÂ
, 
size_t
 
möÀn
);

105 
	$_xgëgª¡_c›y
 (c⁄° 
group
 *
§c
, grou∞*
d°
,

106 
xgrbuf_p
 
grbuÂ
Ë
_UNUSED_
;

108 
	$_xgëgª¡_c›y_°r
 (c⁄° *
§c
, **
d°p
,

109 **
buÂ
, 
size_t
 *
buÊíp
Ë
_UNUSED_
;

116 
xgrbuf_p


117 
	$xgëgª¡_buf_¸óã
 (
size_t
 
Àn
)

123 
xgrbuf_p
 
grbuÂ
;

125 i‡(
Àn
 == 0) {

126 
Àn
 = 
	`_xgëgª¡_buf_gë_sys_size
 ();

128 
grbuÂ
 = 
	`mÆloc
 ( (
xgrbuf_t
));

129 i‡(
grbuÂ
 =
NULL
) {

130  (
NULL
);

132 
grbuÂ
->
buf
 = 
	`mÆloc
 (
Àn
);

133 i‡(
grbuÂ
->
buf
 =
NULL
) {

134 
	`‰ì
 (
grbuÂ
);

135  (
NULL
);

137 
grbuÂ
->
Àn
 =Üen;

138 
	`log_msg
 (
LOG_DEBUG
, "Cª©ed grou∞íåy buf„∏o‡sizê%u", 
Àn
);

139  (
grbuÂ
);

140 
	}
}

144 
	$xgëgª¡_buf_de°roy
 (
xgrbuf_p
 
grbuÂ
)

148 i‡(
grbuÂ
 !
NULL
) {

149 i‡(
grbuÂ
->
buf
 !
NULL
) {

150 
	`‰ì
 (
grbuÂ
->
buf
);

152 
	`‰ì
 (
grbuÂ
);

155 
	}
}

158 
size_t


159 
	$xgëgª¡_buf_gë_Àn
 (
xgrbuf_p
 
grbuÂ
)

164 i‡(
grbuÂ
 =
NULL
) {

165 
î∫o
 = 
EINVAL
;

168  (
grbuÂ
->
Àn
);

169 
	}
}

173 
	$xgëgª¡_öô
 ()

177 #i‡
HAVE_GETGRENT_R_AIX


178 
_gr_Â
 = 
NULL
;

180 
	`£tgª¡
 ();

182 
	}
}

186 
	$xgëgª¡
 (
group
 *
gΩ
, 
xgrbuf_p
 
grbuÂ
)

197 
rv
;

198 #i‡ 
HAVE_GETGRENT_R_GNU


199 
group
 *
rv_gΩ
;

200 #ñi‡
HAVE_GETGRENT_R_AIX


201 #ñi‡
HAVE_GETGRENT_R_SUN


202 
group
 *
rv_gΩ
;

203 #ñi‡
HAVE_GETGRENT


204 
±hªad_muãx_t
 
muãx
 = 
PTHREAD_MUTEX_INITIALIZER
;

205 
rv_muãx
;

206 
rv_c›y
;

207 
group
 *
rv_gΩ
;

209 
gŸ_eof
;

210 
gŸ_îr
;

212 i‡((
gΩ
 =
NULL
Ë|| (
grbuÂ
 == NULL)) {

213 
î∫o
 = 
EINVAL
;

216 
	`as£π
 (
grbuÂ
->
buf
 !
NULL
);

217 
	`as£π
 (
grbuÂ
->
Àn
 > 0);

219 
ª°¨t
:

220 
î∫o
 = 0;

221 
gŸ_eof
 = 0;

222 
gŸ_îr
 = 0;

224 #i‡ 
HAVE_GETGRENT_R_GNU


225 
rv
 = 
	`gëgª¡_r
 (
gΩ
, 
grbuÂ
->
buf
, grbuÂ->
Àn
, &
rv_gΩ
);

226 i‡(((
rv
 =
ENOENT
Ë|| (rv =0)Ë&& (
rv_gΩ
 =
NULL
)) {

227 
gŸ_eof
 = 1;

229 i‡(
rv
 != 0) {

230 
gŸ_îr
 = 1;

231 
î∫o
 = 
rv
;

233 #ñi‡
HAVE_GETGRENT_R_AIX


234 
rv
 = 
	`gëgª¡_r
 (
gΩ
, 
grbuÂ
->
buf
, grbuÂ->
Àn
, &
_gr_Â
);

235 i‡(
rv
 != 0) {

236 i‡(
î∫o
 == 0) {

237 
gŸ_eof
 = 1;

240 
gŸ_îr
 = 1;

243 #ñi‡
HAVE_GETGRENT_R_SUN


244 
rv_gΩ
 = 
	`gëgª¡_r
 (
gΩ
, 
grbuÂ
->
buf
, grbuÂ->
Àn
);

245 i‡(
rv_gΩ
 =
NULL
) {

246 i‡(
î∫o
 == 0) {

247 
gŸ_eof
 = 1;

250 
gŸ_îr
 = 1;

253 #ñi‡
HAVE_GETGRENT


254 i‡((
rv_muãx
 = 
	`±hªad_muãx_lock
 (&
muãx
)) != 0) {

255 
î∫o
 = 
rv_muãx
;

256 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
, "FailedÅoÜock xgetgrent mutex");

258 
rv_gΩ
 = 
	`gëgª¡
 ();

259 i‡(
rv_gΩ
 =
NULL
) {

260 i‡((
î∫o
 =0Ë|| (î∫ÿ=
ENOENT
)) {

261 
gŸ_eof
 = 1;

264 
gŸ_îr
 = 1;

268 
rv_c›y
 = 
	`_xgëgª¡_c›y
 (
rv_gΩ
, 
gΩ
, 
grbuÂ
);

270 i‡((
rv_muãx
 = 
	`±hªad_muãx_u∆ock
 (&
muãx
)) != 0) {

271 
î∫o
 = 
rv_muãx
;

272 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
, "FailedÅo unlock xgetgrent mutex");

274 i‡(
rv_c›y
 < 0) {

279 i‡(
gŸ_eof
) {

280 
î∫o
 = 
ENOENT
;

283 i‡(
gŸ_îr
) {

284 i‡(
î∫o
 =
ERANGE
) {

285 
rv
 = 
	`_xgëgª¡_buf_grow
 (
grbuÂ
, 0);

286 #i‡! 
HAVE_GETGRENT_R_ERANGE_BROKEN


287 i‡(
rv
 == 0) {

288 
ª°¨t
;

295 
	}
}

299 
	$xgëgª¡_föi
 ()

303 
	`ídgª¡
 ();

305 
	}
}

312 
size_t


313 
	$_xgëgª¡_buf_gë_sys_size
 ()

317 
n
 = -1;

318 
size_t
 
Àn
;

320 #i‡
HAVE_SYSCONF


321 #ifde‡
_SC_GETGR_R_SIZE_MAX


322 
n
 = 
	`sysc⁄f
 (
_SC_GETGR_R_SIZE_MAX
);

326 
Àn
 = (
n
 <
MINIMUM_GR_BUF_SIZE
Ë? MINIMUM_GR_BUF_SIZE : (
size_t
)Ç;

327  (
Àn
);

328 
	}
}

332 
	$_xgëgª¡_buf_grow
 (
xgrbuf_p
 
grbuÂ
, 
size_t
 
möÀn
)

337 
size_t
 
√wÀn
;

338 *
√wbuf
;

340 
	`as£π
 (
grbuÂ
 !
NULL
);

341 
	`as£π
 (
grbuÂ
->
buf
 !
NULL
);

342 
	`as£π
 (
grbuÂ
->
Àn
 > 0);

344 
√wÀn
 = 
grbuÂ
->
Àn
;

346 
√wÀn
 *= 2;

347 i‡(
√wÀn
 < 
grbuÂ
->
Àn
) {

348 
î∫o
 = 
ENOMEM
;

351 } 
√wÀn
 < 
möÀn
);

353 
√wbuf
 = 
	`ªÆloc
 (
grbuÂ
->
buf
, 
√wÀn
);

354 i‡(
√wbuf
 =
NULL
) {

355 
î∫o
 = 
ENOMEM
;

358 
grbuÂ
->
buf
 = 
√wbuf
;

359 
grbuÂ
->
Àn
 = 
√wÀn
;

361 
	`log_msg
 (
LOG_INFO
, "In¸ó£d grou∞íåy buf„∏sizêtÿ%u", 
√wÀn
);

363 
	}
}

367 
	$_xgëgª¡_c›y
 (c⁄° 
group
 *
§c
, grou∞*
d°
, 
xgrbuf_p
 
grbuÂ
)

373 
num_±rs
;

374 
size_t
 
num_byãs
;

375 **
u£Ω
;

376 *
p
;

377 
size_t
 
n
;

378 
i
;

380 
	`as£π
 (
§c
 !
NULL
);

381 
	`as£π
 (
d°
 !
NULL
);

382 
	`as£π
 (
grbuÂ
 !
NULL
);

383 
	`as£π
 (
grbuÂ
->
buf
 !
NULL
);

384 
	`as£π
 (
grbuÂ
->
Àn
 > 0);

388 
num_±rs
 = 1;

389 
num_byãs
 = 0;

390 
u£Ω
 = 
§c
->
gr_mem
; userp && *userp; userp++) {

391 
num_±rs
++;

392 
num_byãs
 +
	`°æí
 (*
u£Ω
) + 1;

394 i‡(
§c
->
gr_«me
) {

395 
num_byãs
 +
	`°æí
 (
§c
->
gr_«me
) + 1;

397 i‡(
§c
->
gr_∑sswd
) {

398 
num_byãs
 +
	`°æí
 (
§c
->
gr_∑sswd
) + 1;

400 
num_byãs
 +
num_±rs
 * ( (*));

404 i‡(
grbuÂ
->
Àn
 < 
num_byãs
) {

405 i‡(
	`_xgëgª¡_buf_grow
 (
grbuÂ
, 
num_byãs
) < 0) {

411 
	`as£π
 (
grbuÂ
->
Àn
 >
num_byãs
);

412 
	`mem£t
 (
d°
, 0,  (*dst));

413 
p
 = 
grbuÂ
->
buf
;

415 
n
 = 
num_±rs
 * ( (*));

416 i‡(
num_byãs
 < 
n
) {

417 
îr
;

419 
d°
->
gr_mem
 = (**Ë
p
;

420 
p
 +
n
;

421 
num_byãs
 -
n
;

423 i‡(
_xgëgª¡_c›y_°r


424 (
§c
->
gr_«me
, &(
d°
->gr_«me), &
p
, &
num_byãs
) < 0) {

425 
îr
;

427 i‡(
_xgëgª¡_c›y_°r


428 (
§c
->
gr_∑sswd
, &(
d°
->gr_∑sswd), &
p
, &
num_byãs
) < 0) {

429 
îr
;

431 
i
 = 0; i < 
num_±rs
; i++) {

432 i‡(
_xgëgª¡_c›y_°r


433 (
§c
->
gr_mem
 [
i
], &(
d°
->gr_mem [i]), &
p
, &
num_byãs
) < 0) {

434 
îr
;

437 
d°
->
gr_gid
 = 
§c
->gr_gid;

439 
	`as£π
 (
p
 <
grbuÂ
->
buf
 + grbuÂ->
Àn
);

442 
îr
:

443 
î∫o
 = 
ERANGE
;

445 
	}
}

449 
	$_xgëgª¡_c›y_°r
 (c⁄° *
§c
, **
d°p
,

450 **
buÂ
, 
size_t
 *
buÊíp
)

458 
size_t
 
n
;

460 
	`as£π
 (
d°p
 !
NULL
);

461 
	`as£π
 (
buÂ
 !
NULL
);

462 
	`as£π
 (*
buÂ
 !
NULL
);

463 
	`as£π
 (
buÊíp
 !
NULL
);

465 i‡(
§c
 =
NULL
) {

466 *
d°p
 = 
NULL
;

469 
n
 = 
	`°æí
 (
§c
) + 1;

470 i‡(*
buÊíp
 < 
n
) {

473 *
d°p
 = 
	`°r˝y
 (*
buÂ
, 
§c
);

474 *
buÂ
 +
n
;

475 *
buÊíp
 -
n
;

476  (
n
);

477 
	}
}

	@src/munged/xgetgrent.h

29 #i‚de‡
XGETGRENT_H


30 
	#XGETGRENT_H


	)

32 
	~<gΩ.h
>

33 
	~<°ddef.h
>

40 
xgrbuf_t
 * 
	txgrbuf_p
;

47 
xgrbuf_p
 
xgëgª¡_buf_¸óã
 (
size_t
 
Àn
);

49 
xgëgª¡_buf_de°roy
 (
xgrbuf_p
 
grbuÂ
);

51 
size_t
 
xgëgª¡_buf_gë_Àn
 (
xgrbuf_p
 
grbuÂ
);

53 
xgëgª¡_öô
 ();

55 
xgëgª¡
 (
group
 *
gΩ
, 
xgrbuf_p
 
grbuÂ
);

57 
xgëgª¡_föi
 ();

	@src/munged/xgetpwnam.c

29 #i‡
HAVE_CONFIG_H


30 
	~"c⁄fig.h
"

33 #i‡ 
HAVE_GETPWNAM_R_POSIX


34 
	#_POSIX_PTHREAD_SEMANTICS
 1

	)

35 #ñi‡
HAVE_GETPWNAM_R_AIX


36 
	#_THREAD_SAFE
 1

	)

37 
	#_UNIX95
 1

	)

38 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

39 #ñi‡
HAVE_GETPWNAM_R_SUN


40 #unde‡
_POSIX_PTHREAD_SEMANTICS


41 #ñi‡
HAVE_GETPWNAM


42 
	~<±hªad.h
>

47 
	~<as£π.h
>

48 
	~<î∫o.h
>

49 
	~<pwd.h
>

50 
	~<°ddef.h
>

51 
	~<°dlib.h
>

52 
	~<°rög.h
>

53 
	~<sys/ty≥s.h
>

54 
	~<uni°d.h
>

55 
	~<munge.h
>

56 
	~"log.h
"

57 
	~"xgëpw«m.h
"

64 #ifde‡
__GNUC__


65 
	#_UNUSED_
 
	`__©åibuã__
 ((
unu£d
))

	)

67 
	#_UNUSED_


	)

75 
	#MINIMUM_PW_BUF_SIZE
 1024

	)

82 
	sxpwbuf_t
 {

83 *
	mbuf
;

84 
size_t
 
	mÀn
;

92 
size_t
 
_xgëpw«m_buf_gë_sys_size
 ();

94 
_xgëpw«m_buf_grow
 (
xpwbuf_p
 
pwbuÂ
, 
size_t
 
möÀn
);

96 
	$_xgëpw«m_c›y
 (c⁄° 
∑sswd
 *
§c
, ∑sswd *
d°
,

97 
xpwbuf_p
 
pwbuÂ
Ë
_UNUSED_
;

99 
	$_xgëpw«m_c›y_°r
 (c⁄° *
§c
, **
d°p
,

100 **
buÂ
, 
size_t
 *
buÊíp
Ë
_UNUSED_
;

107 
xpwbuf_p


108 
	$xgëpw«m_buf_¸óã
 (
size_t
 
Àn
)

114 
xpwbuf_p
 
pwbuÂ
;

116 i‡(
Àn
 == 0) {

117 
Àn
 = 
	`_xgëpw«m_buf_gë_sys_size
 ();

119 
pwbuÂ
 = 
	`mÆloc
 ( (
xpwbuf_t
));

120 i‡(
pwbuÂ
 =
NULL
) {

121  (
NULL
);

123 
pwbuÂ
->
buf
 = 
	`mÆloc
 (
Àn
);

124 i‡(
pwbuÂ
->
buf
 =
NULL
) {

125 
	`‰ì
 (
pwbuÂ
);

126  (
NULL
);

128 
pwbuÂ
->
Àn
 =Üen;

129 
	`log_msg
 (
LOG_DEBUG
, "Cª©edÖassw‹dÉ¡ry buf„∏o‡sizê%u", 
Àn
);

130  (
pwbuÂ
);

131 
	}
}

135 
	$xgëpw«m_buf_de°roy
 (
xpwbuf_p
 
pwbuÂ
)

139 i‡(
pwbuÂ
 !
NULL
) {

140 i‡(
pwbuÂ
->
buf
 !
NULL
) {

141 
	`‰ì
 (
pwbuÂ
->
buf
);

143 
	`‰ì
 (
pwbuÂ
);

146 
	}
}

149 
size_t


150 
	$xgëpw«m_buf_gë_Àn
 (
xpwbuf_p
 
pwbuÂ
)

155 i‡(
pwbuÂ
 =
NULL
) {

156 
î∫o
 = 
EINVAL
;

159  (
pwbuÂ
->
Àn
);

160 
	}
}

164 
	$xgëpw«m
 (c⁄° *
u£r
, 
∑sswd
 *
pwp
, 
xpwbuf_p
 
pwbuÂ
)

172 #i‡ 
HAVE_GETPWNAM_R_POSIX


173 
∑sswd
 *
rv_pwp
;

174 #ñi‡
HAVE_GETPWNAM_R_AIX


175 #ñi‡
HAVE_GETPWNAM_R_SUN


176 
∑sswd
 *
rv_pwp
;

177 #ñi‡
HAVE_GETPWNAM


178 
±hªad_muãx_t
 
muãx
 = 
PTHREAD_MUTEX_INITIALIZER
;

179 
rv_muãx
;

180 
rv_c›y
;

181 
∑sswd
 *
rv_pwp
;

183 
rv
;

184 
gŸ_îr
;

185 
gŸ_n⁄e
;

187 i‡((
u£r
 =
NULL
) ||

188 (
u£r
[0] == '\0') ||

189 (
pwp
 =
NULL
) ||

190 (
pwbuÂ
 =
NULL
))

192 
î∫o
 = 
EINVAL
;

195 
	`as£π
 (
pwbuÂ
->
buf
 !
NULL
);

196 
	`as£π
 (
pwbuÂ
->
Àn
 > 0);

198 
ª°¨t
:

199 
î∫o
 = 0;

200 
gŸ_îr
 = 0;

201 
gŸ_n⁄e
 = 0;

203 #i‡ 
HAVE_GETPWNAM_R_POSIX


204 
rv
 = 
	`gëpw«m_r
 (
u£r
, 
pwp
, 
pwbuÂ
->
buf
,ÖwbuÂ->
Àn
, &
rv_pwp
);

211 i‡(
rv_pwp
 =
NULL
) {

215 i‡((
rv
 < 0Ë&& (
î∫o
 != 0)) {

216 
rv
 = 
î∫o
;

220 i‡((
rv
 == 0) ||

221 (
rv
 =
ENOENT
) ||

222 (
rv
 =
ESRCH
))

224 
gŸ_n⁄e
 = 1;

229 (
rv
 =
EINTR
) ||

230 (
rv
 =
ERANGE
) ||

231 (
rv
 =
EIO
) ||

232 (
rv
 =
EMFILE
) ||

233 (
rv
 =
ENFILE
))

235 
gŸ_îr
 = 1;

236 
î∫o
 = 
rv
;

241 
gŸ_n⁄e
 = 1;

244 #ñi‡
HAVE_GETPWNAM_R_AIX


245 
rv
 = 
	`gëpw«m_r
 (
u£r
, 
pwp
, 
pwbuÂ
->
buf
,ÖwbuÂ->
Àn
);

246 i‡(
rv
 != 0) {

247 i‡(
î∫o
 =
ESRCH
) {

248 
gŸ_n⁄e
 = 1;

251 
gŸ_îr
 = 1;

254 #ñi‡
HAVE_GETPWNAM_R_SUN


255 
rv_pwp
 = 
	`gëpw«m_r
 (
u£r
, 
pwp
, 
pwbuÂ
->
buf
,ÖwbuÂ->
Àn
);

256 i‡(
rv_pwp
 =
NULL
) {

257 i‡(
î∫o
 == 0) {

258 
gŸ_n⁄e
 = 1;

261 
gŸ_îr
 = 1;

264 #ñi‡
HAVE_GETPWNAM


265 i‡((
rv_muãx
 = 
	`±hªad_muãx_lock
 (&
muãx
)) != 0) {

266 
î∫o
 = 
rv_muãx
;

267 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
, "FailedÅoÜock xgetpwnam mutex");

269 
rv_pwp
 = 
	`gëpw«m
 (
u£r
);

275 i‡(
rv_pwp
 =
NULL
) {

276 i‡((
î∫o
 != 0) &&

277 ((
î∫o
 =
EINTR
) ||

278 (
î∫o
 =
ERANGE
) ||

279 (
î∫o
 =
EIO
) ||

280 (
î∫o
 =
EMFILE
) ||

281 (
î∫o
 =
ENFILE
) ||

282 (
î∫o
 =
ENOMEM
)))

284 
gŸ_îr
 = 1;

287 
gŸ_n⁄e
 = 1;

291 
rv_c›y
 = 
	`_xgëpw«m_c›y
 (
rv_pwp
, 
pwp
, 
pwbuÂ
);

293 i‡((
rv_muãx
 = 
	`±hªad_muãx_u∆ock
 (&
muãx
)) != 0) {

294 
î∫o
 = 
rv_muãx
;

295 
	`log_î∫o
 (
EMUNGE_SNAFU
, 
LOG_ERR
, "FailedÅo unlock xgetpwnam mutex");

297 i‡(
rv_c›y
 < 0) {

302 i‡(
gŸ_n⁄e
) {

303 
î∫o
 = 
ENOENT
;

306 i‡(
gŸ_îr
) {

307 i‡(
î∫o
 =
EINTR
) {

308 
ª°¨t
;

310 i‡(
î∫o
 =
ERANGE
) {

311 
rv
 = 
	`_xgëpw«m_buf_grow
 (
pwbuÂ
, 0);

312 i‡(
rv
 == 0) {

313 
ª°¨t
;

320 
î∫o
 = 0;

322 
	}
}

329 
size_t


330 
	$_xgëpw«m_buf_gë_sys_size
 ()

334 
n
 = -1;

335 
size_t
 
Àn
;

337 #i‡
HAVE_SYSCONF


338 #ifde‡
_SC_GETPW_R_SIZE_MAX


339 
n
 = 
	`sysc⁄f
 (
_SC_GETPW_R_SIZE_MAX
);

343 
Àn
 = (
n
 <
MINIMUM_PW_BUF_SIZE
Ë? MINIMUM_PW_BUF_SIZE : (
size_t
)Ç;

344  (
Àn
);

345 
	}
}

349 
	$_xgëpw«m_buf_grow
 (
xpwbuf_p
 
pwbuÂ
, 
size_t
 
möÀn
)

354 
size_t
 
√wÀn
;

355 *
√wbuf
;

357 
	`as£π
 (
pwbuÂ
 !
NULL
);

358 
	`as£π
 (
pwbuÂ
->
buf
 !
NULL
);

359 
	`as£π
 (
pwbuÂ
->
Àn
 > 0);

361 
√wÀn
 = 
pwbuÂ
->
Àn
;

363 
√wÀn
 *= 2;

364 i‡(
√wÀn
 < 
pwbuÂ
->
Àn
) {

365 
î∫o
 = 
ENOMEM
;

368 } 
√wÀn
 < 
möÀn
);

370 
√wbuf
 = 
	`ªÆloc
 (
pwbuÂ
->
buf
, 
√wÀn
);

371 i‡(
√wbuf
 =
NULL
) {

372 
î∫o
 = 
ENOMEM
;

375 
pwbuÂ
->
buf
 = 
√wbuf
;

376 
pwbuÂ
->
Àn
 = 
√wÀn
;

378 
	`log_msg
 (
LOG_INFO
, "In¸ó£dÖassw‹dÉ¡ry buf„∏sizêtÿ%u", 
√wÀn
);

380 
	}
}

384 
	$_xgëpw«m_c›y
 (c⁄° 
∑sswd
 *
§c
, ∑sswd *
d°
, 
xpwbuf_p
 
pwbuÂ
)

390 
size_t
 
num_byãs
;

391 *
p
;

393 
	`as£π
 (
§c
 !
NULL
);

394 
	`as£π
 (
d°
 !
NULL
);

395 
	`as£π
 (
pwbuÂ
 !
NULL
);

396 
	`as£π
 (
pwbuÂ
->
buf
 !
NULL
);

397 
	`as£π
 (
pwbuÂ
->
Àn
 > 0);

401 
num_byãs
 = 0;

402 i‡(
§c
->
pw_«me
) {

403 
num_byãs
 +
	`°æí
 (
§c
->
pw_«me
) + 1;

405 i‡(
§c
->
pw_∑sswd
) {

406 
num_byãs
 +
	`°æí
 (
§c
->
pw_∑sswd
) + 1;

408 i‡(
§c
->
pw_gecos
) {

409 
num_byãs
 +
	`°æí
 (
§c
->
pw_gecos
) + 1;

411 i‡(
§c
->
pw_dú
) {

412 
num_byãs
 +
	`°æí
 (
§c
->
pw_dú
) + 1;

414 i‡(
§c
->
pw_shñl
) {

415 
num_byãs
 +
	`°æí
 (
§c
->
pw_shñl
) + 1;

419 i‡(
pwbuÂ
->
Àn
 < 
num_byãs
) {

420 i‡(
	`_xgëpw«m_buf_grow
 (
pwbuÂ
, 
num_byãs
) < 0) {

426 
	`as£π
 (
pwbuÂ
->
Àn
 >
num_byãs
);

427 
	`mem£t
 (
d°
, 0,  (*dst));

428 
p
 = 
pwbuÂ
->
buf
;

430 i‡(
_xgëpw«m_c›y_°r


431 (
§c
->
pw_«me
, &(
d°
->pw_«me), &
p
, &
num_byãs
) < 0) {

432 
îr
;

434 i‡(
_xgëpw«m_c›y_°r


435 (
§c
->
pw_∑sswd
, &(
d°
->pw_∑sswd), &
p
, &
num_byãs
) < 0) {

436 
îr
;

438 i‡(
_xgëpw«m_c›y_°r


439 (
§c
->
pw_gecos
, &(
d°
->pw_gecos), &
p
, &
num_byãs
) < 0) {

440 
îr
;

442 i‡(
_xgëpw«m_c›y_°r


443 (
§c
->
pw_dú
, &(
d°
->pw_dú), &
p
, &
num_byãs
) < 0) {

444 
îr
;

446 i‡(
_xgëpw«m_c›y_°r


447 (
§c
->
pw_shñl
, &(
d°
->pw_shñl), &
p
, &
num_byãs
) < 0) {

448 
îr
;

450 
d°
->
pw_uid
 = 
§c
->pw_uid;

451 
d°
->
pw_gid
 = 
§c
->pw_gid;

453 
	`as£π
 (
p
 <
pwbuÂ
->
buf
 +ÖwbuÂ->
Àn
);

456 
îr
:

457 
î∫o
 = 
ERANGE
;

459 
	}
}

463 
	$_xgëpw«m_c›y_°r
 (c⁄° *
§c
, **
d°p
,

464 **
buÂ
, 
size_t
 *
buÊíp
)

472 
size_t
 
n
;

474 
	`as£π
 (
d°p
 !
NULL
);

475 
	`as£π
 (
buÂ
 !
NULL
);

476 
	`as£π
 (*
buÂ
 !
NULL
);

477 
	`as£π
 (
buÊíp
 !
NULL
);

479 i‡(
§c
 =
NULL
) {

480 *
d°p
 = 
NULL
;

483 
n
 = 
	`°æí
 (
§c
) + 1;

484 i‡(*
buÊíp
 < 
n
) {

487 *
d°p
 = 
	`°r˝y
 (*
buÂ
, 
§c
);

488 *
buÂ
 +
n
;

489 *
buÊíp
 -
n
;

490  (
n
);

491 
	}
}

	@src/munged/xgetpwnam.h

29 #i‚de‡
XGETPWNAM_H


30 
	#XGETPWNAM_H


	)

32 
	~<pwd.h
>

33 
	~<°ddef.h
>

40 
xpwbuf_t
 * 
	txpwbuf_p
;

47 
xpwbuf_p
 
xgëpw«m_buf_¸óã
 (
size_t
 
Àn
);

49 
xgëpw«m_buf_de°roy
 (
xpwbuf_p
 
pwbuÂ
);

51 
size_t
 
xgëpw«m_buf_gë_Àn
 (
xpwbuf_p
 
pwbuÂ
);

53 
xgëpw«m
 (c⁄° *
u£r
, 
∑sswd
 *
pwp
, 
xpwbuf_p
 
pwbuÂ
);

	@src/munged/zip.c

29 #i‡
HAVE_CONFIG_H


30 
	~<c⁄fig.h
>

33 #i‡
HAVE_BZLIB_H


34 
	~<°dio.h
>

35 
	~<bzlib.h
>

38 #i‡
HAVE_ZLIB_H


39 
	~<zlib.h
>

42 
	~<as£π.h
>

43 
	~<öây≥s.h
>

44 
	~<√töë/ö.h
>

45 
	~<°rög.h
>

46 
	~<munge.h
>

47 
	~"comm⁄.h
"

48 
	~"zù.h
"

69 
	#ZIP_MAGIC
 0xCACACACA

	)

77 
uöt32_t
 
	mmagic
;

78 
uöt32_t
 
	mÀngth
;

79 } 
	tzù_mëa_t
;

87 
	$zù_is_vÆid_ty≥
 (
munge_zù_t
 
ty≥
)

89 #i‡
HAVE_PKG_BZLIB


90 i‡(
ty≥
 =
MUNGE_ZIP_BZLIB
)

94 #i‡
HAVE_PKG_ZLIB


95 i‡(
ty≥
 =
MUNGE_ZIP_ZLIB
)

100 
	}
}

104 
	$zù_com¥ess_block
 (
munge_zù_t
 
ty≥
,

105 *
d°
, *
pd°Àn
, c⁄° *
§c
, 
§˛í
)

107 *
xd°
;

108 
xd°Àn
;

109 *
x§c
;

110 
x§˛í
;

111 
zù_mëa_t
 *
pmëa
;

113 
	`as£π
 (
d°
 !
NULL
);

114 
	`as£π
 (
pd°Àn
 !
NULL
);

115 
	`as£π
 (
§c
 !
NULL
);

117 i‡(!
	`zù_is_vÆid_ty≥
 (
ty≥
)) {

120 i‡(*
pd°Àn
 <  (
zù_mëa_t
)) {

123 i‡(
§˛í
 <= 0) {

126 
xd°
 = (*Ë
d°
 +  (
zù_mëa_t
);

127 
xd°Àn
 = *
pd°Àn
 -  (
zù_mëa_t
);

128 
x§c
 = (*Ë
§c
;

129 
x§˛í
 = 
§˛í
;

131 #i‡
HAVE_PKG_BZLIB


132 i‡(
ty≥
 =
MUNGE_ZIP_BZLIB
) {

133 i‡(
	`BZ2_bzBuffToBuffCom¥ess
 ((*Ë
xd°
, &
xd°Àn
,

134 (*Ë
x§c
, 
x§˛í
, 9, 0, 0Ë!
BZ_OK
)

139 #i‡
HAVE_PKG_ZLIB


145 i‡(
ty≥
 =
MUNGE_ZIP_ZLIB
) {

146 
xd°Àn_ul
 = 
xd°Àn
;

147 i‡(
	`com¥ess
 (
xd°
, &
xd°Àn_ul
,

148 
x§c
, (Ë
x§˛í
Ë!
Z_OK
)

150 
xd°Àn
 = 
xd°Àn_ul
;

154 *
pd°Àn
 = 
xd°Àn
 +  (
zù_mëa_t
);

155 
pmëa
 = 
d°
;

156 
pmëa
->
magic
 = 
	`ht⁄l
 (
ZIP_MAGIC
);

157 
pmëa
->
Àngth
 = 
	`ht⁄l
 (
x§˛í
);

159 
	}
}

163 
	$zù_decom¥ess_block
 (
munge_zù_t
 
ty≥
,

164 *
d°
, *
pd°Àn
, c⁄° *
§c
, 
§˛í
)

166 *
xd°
;

167 
xd°Àn
;

168 *
x§c
;

169 
x§˛í
;

170 
n
;

172 
	`as£π
 (
d°
 !
NULL
);

173 
	`as£π
 (
pd°Àn
 !
NULL
);

174 
	`as£π
 (
§c
 !
NULL
);

176 i‡(!
	`zù_is_vÆid_ty≥
 (
ty≥
)) {

179 
n
 = 
	`zù_decom¥ess_Àngth
 (
ty≥
, 
§c
, 
§˛í
);

180 i‡(
n
 < 0) {

183 i‡(*
pd°Àn
 < 
n
) {

186 i‡(
§˛í
 <= 0) {

189 
xd°
 = 
d°
;

190 
xd°Àn
 = *
pd°Àn
;

191 
x§c
 = (*Ë
§c
 +  (
zù_mëa_t
);

192 
x§˛í
 = 
§˛í
 -  (
zù_mëa_t
);

194 #i‡
HAVE_PKG_BZLIB


195 i‡(
ty≥
 =
MUNGE_ZIP_BZLIB
) {

196 i‡(
	`BZ2_bzBuffToBuffDecom¥ess
 ((*Ë
xd°
, &
xd°Àn
,

197 (*Ë
x§c
, 
x§˛í
, 0, 0Ë!
BZ_OK
)

202 #i‡
HAVE_PKG_ZLIB


208 i‡(
ty≥
 =
MUNGE_ZIP_ZLIB
) {

209 
xd°Àn_ul
 = 
xd°Àn
;

210 i‡(
	`uncom¥ess
 (
xd°
, &
xd°Àn_ul
,

211 
x§c
, (Ë
x§˛í
Ë!
Z_OK
)

213 
xd°Àn
 = 
xd°Àn_ul
;

217 *
pd°Àn
 = 
xd°Àn
;

219 
	}
}

223 
	$zù_com¥ess_Àngth
 (
munge_zù_t
 
ty≥
, c⁄° *
§c
, 
Àn
)

234 #i‡
HAVE_PKG_BZLIB


235 i‡(
ty≥
 =
MUNGE_ZIP_BZLIB
)

236  ((Ë((
Àn
 * 1.01Ë+ 600 + 1 +  (
zù_mëa_t
)));

239 #i‡
HAVE_PKG_ZLIB


240 i‡(
ty≥
 =
MUNGE_ZIP_ZLIB
)

241  ((Ë((
Àn
 * 1.001Ë+ 12 + 1 +  (
zù_mëa_t
)));

245 
	}
}

249 
	$zù_decom¥ess_Àngth
 (
munge_zù_t
 
ty≥
, c⁄° *
§c
, 
Àn
)

253 
zù_mëa_t
 *
pmëa
;

255 
	`as£π
 (
§c
 !
NULL
);

257 i‡(
Àn
 <  (
zù_mëa_t
)) {

260 
pmëa
 = (*Ë
§c
;

261 i‡(
	`¡ohl
 (
pmëa
->
magic
Ë!
ZIP_MAGIC
) {

264  ((Ë
	`¡ohl
 (
pmëa
->
Àngth
));

265 
	}
}

268 
munge_zù_t


269 
	$zù_£À˘_deÁu…_ty≥
 (
munge_zù_t
 
ty≥
)

275 
munge_zù_t
 
z
;

276 
munge_zù_t
 
z_def
;

278 
z
 = 
MUNGE_ZIP_DEFAULT
;

279 
z_def
 = 
MUNGE_ZIP_NONE
;

281 #i‡
HAVE_PKG_BZLIB


282 
z_def
 = 
MUNGE_ZIP_BZLIB
;

283 i‡(
ty≥
 =
MUNGE_ZIP_BZLIB
) {

284 
z
 = 
MUNGE_ZIP_BZLIB
;

288 #i‡
HAVE_PKG_ZLIB


289 
z_def
 = 
MUNGE_ZIP_ZLIB
;

290 i‡(
ty≥
 =
MUNGE_ZIP_ZLIB
) {

291 
z
 = 
MUNGE_ZIP_ZLIB
;

295 i‡(
ty≥
 =
MUNGE_ZIP_NONE
) {

296 
z
 = 
MUNGE_ZIP_NONE
;

298 i‡(
z
 =
MUNGE_ZIP_DEFAULT
) {

299 
z
 = 
z_def
;

301  (
z
);

302 
	}
}

	@src/munged/zip.h

29 #i‚de‡
ZIP_H


30 
	#ZIP_H


	)

33 #i‡
HAVE_CONFIG_H


34 
	~<c⁄fig.h
>

37 
	~<munge.h
>

38 
	~"comm⁄.h
"

45 
zù_is_vÆid_ty≥
 (
munge_zù_t
 
ty≥
);

52 
zù_com¥ess_block
 (
munge_zù_t
 
ty≥
,

53 *
d°
, *
pd°Àn
, c⁄° *
§c
, 
§˛í
);

63 
zù_decom¥ess_block
 (
munge_zù_t
 
ty≥
,

64 *
d°
, *
pd°Àn
, c⁄° *
§c
, 
§˛í
);

74 
zù_com¥ess_Àngth
 (
munge_zù_t
 
ty≥
, c⁄° *
§c
, 
Àn
);

81 
zù_decom¥ess_Àngth
 (
munge_zù_t
 
ty≥
, c⁄° *
§c
, 
Àn
);

87 
munge_zù_t
 
zù_£À˘_deÁu…_ty≥
 (munge_zù_à
ty≥
);

	@/usr/include/arpa/inet.h

18 #i‚de‡
_ARPA_INET_H


19 
	#_ARPA_INET_H
 1

	)

21 
	~<„©uªs.h
>

22 
	~<√töë/ö.h
>

25 #i‚de‡
__sockÀn_t_deföed


26 
__sockÀn_t
 
	tsockÀn_t
;

27 
	#__sockÀn_t_deföed


	)

30 
__BEGIN_DECLS


34 
ö_addr_t
 
	$öë_addr
 (c⁄° *
__˝
Ë
__THROW
;

37 
ö_addr_t
 
	$öë_ aof
 (
ö_addr
 
__ö
Ë
__THROW
;

41 
ö_addr
 
	$öë_makóddr
 (
ö_addr_t
 
__√t
, in_addr_à
__ho°
)

42 
__THROW
;

45 
ö_addr_t
 
	$öë_√tof
 (
ö_addr
 
__ö
Ë
__THROW
;

49 
ö_addr_t
 
	$öë_√tw‹k
 (c⁄° *
__˝
Ë
__THROW
;

53 *
	$öë_¡ﬂ
 (
ö_addr
 
__ö
Ë
__THROW
;

58 
	$öë_±⁄
 (
__af
, c⁄° *
__ª°ri˘
 
__˝
,

59 *
__ª°ri˘
 
__buf
Ë
__THROW
;

64 c⁄° *
	$öë_¡›
 (
__af
, c⁄° *
__ª°ri˘
 
__˝
,

65 *
__ª°ri˘
 
__buf
, 
sockÀn_t
 
__Àn
)

66 
__THROW
;

70 #ifde‡
__USE_MISC


73 
	$öë_©⁄
 (c⁄° *
__˝
, 
ö_addr
 *
__öp
Ë
__THROW
;

77 *
	$öë_√è
 (
ö_addr_t
 
__√t
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

82 *
	$öë_√t_¡›
 (
__af
, c⁄° *
__˝
, 
__bôs
,

83 *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

88 
	$öë_√t_±⁄
 (
__af
, c⁄° *
__˝
,

89 *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

94 
	$öë_nßp_addr
 (c⁄° *
__˝
,

95 *
__buf
, 
__Àn
Ë
__THROW
;

99 *
	$öë_nßp_¡ﬂ
 (
__Àn
, c⁄° *
__˝
,

100 *
__buf
Ë
__THROW
;

103 
__END_DECLS


	@/usr/include/assert.h

22 #ifdef 
_ASSERT_H


24 #unde‡
_ASSERT_H


25 #unde‡
as£π


26 #unde‡
__ASSERT_VOID_CAST


28 #ifdef 
__USE_GNU


29 #unde‡
as£π_≥º‹


34 
	#_ASSERT_H
 1

	)

35 
	~<„©uªs.h
>

37 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,95)

38 
	#__ASSERT_VOID_CAST
 
°©ic_ˇ°
<>

	)

40 
	#__ASSERT_VOID_CAST
 ()

	)

48 #ifdef 
NDEBUG


50 
	#as£π
(
ex¥
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

58 #ifdef 
__USE_GNU


59 
	#as£π_≥º‹
(
î∫um
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

64 #i‚de‡
_ASSERT_H_DECLS


65 
	#_ASSERT_H_DECLS


	)

66 
__BEGIN_DECLS


69 
	$__as£π_Áû
 (c⁄° *
__as£πi⁄
, c⁄° *
__fûe
,

70 
__löe
, c⁄° *
__fun˘i⁄
)

71 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

74 
	$__as£π_≥º‹_Áû
 (
__î∫um
, c⁄° *
__fûe
,

75 
__löe
, c⁄° *
__fun˘i⁄
)

76 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

81 
	$__as£π
 (c⁄° *
__as£πi⁄
, c⁄° *
__fûe
, 
__löe
)

82 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

85 
__END_DECLS


88 
	#as£π
(
ex¥
) \

89 ((
ex¥
) \

90 ? 
	`__ASSERT_VOID_CAST
 (0) \

91 : 
	`__as£π_Áû
 (
	`__STRING
(
ex¥
), 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

93 #ifdef 
__USE_GNU


94 
	#as£π_≥º‹
(
î∫um
) \

95 (!(
î∫um
) \

96 ? 
	`__ASSERT_VOID_CAST
 (0) \

97 : 
	`__as£π_≥º‹_Áû
 ((
î∫um
), 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

105 #i‡
deföed
 
__˝lu•lus
 ? 
	`__GNUC_PREREQ
 (2, 6) : __GNUC_PREREQ (2, 4)

106 
	#__ASSERT_FUNCTION
 
__PRETTY_FUNCTION__


	)

108 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

109 
	#__ASSERT_FUNCTION
 
__func__


	)

111 
	#__ASSERT_FUNCTION
 ((c⁄° *Ë0)

	)

118 #i‡
deföed
 
__USE_ISOC11
 && !deföed 
__˝lu•lus


120 #unde‡
°©ic_as£π


121 
	#°©ic_as£π
 
_Sètic_as£π


	)

	@/usr/include/ctype.h

22 #i‚def 
_CTYPE_H


23 
	#_CTYPE_H
 1

	)

25 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 
	g__BEGIN_DECLS


30 #i‚de‡
_ISbô


39 
	~<ídün.h
>

40 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


41 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

43 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

48 
	m_ISuµî
 = 
_ISbô
 (0),

49 
	m_ISlowî
 = 
_ISbô
 (1),

50 
	m_ISÆpha
 = 
_ISbô
 (2),

51 
	m_ISdigô
 = 
_ISbô
 (3),

52 
	m_ISxdigô
 = 
_ISbô
 (4),

53 
	m_IS•a˚
 = 
_ISbô
 (5),

54 
	m_IS¥öt
 = 
_ISbô
 (6),

55 
	m_ISgøph
 = 
_ISbô
 (7),

56 
	m_ISbœnk
 = 
_ISbô
 (8),

57 
	m_IS˙ål
 = 
_ISbô
 (9),

58 
	m_ISpun˘
 = 
_ISbô
 (10),

59 
	m_ISÆnum
 = 
_ISbô
 (11)

79 c⁄° **
	$__˘y≥_b_loc
 ()

80 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

81 c⁄° 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

82 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

83 c⁄° 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

84 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

87 #i‚de‡
__˝lu•lus


88 
	#__is˘y≥
(
c
, 
ty≥
) \

89 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

90 #ñi‡
deföed
 
__USE_EXTERN_INLINES


91 
	#__is˘y≥_f
(
ty≥
) \

92 
__exã∫_ölöe
 \

93 
is
##
	`ty≥
 (
__c
Ë
__THROW
 \

95  (*
	`__˘y≥_b_loc
 ())[(Ë(
__c
)] & (Ë
_IS
##
ty≥
; \

96 
	}

	)
}

99 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

100 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

102 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

104 
__BEGIN_NAMESPACE_STD


110 
__ex˘y≥
 (
iß um
);

111 
__ex˘y≥
 (
ißÕha
);

112 
__ex˘y≥
 (
is˙ål
);

113 
__ex˘y≥
 (
isdigô
);

114 
__ex˘y≥
 (
i¶owî
);

115 
__ex˘y≥
 (
isgøph
);

116 
__ex˘y≥
 (
i•röt
);

117 
__ex˘y≥
 (
i•un˘
);

118 
__ex˘y≥
 (
is•a˚
);

119 
__ex˘y≥
 (
isuµî
);

120 
__ex˘y≥
 (
isxdigô
);

124 
	$tﬁowî
 (
__c
Ë
__THROW
;

127 
	$touµî
 (
__c
Ë
__THROW
;

129 
__END_NAMESPACE_STD


133 #ifdef 
__USE_ISOC99


134 
__BEGIN_NAMESPACE_C99


136 
	`__ex˘y≥
 (
isbœnk
);

138 
__END_NAMESPACE_C99


141 #ifde‡
__USE_GNU


143 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

146 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


150 
	$ißscii
 (
__c
Ë
__THROW
;

154 
	$tﬂscii
 (
__c
Ë
__THROW
;

158 
	`__ex˘y≥
 (
_touµî
);

159 
	`__ex˘y≥
 (
_tﬁowî
);

163 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

164 (
__exãnsi⁄__
 \

165 ({ 
__ªs
; \

166 i‡( (
c
) > 1) \

168 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

170 
__c
 = (
c
); \

171 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

174 
__ªs
 = 
f
 
¨gs
; \

177 
__ªs
 = (
a
)[(Ë(
c
)]; \

178 
__ªs
; 
	}
}))

	)

180 #i‡!
deföed
 
__NO_CTYPE


181 #ifde‡
__is˘y≥_f


182 
	$__is˘y≥_f
 (
Ænum
)

183 
	$__is˘y≥_f
 (
Æpha
)

184 
	$__is˘y≥_f
 (
˙ål
)

185 
	$__is˘y≥_f
 (
digô
)

186 
	$__is˘y≥_f
 (
lowî
)

187 
	$__is˘y≥_f
 (
gøph
)

188 
	$__is˘y≥_f
 (
¥öt
)

189 
	$__is˘y≥_f
 (
pun˘
)

190 
	$__is˘y≥_f
 (
•a˚
)

191 
	$__is˘y≥_f
 (
uµî
)

192 
	$__is˘y≥_f
 (
xdigô
)

193 #ifde‡
__USE_ISOC99


194 
	$__is˘y≥_f
 (
bœnk
)

196 #ñi‡
deföed
 
__is˘y≥


197 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

198 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

199 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

200 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

201 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

202 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

203 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

204 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

205 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

206 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

207 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

208 #ifde‡
__USE_ISOC99


209 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

213 #ifde‡
__USE_EXTERN_INLINES


214 
__exã∫_ölöe
 

215 
	`__NTH
 (
	$tﬁowî
 (
__c
))

217  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

218 
	}
}

220 
__exã∫_ölöe
 

221 
__NTH
 (
	$touµî
 (
__c
))

223  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

224 
	}
}

227 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


228 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

229 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

232 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


233 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

234 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

236 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

237 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

243 #ifde‡
__USE_XOPEN2K8


257 
	~<xloˇÀ.h
>

261 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

262 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

264 
	#__ex˘y≥_l
(
«me
) \

265 
	`«me
 (, 
__loˇÀ_t
Ë
__THROW


	)

271 
__ex˘y≥_l
 (
iß um_l
);

272 
__ex˘y≥_l
 (
ißÕha_l
);

273 
__ex˘y≥_l
 (
is˙ål_l
);

274 
__ex˘y≥_l
 (
isdigô_l
);

275 
__ex˘y≥_l
 (
i¶owî_l
);

276 
__ex˘y≥_l
 (
isgøph_l
);

277 
__ex˘y≥_l
 (
i•röt_l
);

278 
__ex˘y≥_l
 (
i•un˘_l
);

279 
__ex˘y≥_l
 (
is•a˚_l
);

280 
__ex˘y≥_l
 (
isuµî_l
);

281 
__ex˘y≥_l
 (
isxdigô_l
);

283 
__ex˘y≥_l
 (
isbœnk_l
);

287 
	$__tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

288 
	$tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

291 
	$__touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

292 
	$touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

294 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


295 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

296 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

297 
	#__touµî_l
(
c
, 
loˇÀ
) \

298 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

299 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

300 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

304 #i‚de‡
__NO_CTYPE


305 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

306 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

307 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

308 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

309 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

310 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

311 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

312 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

313 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

314 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

315 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

317 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

319 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


320 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

321 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

324 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

325 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

326 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

327 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

328 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

329 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

330 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

331 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

332 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

333 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

334 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

336 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

338 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


339 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

340 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

347 
__END_DECLS


	@/usr/include/errno.h

22 #i‚def 
_ERRNO_H


26 #i‚def 
__√ed_Em©h


27 
	#_ERRNO_H
 1

	)

28 
	~<„©uªs.h
>

31 
	g__BEGIN_DECLS


35 
	~<bôs/î∫o.h
>

36 #unde‡
__√ed_Em©h


38 #ifdef 
_ERRNO_H


45 #i‚def 
î∫o


46 
î∫o
;

49 #ifde‡
__USE_GNU


54 *
¥ogøm_övoˇti⁄_«me
, *
¥ogøm_övoˇti⁄_sh‹t_«me
;

58 
	g__END_DECLS


66 #i‡
deföed
 
__USE_GNU
 || deföed 
__√ed_îr‹_t


67 #i‚de‡
__îr‹_t_deföed


68 
	tîr‹_t
;

69 
	#__îr‹_t_deföed
 1

	)

71 #unde‡
__√ed_îr‹_t


	@/usr/include/fcntl.h

22 #i‚def 
_FCNTL_H


23 
	#_FCNTL_H
 1

	)

25 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


31 
	~<bôs/ty≥s.h
>

35 
	~<bôs/f˙é.h
>

40 #i‚de‡
__mode_t_deföed


41 
__mode_t
 
	tmode_t
;

42 
	#__mode_t_deföed


	)

45 #i‚de‡
__off_t_deföed


46 #i‚de‡
__USE_FILE_OFFSET64


47 
__off_t
 
	toff_t
;

49 
__off64_t
 
	toff_t
;

51 
	#__off_t_deföed


	)

54 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


55 
__off64_t
 
	toff64_t
;

56 
	#__off64_t_deföed


	)

59 #i‚de‡
__pid_t_deföed


60 
__pid_t
 
	tpid_t
;

61 
	#__pid_t_deföed


	)

65 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


66 
	#__√ed_time•ec


	)

67 
	~<time.h
>

68 
	~<bôs/°©.h
>

70 
	#S_IFMT
 
__S_IFMT


	)

71 
	#S_IFDIR
 
__S_IFDIR


	)

72 
	#S_IFCHR
 
__S_IFCHR


	)

73 
	#S_IFBLK
 
__S_IFBLK


	)

74 
	#S_IFREG
 
__S_IFREG


	)

75 #ifde‡
__S_IFIFO


76 
	#S_IFIFO
 
__S_IFIFO


	)

78 #ifde‡
__S_IFLNK


79 
	#S_IFLNK
 
__S_IFLNK


	)

81 #i‡(
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8
Ë&& deföed 
__S_IFSOCK


82 
	#S_IFSOCK
 
__S_IFSOCK


	)

87 
	#S_ISUID
 
__S_ISUID


	)

88 
	#S_ISGID
 
__S_ISGID


	)

90 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


92 
	#S_ISVTX
 
__S_ISVTX


	)

95 
	#S_IRUSR
 
__S_IREAD


	)

96 
	#S_IWUSR
 
__S_IWRITE


	)

97 
	#S_IXUSR
 
__S_IEXEC


	)

99 
	#S_IRWXU
 (
__S_IREAD
|
__S_IWRITE
|
__S_IEXEC
)

	)

101 
	#S_IRGRP
 (
S_IRUSR
 >> 3Ë

	)

102 
	#S_IWGRP
 (
S_IWUSR
 >> 3Ë

	)

103 
	#S_IXGRP
 (
S_IXUSR
 >> 3Ë

	)

105 
	#S_IRWXG
 (
S_IRWXU
 >> 3)

	)

107 
	#S_IROTH
 (
S_IRGRP
 >> 3Ë

	)

108 
	#S_IWOTH
 (
S_IWGRP
 >> 3Ë

	)

109 
	#S_IXOTH
 (
S_IXGRP
 >> 3Ë

	)

111 
	#S_IRWXO
 (
S_IRWXG
 >> 3)

	)

114 #ifdef 
__USE_MISC


115 #i‚de‡
R_OK


118 
	#R_OK
 4

	)

119 
	#W_OK
 2

	)

120 
	#X_OK
 1

	)

121 
	#F_OK
 0

	)

126 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


127 
	#SEEK_SET
 0

	)

128 
	#SEEK_CUR
 1

	)

129 
	#SEEK_END
 2

	)

137 
f˙é
 (
__fd
, 
__cmd
, ...);

145 #i‚de‡
__USE_FILE_OFFSET64


146 
	$›í
 (c⁄° *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

148 #ifde‡
__REDIRECT


149 
	`__REDIRECT
 (
›í
, (c⁄° *
__fûe
, 
__oÊag
, ...), 
›í64
)

150 
	`__n⁄nuŒ
 ((1));

152 
	#›í
 
›í64


	)

155 #ifde‡
__USE_LARGEFILE64


156 
	$›í64
 (c⁄° *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

159 #ifde‡
__USE_ATFILE


169 #i‚de‡
__USE_FILE_OFFSET64


170 
	$›í©
 (
__fd
, c⁄° *
__fûe
, 
__oÊag
, ...)

171 
	`__n⁄nuŒ
 ((2));

173 #ifde‡
__REDIRECT


174 
	`__REDIRECT
 (
›í©
, (
__fd
, c⁄° *
__fûe
, 
__oÊag
,

175 ...), 
›í©64
Ë
	`__n⁄nuŒ
 ((2));

177 
	#›í©
 
›í©64


	)

180 #ifde‡
__USE_LARGEFILE64


181 
	$›í©64
 (
__fd
, c⁄° *
__fûe
, 
__oÊag
, ...)

182 
	`__n⁄nuŒ
 ((2));

191 #i‚de‡
__USE_FILE_OFFSET64


192 
	$¸ót
 (c⁄° *
__fûe
, 
mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

194 #ifde‡
__REDIRECT


195 
	`__REDIRECT
 (
¸ót
, (c⁄° *
__fûe
, 
mode_t
 
__mode
),

196 
¸ót64
Ë
	`__n⁄nuŒ
 ((1));

198 
	#¸ót
 
¸ót64


	)

201 #ifde‡
__USE_LARGEFILE64


202 
	$¸ót64
 (c⁄° *
__fûe
, 
mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

205 #i‡!
deföed
 
F_LOCK
 && (deföed 
__USE_MISC
 || (deföed 
__USE_XOPEN_EXTENDED
 \

206 && !
deföed
 
__USE_POSIX
))

215 
	#F_ULOCK
 0

	)

216 
	#F_LOCK
 1

	)

217 
	#F_TLOCK
 2

	)

218 
	#F_TEST
 3

	)

220 #i‚de‡
__USE_FILE_OFFSET64


221 
	`lockf
 (
__fd
, 
__cmd
, 
off_t
 
__Àn
);

223 #ifde‡
__REDIRECT


224 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
), 
lockf64
);

226 
	#lockf
 
lockf64


	)

229 #ifde‡
__USE_LARGEFILE64


230 
	`lockf64
 (
__fd
, 
__cmd
, 
off64_t
 
__Àn
);

234 #ifde‡
__USE_XOPEN2K


237 #i‚de‡
__USE_FILE_OFFSET64


238 
	$posix_Ádvi£
 (
__fd
, 
off_t
 
__off£t
, off_à
__Àn
,

239 
__advi£
Ë
__THROW
;

241 #ifde‡
__REDIRECT_NTH


242 
	`__REDIRECT_NTH
 (
posix_Ádvi£
, (
__fd
, 
__off64_t
 
__off£t
,

243 
__off64_t
 
__Àn
, 
__advi£
),

244 
posix_Ádvi£64
);

246 
	#posix_Ádvi£
 
posix_Ádvi£64


	)

249 #ifde‡
__USE_LARGEFILE64


250 
	$posix_Ádvi£64
 (
__fd
, 
off64_t
 
__off£t
, off64_à
__Àn
,

251 
__advi£
Ë
__THROW
;

259 #i‚de‡
__USE_FILE_OFFSET64


260 
	`posix_ÁŒoˇã
 (
__fd
, 
off_t
 
__off£t
, off_à
__Àn
);

262 #ifde‡
__REDIRECT


263 
	`__REDIRECT
 (
posix_ÁŒoˇã
, (
__fd
, 
__off64_t
 
__off£t
,

264 
__off64_t
 
__Àn
),

265 
posix_ÁŒoˇã64
);

267 
	#posix_ÁŒoˇã
 
posix_ÁŒoˇã64


	)

270 #ifde‡
__USE_LARGEFILE64


271 
	`posix_ÁŒoˇã64
 (
__fd
, 
off64_t
 
__off£t
, off64_à
__Àn
);

277 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄
 \

278 && 
deföed
 
__va_¨g_∑ck_Àn


279 
	~<bôs/f˙é2.h
>

282 
__END_DECLS


	@/usr/include/getopt.h

19 #i‚de‡
_GETOPT_H


21 #i‚de‡
__√ed_gë›t


22 
	#_GETOPT_H
 1

	)

32 #i‡!
deföed
 
__GNU_LIBRARY__


33 
	~<˘y≥.h
>

36 #i‚de‡
__THROW


37 #i‚de‡
__GNUC_PREREQ


38 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë(0)

	)

40 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

41 
	#__THROW
 
	`throw
 ()

	)

43 
	#__THROW


	)

47 #ifdef 
__˝lu•lus


57 *
›èrg
;

71 
›töd
;

76 
›ãº
;

80 
›t›t
;

82 #i‚de‡
__√ed_gë›t


104 
	s›ti⁄


106 c⁄° *
	g«me
;

109 
	ghas_¨g
;

110 *
	gÊag
;

111 
	gvÆ
;

116 
	#no_¨gumít
 0

	)

117 
	#ªquúed_¨gumít
 1

	)

118 
	#›ti⁄Æ_¨gumít
 2

	)

146 #ifde‡
__GNU_LIBRARY__


150 
gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

151 
__THROW
;

153 #i‡
deföed
 
__√ed_gë›t
 && deföed 
__USE_POSIX2
 \

154 && !
deföed
 
	g__USE_POSIX_IMPLICITLY
 && !deföed 
	g__USE_GNU


158 #ifde‡
__REDIRECT


159 
__REDIRECT_NTH
 (
gë›t
, (
___¨gc
, *c⁄° *
___¨gv
,

160 c⁄° *
__sh‹t›ts
),

161 
__posix_gë›t
);

163 
__posix_gë›t
 (
___¨gc
, *c⁄° *
___¨gv
,

164 c⁄° *
__sh‹t›ts
Ë
__THROW
;

165 
	#gë›t
 
__posix_gë›t


	)

169 
gë›t
 ();

172 #i‚de‡
__√ed_gë›t


173 
gë›t_l⁄g
 (
___¨gc
, *c⁄° *
___¨gv
,

174 c⁄° *
__sh‹t›ts
,

175 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

176 
__THROW
;

177 
gë›t_l⁄g_⁄ly
 (
___¨gc
, *c⁄° *
___¨gv
,

178 c⁄° *
__sh‹t›ts
,

179 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

180 
__THROW
;

184 #ifdef 
__˝lu•lus


189 #unde‡
__√ed_gë›t


	@/usr/include/gnu-versions.h

19 #i‚de‡
_GNU_VERSIONS_H


20 
	#_GNU_VERSIONS_H
 1

	)

46 
	#_GNU_OBSTACK_INTERFACE_VERSION
 1

	)

47 
	#_GNU_REGEX_INTERFACE_VERSION
 1

	)

48 
	#_GNU_GLOB_INTERFACE_VERSION
 1

	)

49 
	#_GNU_GETOPT_INTERFACE_VERSION
 2

	)

	@/usr/include/grp.h

22 #i‚def 
_GRP_H


23 
	#_GRP_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


29 
	~<bôs/ty≥s.h
>

31 
	#__√ed_size_t


	)

32 
	~<°ddef.h
>

36 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K
Ë&& !deföed 
__gid_t_deföed


37 
__gid_t
 
	tgid_t
;

38 
	#__gid_t_deföed


	)

42 
	sgroup


44 *
	mgr_«me
;

45 *
	mgr_∑sswd
;

46 
__gid_t
 
	mgr_gid
;

47 **
	mgr_mem
;

51 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_GNU


52 
	#__√ed_FILE


	)

53 
	~<°dio.h
>

57 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


62 
£tgª¡
 ();

65 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 \

66 || 
deföed
 
__USE_XOPEN2K8


71 
ídgª¡
 ();

77 
group
 *
gëgª¡
 ();

80 #ifdef 
__USE_SVID


87 
group
 *
fgëgª¡
 (
FILE
 *
__°ªam
);

90 #ifde‡
__USE_GNU


97 
putgª¡
 (c⁄° 
group
 *
__ª°ri˘
 
__p
,

98 
FILE
 *
__ª°ri˘
 
__f
);

105 
group
 *
gëgrgid
 (
__gid_t
 
__gid
);

111 
group
 *
gëg∫am
 (c⁄° *
__«me
);

113 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


115 #ifde‡
__USE_MISC


118 
	#NSS_BUFLEN_GROUP
 1024

	)

134 #ifde‡
__USE_GNU


135 
gëgª¡_r
 (
group
 *
__ª°ri˘
 
__ªsu…buf
,

136 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

137 
group
 **
__ª°ri˘
 
__ªsu…
);

144 
gëgrgid_r
 (
__gid_t
 
__gid
, 
group
 *
__ª°ri˘
 
__ªsu…buf
,

145 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

146 
group
 **
__ª°ri˘
 
__ªsu…
);

152 
gëg∫am_r
 (c⁄° *
__ª°ri˘
 
__«me
,

153 
group
 *
__ª°ri˘
 
__ªsu…buf
,

154 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

155 
group
 **
__ª°ri˘
 
__ªsu…
);

157 #ifdef 
__USE_SVID


165 
fgëgª¡_r
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

166 
group
 *
__ª°ri˘
 
__ªsu…buf
,

167 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

168 
group
 **
__ª°ri˘
 
__ªsu…
);

174 #ifdef 
__USE_BSD


176 
	#__√ed_size_t


	)

177 
	~<°ddef.h
>

180 
	$£tgroups
 (
size_t
 
__n
, c⁄° 
__gid_t
 *
__groups
Ë
__THROW
;

190 
	`gëgrou∂i°
 (c⁄° *
__u£r
, 
__gid_t
 
__group
,

191 
__gid_t
 *
__groups
, *
__ngroups
);

201 
	`öôgroups
 (c⁄° *
__u£r
, 
__gid_t
 
__group
);

205 
__END_DECLS


	@/usr/include/inttypes.h

22 #i‚de‡
_INTTYPES_H


23 
	#_INTTYPES_H
 1

	)

25 
	~<„©uªs.h
>

27 
	~<°döt.h
>

30 #i‚de‡
____gwch¨_t_deföed


31 #ifde‡
__˝lu•lus


32 
	#__gwch¨_t
 
wch¨_t


	)

33 #ñi‡
deföed
 
__WCHAR_TYPE__


34 
__WCHAR_TYPE__
 
	t__gwch¨_t
;

36 
	#__√ed_wch¨_t


	)

37 
	~<°ddef.h
>

38 
wch¨_t
 
	t__gwch¨_t
;

40 
	#____gwch¨_t_deföed
 1

	)

43 #i‡
__WORDSIZE
 == 64

44 
	#__PRI64_PREFIX
 "l"

	)

45 
	#__PRIPTR_PREFIX
 "l"

	)

47 
	#__PRI64_PREFIX
 "Œ"

	)

48 
	#__PRIPTR_PREFIX


	)

54 
	#PRId8
 "d"

	)

55 
	#PRId16
 "d"

	)

56 
	#PRId32
 "d"

	)

57 
	#PRId64
 
__PRI64_PREFIX
 "d"

	)

59 
	#PRIdLEAST8
 "d"

	)

60 
	#PRIdLEAST16
 "d"

	)

61 
	#PRIdLEAST32
 "d"

	)

62 
	#PRIdLEAST64
 
__PRI64_PREFIX
 "d"

	)

64 
	#PRIdFAST8
 "d"

	)

65 
	#PRIdFAST16
 
__PRIPTR_PREFIX
 "d"

	)

66 
	#PRIdFAST32
 
__PRIPTR_PREFIX
 "d"

	)

67 
	#PRIdFAST64
 
__PRI64_PREFIX
 "d"

	)

70 
	#PRIi8
 "i"

	)

71 
	#PRIi16
 "i"

	)

72 
	#PRIi32
 "i"

	)

73 
	#PRIi64
 
__PRI64_PREFIX
 "i"

	)

75 
	#PRIiLEAST8
 "i"

	)

76 
	#PRIiLEAST16
 "i"

	)

77 
	#PRIiLEAST32
 "i"

	)

78 
	#PRIiLEAST64
 
__PRI64_PREFIX
 "i"

	)

80 
	#PRIiFAST8
 "i"

	)

81 
	#PRIiFAST16
 
__PRIPTR_PREFIX
 "i"

	)

82 
	#PRIiFAST32
 
__PRIPTR_PREFIX
 "i"

	)

83 
	#PRIiFAST64
 
__PRI64_PREFIX
 "i"

	)

86 
	#PRIo8
 "o"

	)

87 
	#PRIo16
 "o"

	)

88 
	#PRIo32
 "o"

	)

89 
	#PRIo64
 
__PRI64_PREFIX
 "o"

	)

91 
	#PRIoLEAST8
 "o"

	)

92 
	#PRIoLEAST16
 "o"

	)

93 
	#PRIoLEAST32
 "o"

	)

94 
	#PRIoLEAST64
 
__PRI64_PREFIX
 "o"

	)

96 
	#PRIoFAST8
 "o"

	)

97 
	#PRIoFAST16
 
__PRIPTR_PREFIX
 "o"

	)

98 
	#PRIoFAST32
 
__PRIPTR_PREFIX
 "o"

	)

99 
	#PRIoFAST64
 
__PRI64_PREFIX
 "o"

	)

102 
	#PRIu8
 "u"

	)

103 
	#PRIu16
 "u"

	)

104 
	#PRIu32
 "u"

	)

105 
	#PRIu64
 
__PRI64_PREFIX
 "u"

	)

107 
	#PRIuLEAST8
 "u"

	)

108 
	#PRIuLEAST16
 "u"

	)

109 
	#PRIuLEAST32
 "u"

	)

110 
	#PRIuLEAST64
 
__PRI64_PREFIX
 "u"

	)

112 
	#PRIuFAST8
 "u"

	)

113 
	#PRIuFAST16
 
__PRIPTR_PREFIX
 "u"

	)

114 
	#PRIuFAST32
 
__PRIPTR_PREFIX
 "u"

	)

115 
	#PRIuFAST64
 
__PRI64_PREFIX
 "u"

	)

118 
	#PRIx8
 "x"

	)

119 
	#PRIx16
 "x"

	)

120 
	#PRIx32
 "x"

	)

121 
	#PRIx64
 
__PRI64_PREFIX
 "x"

	)

123 
	#PRIxLEAST8
 "x"

	)

124 
	#PRIxLEAST16
 "x"

	)

125 
	#PRIxLEAST32
 "x"

	)

126 
	#PRIxLEAST64
 
__PRI64_PREFIX
 "x"

	)

128 
	#PRIxFAST8
 "x"

	)

129 
	#PRIxFAST16
 
__PRIPTR_PREFIX
 "x"

	)

130 
	#PRIxFAST32
 
__PRIPTR_PREFIX
 "x"

	)

131 
	#PRIxFAST64
 
__PRI64_PREFIX
 "x"

	)

134 
	#PRIX8
 "X"

	)

135 
	#PRIX16
 "X"

	)

136 
	#PRIX32
 "X"

	)

137 
	#PRIX64
 
__PRI64_PREFIX
 "X"

	)

139 
	#PRIXLEAST8
 "X"

	)

140 
	#PRIXLEAST16
 "X"

	)

141 
	#PRIXLEAST32
 "X"

	)

142 
	#PRIXLEAST64
 
__PRI64_PREFIX
 "X"

	)

144 
	#PRIXFAST8
 "X"

	)

145 
	#PRIXFAST16
 
__PRIPTR_PREFIX
 "X"

	)

146 
	#PRIXFAST32
 
__PRIPTR_PREFIX
 "X"

	)

147 
	#PRIXFAST64
 
__PRI64_PREFIX
 "X"

	)

151 
	#PRIdMAX
 
__PRI64_PREFIX
 "d"

	)

152 
	#PRIiMAX
 
__PRI64_PREFIX
 "i"

	)

153 
	#PRIoMAX
 
__PRI64_PREFIX
 "o"

	)

154 
	#PRIuMAX
 
__PRI64_PREFIX
 "u"

	)

155 
	#PRIxMAX
 
__PRI64_PREFIX
 "x"

	)

156 
	#PRIXMAX
 
__PRI64_PREFIX
 "X"

	)

160 
	#PRIdPTR
 
__PRIPTR_PREFIX
 "d"

	)

161 
	#PRIiPTR
 
__PRIPTR_PREFIX
 "i"

	)

162 
	#PRIoPTR
 
__PRIPTR_PREFIX
 "o"

	)

163 
	#PRIuPTR
 
__PRIPTR_PREFIX
 "u"

	)

164 
	#PRIxPTR
 
__PRIPTR_PREFIX
 "x"

	)

165 
	#PRIXPTR
 
__PRIPTR_PREFIX
 "X"

	)

171 
	#SCNd8
 "hhd"

	)

172 
	#SCNd16
 "hd"

	)

173 
	#SCNd32
 "d"

	)

174 
	#SCNd64
 
__PRI64_PREFIX
 "d"

	)

176 
	#SCNdLEAST8
 "hhd"

	)

177 
	#SCNdLEAST16
 "hd"

	)

178 
	#SCNdLEAST32
 "d"

	)

179 
	#SCNdLEAST64
 
__PRI64_PREFIX
 "d"

	)

181 
	#SCNdFAST8
 "hhd"

	)

182 
	#SCNdFAST16
 
__PRIPTR_PREFIX
 "d"

	)

183 
	#SCNdFAST32
 
__PRIPTR_PREFIX
 "d"

	)

184 
	#SCNdFAST64
 
__PRI64_PREFIX
 "d"

	)

187 
	#SCNi8
 "hhi"

	)

188 
	#SCNi16
 "hi"

	)

189 
	#SCNi32
 "i"

	)

190 
	#SCNi64
 
__PRI64_PREFIX
 "i"

	)

192 
	#SCNiLEAST8
 "hhi"

	)

193 
	#SCNiLEAST16
 "hi"

	)

194 
	#SCNiLEAST32
 "i"

	)

195 
	#SCNiLEAST64
 
__PRI64_PREFIX
 "i"

	)

197 
	#SCNiFAST8
 "hhi"

	)

198 
	#SCNiFAST16
 
__PRIPTR_PREFIX
 "i"

	)

199 
	#SCNiFAST32
 
__PRIPTR_PREFIX
 "i"

	)

200 
	#SCNiFAST64
 
__PRI64_PREFIX
 "i"

	)

203 
	#SCNu8
 "hhu"

	)

204 
	#SCNu16
 "hu"

	)

205 
	#SCNu32
 "u"

	)

206 
	#SCNu64
 
__PRI64_PREFIX
 "u"

	)

208 
	#SCNuLEAST8
 "hhu"

	)

209 
	#SCNuLEAST16
 "hu"

	)

210 
	#SCNuLEAST32
 "u"

	)

211 
	#SCNuLEAST64
 
__PRI64_PREFIX
 "u"

	)

213 
	#SCNuFAST8
 "hhu"

	)

214 
	#SCNuFAST16
 
__PRIPTR_PREFIX
 "u"

	)

215 
	#SCNuFAST32
 
__PRIPTR_PREFIX
 "u"

	)

216 
	#SCNuFAST64
 
__PRI64_PREFIX
 "u"

	)

219 
	#SCNo8
 "hho"

	)

220 
	#SCNo16
 "ho"

	)

221 
	#SCNo32
 "o"

	)

222 
	#SCNo64
 
__PRI64_PREFIX
 "o"

	)

224 
	#SCNoLEAST8
 "hho"

	)

225 
	#SCNoLEAST16
 "ho"

	)

226 
	#SCNoLEAST32
 "o"

	)

227 
	#SCNoLEAST64
 
__PRI64_PREFIX
 "o"

	)

229 
	#SCNoFAST8
 "hho"

	)

230 
	#SCNoFAST16
 
__PRIPTR_PREFIX
 "o"

	)

231 
	#SCNoFAST32
 
__PRIPTR_PREFIX
 "o"

	)

232 
	#SCNoFAST64
 
__PRI64_PREFIX
 "o"

	)

235 
	#SCNx8
 "hhx"

	)

236 
	#SCNx16
 "hx"

	)

237 
	#SCNx32
 "x"

	)

238 
	#SCNx64
 
__PRI64_PREFIX
 "x"

	)

240 
	#SCNxLEAST8
 "hhx"

	)

241 
	#SCNxLEAST16
 "hx"

	)

242 
	#SCNxLEAST32
 "x"

	)

243 
	#SCNxLEAST64
 
__PRI64_PREFIX
 "x"

	)

245 
	#SCNxFAST8
 "hhx"

	)

246 
	#SCNxFAST16
 
__PRIPTR_PREFIX
 "x"

	)

247 
	#SCNxFAST32
 
__PRIPTR_PREFIX
 "x"

	)

248 
	#SCNxFAST64
 
__PRI64_PREFIX
 "x"

	)

252 
	#SCNdMAX
 
__PRI64_PREFIX
 "d"

	)

253 
	#SCNiMAX
 
__PRI64_PREFIX
 "i"

	)

254 
	#SCNoMAX
 
__PRI64_PREFIX
 "o"

	)

255 
	#SCNuMAX
 
__PRI64_PREFIX
 "u"

	)

256 
	#SCNxMAX
 
__PRI64_PREFIX
 "x"

	)

259 
	#SCNdPTR
 
__PRIPTR_PREFIX
 "d"

	)

260 
	#SCNiPTR
 
__PRIPTR_PREFIX
 "i"

	)

261 
	#SCNoPTR
 
__PRIPTR_PREFIX
 "o"

	)

262 
	#SCNuPTR
 
__PRIPTR_PREFIX
 "u"

	)

263 
	#SCNxPTR
 
__PRIPTR_PREFIX
 "x"

	)

266 
	g__BEGIN_DECLS


268 #i‡
__WORDSIZE
 == 64

273 
	mquŸ
;

274 
	mªm
;

275 } 
	timaxdiv_t
;

282 
__exãnsi⁄__
 
	mquŸ
;

283 
__exãnsi⁄__
 
	mªm
;

284 } 
	timaxdiv_t
;

290 
ötmax_t
 
	$imaxabs
 (
ötmax_t
 
__n
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

293 
imaxdiv_t
 
	$imaxdiv
 (
ötmax_t
 
__numî
, i¡max_à
__díom
)

294 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

297 
ötmax_t
 
	$°πoimax
 (c⁄° *
__ª°ri˘
 
__≈å
,

298 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

301 
uötmax_t
 
	$°πoumax
 (c⁄° *
__ª°ri˘
 
__≈å
,

302 ** 
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

305 
ötmax_t
 
	$wc°oimax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

306 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

307 
__THROW
;

310 
uötmax_t
 
	$wc°oumax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

311 
__gwch¨_t
 ** 
__ª°ri˘
 
__íd±r
, 
__ba£
)

312 
__THROW
;

314 #ifde‡
__USE_EXTERN_INLINES


316 #i‡
__WORDSIZE
 == 64

318 
	$__°πﬁ_öã∫Æ
 (c⁄° *
__ª°ri˘
 
__≈å
,

319 **
__ª°ri˘
 
__íd±r
,

320 
__ba£
, 
__group
)

321 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

323 
__exã∫_ölöe
 
ötmax_t


324 
	`__NTH
 (
	$°πoimax
 (c⁄° *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

325 
ba£
))

327  
	`__°πﬁ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

328 
	}
}

330 
	$__°πoul_öã∫Æ
 (c⁄° *
__ª°ri˘
 
__≈å
,

331 ** 
__ª°ri˘
 
__íd±r
,

332 
__ba£
, 
__group
)

333 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

335 
__exã∫_ölöe
 
uötmax_t


336 
	`__NTH
 (
	$°πoumax
 (c⁄° *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

337 
ba£
))

339  
	`__°πoul_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

340 
	}
}

342 
	$__wc°ﬁ_öã∫Æ
 (c⁄° 
__gwch¨_t
 * 
__ª°ri˘
 
__≈å
,

343 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
,

344 
__ba£
, 
__group
)

345 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

347 
__exã∫_ölöe
 
ötmax_t


348 
	`__NTH
 (
	$wc°oimax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

349 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

351  
	`__wc°ﬁ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

352 
	}
}

354 
	$__wc°oul_öã∫Æ
 (c⁄° 
__gwch¨_t
 *

355 
__ª°ri˘
 
__≈å
,

356 
__gwch¨_t
 **

357 
__ª°ri˘
 
__íd±r
,

358 
__ba£
, 
__group
)

359 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

361 
__exã∫_ölöe
 
uötmax_t


362 
	`__NTH
 (
	$wc°oumax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

363 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

365  
	`__wc°oul_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

366 
	}
}

370 
__exãnsi⁄__


371 
	$__°πﬁl_öã∫Æ
 (c⁄° *
__ª°ri˘
 
__≈å
,

372 **
__ª°ri˘
 
__íd±r
,

373 
__ba£
, 
__group
)

374 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

376 
__exã∫_ölöe
 
ötmax_t


377 
	`__NTH
 (
	$°πoimax
 (c⁄° *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

378 
ba£
))

380  
	`__°πﬁl_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

381 
	}
}

383 
__exãnsi⁄__


384 
	$__°πouŒ_öã∫Æ
 (const *

385 
__ª°ri˘
 
__≈å
,

387 
__ª°ri˘
 
__íd±r
,

388 
__ba£
,

389 
__group
)

390 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

392 
__exã∫_ölöe
 
uötmax_t


393 
	`__NTH
 (
	$°πoumax
 (c⁄° *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

394 
ba£
))

396  
	`__°πouŒ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

397 
	}
}

399 
__exãnsi⁄__


400 
	$__wc°ﬁl_öã∫Æ
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

401 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
,

402 
__ba£
, 
__group
)

403 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

405 
__exã∫_ölöe
 
ötmax_t


406 
	`__NTH
 (
	$wc°oimax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

407 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

409  
	`__wc°ﬁl_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

410 
	}
}

413 
__exãnsi⁄__


414 
	$__wc°ouŒ_öã∫Æ
 (c⁄° 
__gwch¨_t
 *

415 
__ª°ri˘
 
__≈å
,

416 
__gwch¨_t
 **

417 
__ª°ri˘
 
__íd±r
,

418 
__ba£
,

419 
__group
)

420 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

422 
__exã∫_ölöe
 
uötmax_t


423 
	`__NTH
 (
	$wc°oumax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

424 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

426  
	`__wc°ouŒ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

427 
	}
}

432 
	g__END_DECLS


	@/usr/include/libintl.h

20 #i‚de‡
_LIBINTL_H


21 
	#_LIBINTL_H
 1

	)

23 
	~<„©uªs.h
>

27 
	#__USE_GNU_GETTEXT
 1

	)

31 
	#__GNU_GETTEXT_SUPPORTED_REVISION
(
maj‹
) \

32 ((
maj‹
Ë=0 ? 1 : -1)

	)

34 
__BEGIN_DECLS


39 *
	$gëãxt
 (c⁄° *
__msgid
)

40 
__THROW
 
	`__©åibuã_f‹m©_¨g__
 (1);

44 *
	$dgëãxt
 (c⁄° *
__domaö«me
, c⁄° *
__msgid
)

45 
__THROW
 
	`__©åibuã_f‹m©_¨g__
 (2);

46 *
	$__dgëãxt
 (c⁄° *
__domaö«me
, c⁄° *
__msgid
)

47 
__THROW
 
	`__©åibuã_f‹m©_¨g__
 (2);

51 *
	$dcgëãxt
 (c⁄° *
__domaö«me
,

52 c⁄° *
__msgid
, 
__ˇãg‹y
)

53 
__THROW
 
	`__©åibuã_f‹m©_¨g__
 (2);

54 *
	$__dcgëãxt
 (c⁄° *
__domaö«me
,

55 c⁄° *
__msgid
, 
__ˇãg‹y
)

56 
__THROW
 
	`__©åibuã_f‹m©_¨g__
 (2);

61 *
	$ngëãxt
 (c⁄° *
__msgid1
, c⁄° *
__msgid2
,

62 
__n
)

63 
__THROW
 
	$__©åibuã_f‹m©_¨g__
 (1Ë
	`__©åibuã_f‹m©_¨g__
 (2);

67 *
	$dngëãxt
 (c⁄° *
__domaö«me
, c⁄° *
__msgid1
,

68 c⁄° *
__msgid2
, 
__n
)

69 
__THROW
 
	$__©åibuã_f‹m©_¨g__
 (2Ë
	`__©åibuã_f‹m©_¨g__
 (3);

73 *
	$d˙gëãxt
 (c⁄° *
__domaö«me
, c⁄° *
__msgid1
,

74 c⁄° *
__msgid2
, 
__n
,

75 
__ˇãg‹y
)

76 
__THROW
 
	$__©åibuã_f‹m©_¨g__
 (2Ë
	`__©åibuã_f‹m©_¨g__
 (3);

82 *
	$ãxtdomaö
 (c⁄° *
__domaö«me
Ë
__THROW
;

86 *
	$bödãxtdomaö
 (c⁄° *
__domaö«me
,

87 c⁄° *
__dú«me
Ë
__THROW
;

91 *
	$böd_ãxtdomaö_code£t
 (c⁄° *
__domaö«me
,

92 c⁄° *
__code£t
Ë
__THROW
;

96 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


99 
	#__√ed_NULL


	)

100 
	~<°ddef.h
>

103 
	~<loˇÀ.h
>

109 
	#gëãxt
(
msgid
Ë
	`dgëãxt
 (
NULL
, msgid)

	)

111 
	#dgëãxt
(
domaö«me
, 
msgid
) \

112 
	`dcgëãxt
 (
domaö«me
, 
msgid
, 
LC_MESSAGES
)

	)

114 
	#ngëãxt
(
msgid1
, 
msgid2
, 
n
Ë
	`dngëãxt
 (
NULL
, msgid1, msgid2,Ç)

	)

116 
	#dngëãxt
(
domaö«me
, 
msgid1
, 
msgid2
, 
n
) \

117 
	`d˙gëãxt
 (
domaö«me
, 
msgid1
, 
msgid2
, 
n
, 
LC_MESSAGES
)

	)

121 
__END_DECLS


	@/usr/include/limits.h

22 #i‚de‡
_LIBC_LIMITS_H_


23 
	#_LIBC_LIMITS_H_
 1

	)

25 
	~<„©uªs.h
>

31 
	#MB_LEN_MAX
 16

	)

36 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

41 #i‚de‡
_LIMITS_H


42 
	#_LIMITS_H
 1

	)

44 
	~<bôs/w‹dsize.h
>

53 
	#CHAR_BIT
 8

	)

56 
	#SCHAR_MIN
 (-128)

	)

57 
	#SCHAR_MAX
 127

	)

60 
	#UCHAR_MAX
 255

	)

63 #ifde‡
__CHAR_UNSIGNED__


64 
	#CHAR_MIN
 0

	)

65 
	#CHAR_MAX
 
UCHAR_MAX


	)

67 
	#CHAR_MIN
 
SCHAR_MIN


	)

68 
	#CHAR_MAX
 
SCHAR_MAX


	)

72 
	#SHRT_MIN
 (-32768)

	)

73 
	#SHRT_MAX
 32767

	)

76 
	#USHRT_MAX
 65535

	)

79 
	#INT_MIN
 (-
INT_MAX
 - 1)

	)

80 
	#INT_MAX
 2147483647

	)

83 
	#UINT_MAX
 4294967295U

	)

86 #i‡
__WORDSIZE
 == 64

87 
	#LONG_MAX
 9223372036854775807L

	)

89 
	#LONG_MAX
 2147483647L

	)

91 
	#LONG_MIN
 (-
LONG_MAX
 - 1L)

	)

94 #i‡
__WORDSIZE
 == 64

95 
	#ULONG_MAX
 18446744073709551615UL

	)

97 
	#ULONG_MAX
 4294967295UL

	)

100 #ifde‡
__USE_ISOC99


103 
	#LLONG_MAX
 9223372036854775807LL

	)

104 
	#LLONG_MIN
 (-
LLONG_MAX
 - 1LL)

	)

107 
	#ULLONG_MAX
 18446744073709551615ULL

	)

121 #i‡
deföed
 
__GNUC__
 && !deföed 
_GCC_LIMITS_H_


123 #ö˛ude_√xà<
limôs
.
h
>

129 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__GNUC__


130 #i‚de‡
LLONG_MIN


131 
	#LLONG_MIN
 (-
LLONG_MAX
-1)

	)

133 #i‚de‡
LLONG_MAX


134 
	#LLONG_MAX
 
__LONG_LONG_MAX__


	)

136 #i‚de‡
ULLONG_MAX


137 
	#ULLONG_MAX
 (
LLONG_MAX
 * 2ULL + 1)

	)

141 #ifdef 
__USE_POSIX


143 
	~<bôs/posix1_lim.h
>

146 #ifdef 
__USE_POSIX2


147 
	~<bôs/posix2_lim.h
>

150 #ifdef 
__USE_XOPEN


151 
	~<bôs/x›í_lim.h
>

	@/usr/include/netdb.h

22 #i‚def 
_NETDB_H


23 
	#_NETDB_H
 1

	)

25 
	~<„©uªs.h
>

27 
	~<√töë/ö.h
>

28 
	~<°döt.h
>

29 #ifde‡
__USE_MISC


32 
	~<Ωc/√tdb.h
>

35 #ifde‡
__USE_GNU


36 
	#__√ed_sigevít_t


	)

37 
	~<bôs/sigöfo.h
>

38 
	#__√ed_time•ec


	)

39 
	~<time.h
>

42 
	~<bôs/√tdb.h
>

45 
	#_PATH_HEQUIV
 "/ëc/ho°s.equiv"

	)

46 
	#_PATH_HOSTS
 "/ëc/ho°s"

	)

47 
	#_PATH_NETWORKS
 "/ëc/√tw‹ks"

	)

48 
	#_PATH_NSSWITCH_CONF
 "/ëc/nsswôch.c⁄f"

	)

49 
	#_PATH_PROTOCOLS
 "/ëc/¥Ÿocﬁs"

	)

50 
	#_PATH_SERVICES
 "/ëc/£rvi˚s"

	)

53 
	g__BEGIN_DECLS


55 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K8


58 
	#h_î∫o
 (*
	`__h_î∫o_loˇti⁄
 ())

	)

61 *
	$__h_î∫o_loˇti⁄
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

65 
	#HOST_NOT_FOUND
 1

	)

66 
	#TRY_AGAIN
 2

	)

68 
	#NO_RECOVERY
 3

	)

70 
	#NO_DATA
 4

	)

73 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


74 
	#NETDB_INTERNAL
 -1

	)

75 
	#NETDB_SUCCESS
 0

	)

76 
	#NO_ADDRESS
 
NO_DATA


	)

79 #i‡
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_XOPEN_EXTENDED


81 
	#IPPORT_RESERVED
 1024

	)

84 #ifde‡
__USE_GNU


86 
	#SCOPE_DELIMITER
 '%'

	)

89 #ifde‡
__USE_MISC


92 
	$hîr‹
 (c⁄° *
__°r
Ë
__THROW
;

95 c⁄° *
	$h°ªº‹
 (
__îr_num
Ë
__THROW
;

100 
	sho°ít


102 *
h_«me
;

103 **
h_Æü£s
;

104 
h_addπy≥
;

105 
h_Àngth
;

106 **
h_addr_li°
;

107 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


108 
	#h_addr
 
h_addr_li°
[0]

	)

117 
	`£tho°ít
 (
__°ay_›í
);

123 
	`ídho°ít
 ();

130 
ho°ít
 *
	`gëho°ít
 ();

137 
ho°ít
 *
	`gëho°byaddr
 (c⁄° *
__addr
, 
__sockÀn_t
 
__Àn
,

138 
__ty≥
);

144 
ho°ít
 *
	`gëho°by«me
 (c⁄° *
__«me
);

146 #ifde‡
__USE_MISC


155 
ho°ít
 *
	`gëho°by«me2
 (c⁄° *
__«me
, 
__af
);

167 
	`gëho°ít_r
 (
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

168 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

169 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

170 *
__ª°ri˘
 
__h_î∫›
);

172 
	`gëho°byaddr_r
 (c⁄° *
__ª°ri˘
 
__addr
, 
__sockÀn_t
 
__Àn
,

173 
__ty≥
,

174 
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

175 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

176 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

177 *
__ª°ri˘
 
__h_î∫›
);

179 
	`gëho°by«me_r
 (c⁄° *
__ª°ri˘
 
__«me
,

180 
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

181 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

182 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

183 *
__ª°ri˘
 
__h_î∫›
);

185 
	`gëho°by«me2_r
 (c⁄° *
__ª°ri˘
 
__«me
, 
__af
,

186 
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

187 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

188 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

189 *
__ª°ri˘
 
__h_î∫›
);

198 
	`£äëít
 (
__°ay_›í
);

204 
	`íd√ã¡
 ();

211 
√ã¡
 *
	`gë√ã¡
 ();

218 
√ã¡
 *
	`gë√tbyaddr
 (
uöt32_t
 
__√t
, 
__ty≥
);

224 
√ã¡
 *
	`gë√tby«me
 (c⁄° *
__«me
);

226 #ifdef 
__USE_MISC


237 
	`gë√ã¡_r
 (
√ã¡
 *
__ª°ri˘
 
__ªsu…_buf
,

238 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

239 
√ã¡
 **
__ª°ri˘
 
__ªsu…
,

240 *
__ª°ri˘
 
__h_î∫›
);

242 
	`gë√tbyaddr_r
 (
uöt32_t
 
__√t
, 
__ty≥
,

243 
√ã¡
 *
__ª°ri˘
 
__ªsu…_buf
,

244 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

245 
√ã¡
 **
__ª°ri˘
 
__ªsu…
,

246 *
__ª°ri˘
 
__h_î∫›
);

248 
	`gë√tby«me_r
 (c⁄° *
__ª°ri˘
 
__«me
,

249 
√ã¡
 *
__ª°ri˘
 
__ªsu…_buf
,

250 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

251 
√ã¡
 **
__ª°ri˘
 
__ªsu…
,

252 *
__ª°ri˘
 
__h_î∫›
);

257 
	s£rvít


259 *
s_«me
;

260 **
s_Æü£s
;

261 
s_p‹t
;

262 *
s_¥Ÿo
;

270 
	`£t£rvít
 (
__°ay_›í
);

276 
	`íd£rvít
 ();

283 
£rvít
 *
	`gë£rvít
 ();

290 
£rvít
 *
	`gë£rvby«me
 (c⁄° *
__«me
, c⁄° *
__¥Ÿo
);

297 
£rvít
 *
	`gë£rvbyp‹t
 (
__p‹t
, c⁄° *
__¥Ÿo
);

300 #ifdef 
__USE_MISC


308 
	`gë£rvít_r
 (
£rvít
 *
__ª°ri˘
 
__ªsu…_buf
,

309 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

310 
£rvít
 **
__ª°ri˘
 
__ªsu…
);

312 
	`gë£rvby«me_r
 (c⁄° *
__ª°ri˘
 
__«me
,

313 c⁄° *
__ª°ri˘
 
__¥Ÿo
,

314 
£rvít
 *
__ª°ri˘
 
__ªsu…_buf
,

315 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

316 
£rvít
 **
__ª°ri˘
 
__ªsu…
);

318 
	`gë£rvbyp‹t_r
 (
__p‹t
, c⁄° *
__ª°ri˘
 
__¥Ÿo
,

319 
£rvít
 *
__ª°ri˘
 
__ªsu…_buf
,

320 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

321 
£rvít
 **
__ª°ri˘
 
__ªsu…
);

326 
	s¥Ÿ€¡


328 *
p_«me
;

329 **
p_Æü£s
;

330 
p_¥Ÿo
;

338 
	`£çrŸ€¡
 (
__°ay_›í
);

344 
	`íd¥Ÿ€¡
 ();

351 
¥Ÿ€¡
 *
	`gë¥Ÿ€¡
 ();

357 
¥Ÿ€¡
 *
	`gë¥Ÿoby«me
 (c⁄° *
__«me
);

363 
¥Ÿ€¡
 *
	`gë¥Ÿobynumbî
 (
__¥Ÿo
);

366 #ifdef 
__USE_MISC


374 
	`gë¥Ÿ€¡_r
 (
¥Ÿ€¡
 *
__ª°ri˘
 
__ªsu…_buf
,

375 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

376 
¥Ÿ€¡
 **
__ª°ri˘
 
__ªsu…
);

378 
	`gë¥Ÿoby«me_r
 (c⁄° *
__ª°ri˘
 
__«me
,

379 
¥Ÿ€¡
 *
__ª°ri˘
 
__ªsu…_buf
,

380 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

381 
¥Ÿ€¡
 **
__ª°ri˘
 
__ªsu…
);

383 
	`gë¥Ÿobynumbî_r
 (
__¥Ÿo
,

384 
¥Ÿ€¡
 *
__ª°ri˘
 
__ªsu…_buf
,

385 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

386 
¥Ÿ€¡
 **
__ª°ri˘
 
__ªsu…
);

395 
	`£äëgª¡
 (c⁄° *
__√tgroup
);

403 
	`íd√tgª¡
 ();

412 
	`gë√tgª¡
 (**
__ª°ri˘
 
__ho°p
,

413 **
__ª°ri˘
 
__u£Ω
,

414 **
__ª°ri˘
 
__domaöp
);

423 
	`ö√tgr
 (c⁄° *
__√tgroup
, c⁄° *
__ho°
,

424 c⁄° *
__u£r
, c⁄° *
__domaö
);

432 
	`gë√tgª¡_r
 (**
__ª°ri˘
 
__ho°p
,

433 **
__ª°ri˘
 
__u£Ω
,

434 **
__ª°ri˘
 
__domaöp
,

435 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
);

439 #ifde‡
__USE_BSD


451 
	`rcmd
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

452 c⁄° *
__ª°ri˘
 
__locu£r
,

453 c⁄° *
__ª°ri˘
 
__ªmu£r
,

454 c⁄° *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
);

463 
	`rcmd_af
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

464 c⁄° *
__ª°ri˘
 
__locu£r
,

465 c⁄° *
__ª°ri˘
 
__ªmu£r
,

466 c⁄° *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
,

467 
ß_Ámûy_t
 
__af
);

479 
	`ªxec
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

480 c⁄° *
__ª°ri˘
 
__«me
,

481 c⁄° *
__ª°ri˘
 
__∑ss
,

482 c⁄° *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
);

491 
	`ªxec_af
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

492 c⁄° *
__ª°ri˘
 
__«me
,

493 c⁄° *
__ª°ri˘
 
__∑ss
,

494 c⁄° *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
,

495 
ß_Ámûy_t
 
__af
);

505 
	`ru£rok
 (c⁄° *
__rho°
, 
__su£r
,

506 c⁄° *
__ªmu£r
, c⁄° *
__locu£r
);

515 
	`ru£rok_af
 (c⁄° *
__rho°
, 
__su£r
,

516 c⁄° *
__ªmu£r
, c⁄° *
__locu£r
,

517 
ß_Ámûy_t
 
__af
);

528 
	`úu£rok
 (
uöt32_t
 
__øddr
, 
__su£r
,

529 c⁄° *
__ªmu£r
, c⁄° *
__locu£r
);

539 
	`úu£rok_af
 (c⁄° *
__øddr
, 
__su£r
,

540 c⁄° *
__ªmu£r
, c⁄° *
__locu£r
,

541 
ß_Ámûy_t
 
__af
);

551 
	`ºesvp‹t
 (*
__Æp‹t
);

560 
	`ºesvp‹t_af
 (*
__Æp‹t
, 
ß_Ámûy_t
 
__af
);

565 #ifdef 
__USE_POSIX


567 
	saddröfo


569 
ai_Êags
;

570 
ai_Ámûy
;

571 
ai_sockty≥
;

572 
ai_¥Ÿocﬁ
;

573 
sockÀn_t
 
ai_addæí
;

574 
sockaddr
 *
ai_addr
;

575 *
ai_ˇn⁄«me
;

576 
addröfo
 *
ai_√xt
;

579 #ifde‡
__USE_GNU


581 
	sgaicb


583 c⁄° *
¨_«me
;

584 c⁄° *
¨_£rvi˚
;

585 c⁄° 
addröfo
 *
¨_ªque°
;

586 
addröfo
 *
¨_ªsu…
;

588 
__ªtu∫
;

589 
__glibc_ª£rved
[5];

593 
	#GAI_WAIT
 0

	)

594 
	#GAI_NOWAIT
 1

	)

598 
	#AI_PASSIVE
 0x0001

	)

599 
	#AI_CANONNAME
 0x0002

	)

600 
	#AI_NUMERICHOST
 0x0004

	)

601 
	#AI_V4MAPPED
 0x0008

	)

602 
	#AI_ALL
 0x0010

	)

603 
	#AI_ADDRCONFIG
 0x0020

	)

605 #ifde‡
__USE_GNU


606 
	#AI_IDN
 0x0040

	)

609 
	#AI_CANONIDN
 0x0080

	)

610 
	#AI_IDN_ALLOW_UNASSIGNED
 0x0100

	)

612 
	#AI_IDN_USE_STD3_ASCII_RULES
 0x0200

	)

615 
	#AI_NUMERICSERV
 0x0400

	)

618 
	#EAI_BADFLAGS
 -1

	)

619 
	#EAI_NONAME
 -2

	)

620 
	#EAI_AGAIN
 -3

	)

621 
	#EAI_FAIL
 -4

	)

622 
	#EAI_FAMILY
 -6

	)

623 
	#EAI_SOCKTYPE
 -7

	)

624 
	#EAI_SERVICE
 -8

	)

625 
	#EAI_MEMORY
 -10

	)

626 
	#EAI_SYSTEM
 -11

	)

627 
	#EAI_OVERFLOW
 -12

	)

628 #ifde‡
__USE_GNU


629 
	#EAI_NODATA
 -5

	)

630 
	#EAI_ADDRFAMILY
 -9

	)

631 
	#EAI_INPROGRESS
 -100

	)

632 
	#EAI_CANCELED
 -101

	)

633 
	#EAI_NOTCANCELED
 -102

	)

634 
	#EAI_ALLDONE
 -103

	)

635 
	#EAI_INTR
 -104

	)

636 
	#EAI_IDN_ENCODE
 -105

	)

639 #ifde‡
__USE_MISC


640 
	#NI_MAXHOST
 1025

	)

641 
	#NI_MAXSERV
 32

	)

644 
	#NI_NUMERICHOST
 1

	)

645 
	#NI_NUMERICSERV
 2

	)

646 
	#NI_NOFQDN
 4

	)

647 
	#NI_NAMEREQD
 8

	)

648 
	#NI_DGRAM
 16

	)

649 #ifde‡
__USE_GNU


650 
	#NI_IDN
 32

	)

651 
	#NI_IDN_ALLOW_UNASSIGNED
 64

	)

653 
	#NI_IDN_USE_STD3_ASCII_RULES
 128

	)

662 
	`gëaddröfo
 (c⁄° *
__ª°ri˘
 
__«me
,

663 c⁄° *
__ª°ri˘
 
__£rvi˚
,

664 c⁄° 
addröfo
 *
__ª°ri˘
 
__ªq
,

665 
addröfo
 **
__ª°ri˘
 
__∑i
);

668 
	$‰ìaddröfo
 (
addröfo
 *
__ai
Ë
__THROW
;

671 c⁄° *
	$gai_°ªº‹
 (
__ecode
Ë
__THROW
;

677 
	`gë«meöfo
 (c⁄° 
sockaddr
 *
__ª°ri˘
 
__ß
,

678 
sockÀn_t
 
__ßÀn
, *
__ª°ri˘
 
__ho°
,

679 
sockÀn_t
 
__ho°Àn
, *
__ª°ri˘
 
__£rv
,

680 
sockÀn_t
 
__£rvÀn
, 
__Êags
);

683 #ifde‡
__USE_GNU


692 
	`gëaddröfo_a
 (
__mode
, 
gaicb
 *
__li°
[
__ª°ri˘_¨r
],

693 
__ít
, 
sigevít
 *
__ª°ri˘
 
__sig
);

703 
	`gai_su•íd
 (c⁄° 
gaicb
 *c⁄° 
__li°
[], 
__ít
,

704 c⁄° 
time•ec
 *
__timeout
);

707 
	$gai_îr‹
 (
gaicb
 *
__ªq
Ë
__THROW
;

710 
	$gai_ˇn˚l
 (
gaicb
 *
__gaicbp
Ë
__THROW
;

713 
__END_DECLS


	@/usr/include/netinet/in.h

18 #i‚def 
_NETINET_IN_H


19 
	#_NETINET_IN_H
 1

	)

21 
	~<„©uªs.h
>

22 
	~<°döt.h
>

23 
	~<sys/sockë.h
>

24 
	~<bôs/ty≥s.h
>

27 
__BEGIN_DECLS


30 
uöt32_t
 
	tö_addr_t
;

31 
	sö_addr


33 
ö_addr_t
 
	ms_addr
;

37 
	~<bôs/ö.h
>

42 
	mIPPROTO_IP
 = 0,

43 
	#IPPROTO_IP
 
IPPROTO_IP


	)

44 
	mIPPROTO_ICMP
 = 1,

45 
	#IPPROTO_ICMP
 
IPPROTO_ICMP


	)

46 
	mIPPROTO_IGMP
 = 2,

47 
	#IPPROTO_IGMP
 
IPPROTO_IGMP


	)

48 
	mIPPROTO_IPIP
 = 4,

49 
	#IPPROTO_IPIP
 
IPPROTO_IPIP


	)

50 
	mIPPROTO_TCP
 = 6,

51 
	#IPPROTO_TCP
 
IPPROTO_TCP


	)

52 
	mIPPROTO_EGP
 = 8,

53 
	#IPPROTO_EGP
 
IPPROTO_EGP


	)

54 
	mIPPROTO_PUP
 = 12,

55 
	#IPPROTO_PUP
 
IPPROTO_PUP


	)

56 
	mIPPROTO_UDP
 = 17,

57 
	#IPPROTO_UDP
 
IPPROTO_UDP


	)

58 
	mIPPROTO_IDP
 = 22,

59 
	#IPPROTO_IDP
 
IPPROTO_IDP


	)

60 
	mIPPROTO_TP
 = 29,

61 
	#IPPROTO_TP
 
IPPROTO_TP


	)

62 
	mIPPROTO_DCCP
 = 33,

63 
	#IPPROTO_DCCP
 
IPPROTO_DCCP


	)

64 
	mIPPROTO_IPV6
 = 41,

65 
	#IPPROTO_IPV6
 
IPPROTO_IPV6


	)

66 
	mIPPROTO_RSVP
 = 46,

67 
	#IPPROTO_RSVP
 
IPPROTO_RSVP


	)

68 
	mIPPROTO_GRE
 = 47,

69 
	#IPPROTO_GRE
 
IPPROTO_GRE


	)

70 
	mIPPROTO_ESP
 = 50,

71 
	#IPPROTO_ESP
 
IPPROTO_ESP


	)

72 
	mIPPROTO_AH
 = 51,

73 
	#IPPROTO_AH
 
IPPROTO_AH


	)

74 
	mIPPROTO_MTP
 = 92,

75 
	#IPPROTO_MTP
 
IPPROTO_MTP


	)

76 
	mIPPROTO_BEETPH
 = 94,

77 
	#IPPROTO_BEETPH
 
IPPROTO_BEETPH


	)

78 
	mIPPROTO_ENCAP
 = 98,

79 
	#IPPROTO_ENCAP
 
IPPROTO_ENCAP


	)

80 
	mIPPROTO_PIM
 = 103,

81 
	#IPPROTO_PIM
 
IPPROTO_PIM


	)

82 
	mIPPROTO_COMP
 = 108,

83 
	#IPPROTO_COMP
 
IPPROTO_COMP


	)

84 
	mIPPROTO_SCTP
 = 132,

85 
	#IPPROTO_SCTP
 
IPPROTO_SCTP


	)

86 
	mIPPROTO_UDPLITE
 = 136,

87 
	#IPPROTO_UDPLITE
 
IPPROTO_UDPLITE


	)

88 
	mIPPROTO_RAW
 = 255,

89 
	#IPPROTO_RAW
 
IPPROTO_RAW


	)

90 
	mIPPROTO_MAX


96 #i‚de‡
__USE_KERNEL_IPV6_DEFS


99 
	mIPPROTO_HOPOPTS
 = 0,

100 
	#IPPROTO_HOPOPTS
 
IPPROTO_HOPOPTS


	)

101 
	mIPPROTO_ROUTING
 = 43,

102 
	#IPPROTO_ROUTING
 
IPPROTO_ROUTING


	)

103 
	mIPPROTO_FRAGMENT
 = 44,

104 
	#IPPROTO_FRAGMENT
 
IPPROTO_FRAGMENT


	)

105 
	mIPPROTO_ICMPV6
 = 58,

106 
	#IPPROTO_ICMPV6
 
IPPROTO_ICMPV6


	)

107 
	mIPPROTO_NONE
 = 59,

108 
	#IPPROTO_NONE
 
IPPROTO_NONE


	)

109 
	mIPPROTO_DSTOPTS
 = 60,

110 
	#IPPROTO_DSTOPTS
 
IPPROTO_DSTOPTS


	)

111 
	mIPPROTO_MH
 = 135

112 
	#IPPROTO_MH
 
IPPROTO_MH


	)

117 
uöt16_t
 
	tö_p‹t_t
;

122 
	mIPPORT_ECHO
 = 7,

123 
	mIPPORT_DISCARD
 = 9,

124 
	mIPPORT_SYSTAT
 = 11,

125 
	mIPPORT_DAYTIME
 = 13,

126 
	mIPPORT_NETSTAT
 = 15,

127 
	mIPPORT_FTP
 = 21,

128 
	mIPPORT_TELNET
 = 23,

129 
	mIPPORT_SMTP
 = 25,

130 
	mIPPORT_TIMESERVER
 = 37,

131 
	mIPPORT_NAMESERVER
 = 42,

132 
	mIPPORT_WHOIS
 = 43,

133 
	mIPPORT_MTP
 = 57,

135 
	mIPPORT_TFTP
 = 69,

136 
	mIPPORT_RJE
 = 77,

137 
	mIPPORT_FINGER
 = 79,

138 
	mIPPORT_TTYLINK
 = 87,

139 
	mIPPORT_SUPDUP
 = 95,

142 
	mIPPORT_EXECSERVER
 = 512,

143 
	mIPPORT_LOGINSERVER
 = 513,

144 
	mIPPORT_CMDSERVER
 = 514,

145 
	mIPPORT_EFSSERVER
 = 520,

148 
	mIPPORT_BIFFUDP
 = 512,

149 
	mIPPORT_WHOSERVER
 = 513,

150 
	mIPPORT_ROUTESERVER
 = 520,

153 
	mIPPORT_RESERVED
 = 1024,

156 
	mIPPORT_USERRESERVED
 = 5000

164 
	#IN_CLASSA
(
a
Ë((((
ö_addr_t
)◊)Ë& 0x80000000Ë=0)

	)

165 
	#IN_CLASSA_NET
 0xff000000

	)

166 
	#IN_CLASSA_NSHIFT
 24

	)

167 
	#IN_CLASSA_HOST
 (0xfffffff‡& ~
IN_CLASSA_NET
)

	)

168 
	#IN_CLASSA_MAX
 128

	)

170 
	#IN_CLASSB
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xc0000000Ë=0x80000000)

	)

171 
	#IN_CLASSB_NET
 0xffff0000

	)

172 
	#IN_CLASSB_NSHIFT
 16

	)

173 
	#IN_CLASSB_HOST
 (0xfffffff‡& ~
IN_CLASSB_NET
)

	)

174 
	#IN_CLASSB_MAX
 65536

	)

176 
	#IN_CLASSC
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xe0000000Ë=0xc0000000)

	)

177 
	#IN_CLASSC_NET
 0xffffff00

	)

178 
	#IN_CLASSC_NSHIFT
 8

	)

179 
	#IN_CLASSC_HOST
 (0xfffffff‡& ~
IN_CLASSC_NET
)

	)

181 
	#IN_CLASSD
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xf0000000Ë=0xe0000000)

	)

182 
	#IN_MULTICAST
(
a
Ë
	`IN_CLASSD
◊)

	)

184 
	#IN_EXPERIMENTAL
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xe0000000Ë=0xe0000000)

	)

185 
	#IN_BADCLASS
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xf0000000Ë=0xf0000000)

	)

188 
	#INADDR_ANY
 ((
ö_addr_t
Ë0x00000000)

	)

190 
	#INADDR_BROADCAST
 ((
ö_addr_t
Ë0xffffffff)

	)

192 
	#INADDR_NONE
 ((
ö_addr_t
Ë0xffffffff)

	)

195 
	#IN_LOOPBACKNET
 127

	)

197 #i‚de‡
INADDR_LOOPBACK


198 
	#INADDR_LOOPBACK
 ((
ö_addr_t
Ë0x7f000001Ë

	)

202 
	#INADDR_UNSPEC_GROUP
 ((
ö_addr_t
Ë0xe0000000Ë

	)

203 
	#INADDR_ALLHOSTS_GROUP
 ((
ö_addr_t
Ë0xe0000001Ë

	)

204 
	#INADDR_ALLRTRS_GROUP
 ((
ö_addr_t
Ë0xe0000002Ë

	)

205 
	#INADDR_MAX_LOCAL_GROUP
 ((
ö_addr_t
Ë0xe00000ffË

	)

207 #i‚de‡
__USE_KERNEL_IPV6_DEFS


209 
	sö6_addr


213 
uöt8_t
 
	m__u6_addr8
[16];

214 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


215 
uöt16_t
 
	m__u6_addr16
[8];

216 
uöt32_t
 
	m__u6_addr32
[4];

218 } 
	m__ö6_u
;

219 
	#s6_addr
 
__ö6_u
.
__u6_addr8


	)

220 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


221 
	#s6_addr16
 
__ö6_u
.
__u6_addr16


	)

222 
	#s6_addr32
 
__ö6_u
.
__u6_addr32


	)

227 c⁄° 
ö6_addr
 
ö6addr_™y
;

228 c⁄° 
ö6_addr
 
ö6addr_lo›back
;

229 
	#IN6ADDR_ANY_INIT
 { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 } } }

	)

230 
	#IN6ADDR_LOOPBACK_INIT
 { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1 } } }

	)

232 
	#INET_ADDRSTRLEN
 16

	)

233 
	#INET6_ADDRSTRLEN
 46

	)

237 
	ssockaddr_ö


239 
__SOCKADDR_COMMON
 (
sö_
);

240 
ö_p‹t_t
 
	msö_p‹t
;

241 
ö_addr
 
	msö_addr
;

244 
	msö_zîo
[ (
sockaddr
) -

245 
__SOCKADDR_COMMON_SIZE
 -

246  (
ö_p‹t_t
) -

247  (
ö_addr
)];

250 #i‚de‡
__USE_KERNEL_IPV6_DEFS


252 
	ssockaddr_ö6


254 
__SOCKADDR_COMMON
 (
sö6_
);

255 
ö_p‹t_t
 
	msö6_p‹t
;

256 
uöt32_t
 
	msö6_Êowöfo
;

257 
ö6_addr
 
	msö6_addr
;

258 
uöt32_t
 
	msö6_sc›e_id
;

262 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


264 
	sù_mªq


267 
ö_addr
 
	mimr_mu…üddr
;

270 
ö_addr
 
	mimr_öãrÁ˚
;

273 
	sù_mªq_sour˚


276 
ö_addr
 
	mimr_mu…üddr
;

279 
ö_addr
 
	mimr_öãrÁ˚
;

282 
ö_addr
 
	mimr_sour˚addr
;

286 #i‚de‡
__USE_KERNEL_IPV6_DEFS


288 
	sùv6_mªq


291 
ö6_addr
 
	mùv6mr_mu…üddr
;

294 
	mùv6mr_öãrÁ˚
;

298 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


300 
	sgroup_ªq


303 
uöt32_t
 
	mgr_öãrÁ˚
;

306 
sockaddr_°‹age
 
	mgr_group
;

309 
	sgroup_sour˚_ªq


312 
uöt32_t
 
	mg§_öãrÁ˚
;

315 
sockaddr_°‹age
 
	mg§_group
;

318 
sockaddr_°‹age
 
	mg§_sour˚
;

323 
	sù_msfûãr


326 
ö_addr
 
	mimsf_mu…üddr
;

329 
ö_addr
 
	mimsf_öãrÁ˚
;

332 
uöt32_t
 
	mimsf_fmode
;

335 
uöt32_t
 
	mimsf_num§c
;

337 
ö_addr
 
	mimsf_¶i°
[1];

340 
	#IP_MSFILTER_SIZE
(
num§c
Ë( (
ù_msfûãr
) \

341 -  (
ö_addr
) \

342 + (
num§c
Ë*  (
ö_addr
))

	)

344 
	sgroup_fûãr


347 
uöt32_t
 
	mgf_öãrÁ˚
;

350 
sockaddr_°‹age
 
	mgf_group
;

353 
uöt32_t
 
	mgf_fmode
;

356 
uöt32_t
 
	mgf_num§c
;

358 
sockaddr_°‹age
 
	mgf_¶i°
[1];

361 
	#GROUP_FILTER_SIZE
(
num§c
Ë( (
group_fûãr
) \

362 -  (
sockaddr_°‹age
) \

363 + ((
num§c
) \

364 *  (
sockaddr_°‹age
)))

	)

374 
uöt32_t
 
	$¡ohl
 (
uöt32_t
 
__√é⁄g
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

375 
uöt16_t
 
	$¡ohs
 (
uöt16_t
 
__√tsh‹t
)

376 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

377 
uöt32_t
 
	$ht⁄l
 (
uöt32_t
 
__ho°l⁄g
)

378 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

379 
uöt16_t
 
	$ht⁄s
 (
uöt16_t
 
__ho°sh‹t
)

380 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

382 
	~<ídün.h
>

385 
	~<bôs/byãsw≠.h
>

387 #ifde‡
__OPTIMIZE__


391 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


394 
	#¡ohl
(
x
Ë(x)

	)

395 
	#¡ohs
(
x
Ë(x)

	)

396 
	#ht⁄l
(
x
Ë(x)

	)

397 
	#ht⁄s
(
x
Ë(x)

	)

399 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


400 
	#¡ohl
(
x
Ë
	`__bsw≠_32
 (x)

	)

401 
	#¡ohs
(
x
Ë
	`__bsw≠_16
 (x)

	)

402 
	#ht⁄l
(
x
Ë
	`__bsw≠_32
 (x)

	)

403 
	#ht⁄s
(
x
Ë
	`__bsw≠_16
 (x)

	)

408 #ifde‡
__GNUC__


409 
	#IN6_IS_ADDR_UNSPECIFIED
(
a
) \

410 (
__exãnsi⁄__
 \

411 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

412 
__a
->
s6_addr32
[0] == 0 \

413 && 
__a
->
s6_addr32
[1] == 0 \

414 && 
__a
->
s6_addr32
[2] == 0 \

415 && 
__a
->
s6_addr32
[3] =0; 
	}
}))

	)

417 
	#IN6_IS_ADDR_LOOPBACK
(
a
) \

418 (
__exãnsi⁄__
 \

419 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

420 
__a
->
s6_addr32
[0] == 0 \

421 && 
__a
->
s6_addr32
[1] == 0 \

422 && 
__a
->
s6_addr32
[2] == 0 \

423 && 
__a
->
s6_addr32
[3] =
	`ht⁄l
 (1); }))

	)

425 
	#IN6_IS_ADDR_LINKLOCAL
(
a
) \

426 (
__exãnsi⁄__
 \

427 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

428 (
__a
->
s6_addr32
[0] & 
	`ht⁄l
 (0xffc00000)Ë=ht⁄»(0x„800000); }))

	)

430 
	#IN6_IS_ADDR_SITELOCAL
(
a
) \

431 (
__exãnsi⁄__
 \

432 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

433 (
__a
->
s6_addr32
[0] & 
	`ht⁄l
 (0xffc00000)Ë=ht⁄»(0x„c00000); }))

	)

435 
	#IN6_IS_ADDR_V4MAPPED
(
a
) \

436 (
__exãnsi⁄__
 \

437 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

438 
__a
->
s6_addr32
[0] == 0 \

439 && 
__a
->
s6_addr32
[1] == 0 \

440 && 
__a
->
s6_addr32
[2] =
	`ht⁄l
 (0xffff); }))

	)

442 
	#IN6_IS_ADDR_V4COMPAT
(
a
) \

443 (
__exãnsi⁄__
 \

444 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

445 
__a
->
s6_addr32
[0] == 0 \

446 && 
__a
->
s6_addr32
[1] == 0 \

447 && 
__a
->
s6_addr32
[2] == 0 \

448 && 
	`¡ohl
 (
__a
->
s6_addr32
[3]Ë> 1; }))

	)

450 
	#IN6_ARE_ADDR_EQUAL
(
a
,
b
) \

451 (
__exãnsi⁄__
 \

452 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

453 c⁄° 
ö6_addr
 *
__b
 = (c⁄° ö6_add∏*Ë(
b
); \

454 
__a
->
s6_addr32
[0] =
__b
->s6_addr32[0] \

455 && 
__a
->
s6_addr32
[1] =
__b
->s6_addr32[1] \

456 && 
__a
->
s6_addr32
[2] =
__b
->s6_addr32[2] \

457 && 
__a
->
s6_addr32
[3] =
__b
->s6_addr32[3]; }))

	)

459 
	#IN6_IS_ADDR_UNSPECIFIED
(
a
) \

460 (((c⁄° 
uöt32_t
 *Ë(
a
))[0] == 0 \

461 && ((c⁄° 
uöt32_t
 *Ë(
a
))[1] == 0 \

462 && ((c⁄° 
uöt32_t
 *Ë(
a
))[2] == 0 \

463 && ((c⁄° 
uöt32_t
 *Ë(
a
))[3] =0)

	)

465 
	#IN6_IS_ADDR_LOOPBACK
(
a
) \

466 (((c⁄° 
uöt32_t
 *Ë(
a
))[0] == 0 \

467 && ((c⁄° 
uöt32_t
 *Ë(
a
))[1] == 0 \

468 && ((c⁄° 
uöt32_t
 *Ë(
a
))[2] == 0 \

469 && ((c⁄° 
uöt32_t
 *Ë(
a
))[3] =
	`ht⁄l
 (1))

	)

471 
	#IN6_IS_ADDR_LINKLOCAL
(
a
) \

472 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] & 
	`ht⁄l
 (0xffc00000)) \

473 =
	`ht⁄l
 (0x„800000))

	)

475 
	#IN6_IS_ADDR_SITELOCAL
(
a
) \

476 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] & 
	`ht⁄l
 (0xffc00000)) \

477 =
	`ht⁄l
 (0x„c00000))

	)

479 
	#IN6_IS_ADDR_V4MAPPED
(
a
) \

480 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] == 0) \

481 && (((c⁄° 
uöt32_t
 *Ë(
a
))[1] == 0) \

482 && (((c⁄° 
uöt32_t
 *Ë(
a
))[2] =
	`ht⁄l
 (0xffff)))

	)

484 
	#IN6_IS_ADDR_V4COMPAT
(
a
) \

485 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] == 0) \

486 && (((c⁄° 
uöt32_t
 *Ë(
a
))[1] == 0) \

487 && (((c⁄° 
uöt32_t
 *Ë(
a
))[2] == 0) \

488 && (
	`¡ohl
 (((c⁄° 
uöt32_t
 *Ë(
a
))[3]Ë> 1))

	)

490 
	#IN6_ARE_ADDR_EQUAL
(
a
,
b
) \

491 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] =((c⁄° uöt32_à*Ë(
b
))[0]) \

492 && (((c⁄° 
uöt32_t
 *Ë(
a
))[1] =((c⁄° uöt32_à*Ë(
b
))[1]) \

493 && (((c⁄° 
uöt32_t
 *Ë(
a
))[2] =((c⁄° uöt32_à*Ë(
b
))[2]) \

494 && (((c⁄° 
uöt32_t
 *Ë(
a
))[3] =((c⁄° uöt32_à*Ë(
b
))[3]))

	)

497 
	#IN6_IS_ADDR_MULTICAST
(
a
Ë(((c⁄° 
uöt8_t
 *Ë◊))[0] =0xff)

	)

499 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


501 
	$bödªsvp‹t
 (
__sockfd
, 
sockaddr_ö
 *
__sock_ö
Ë
__THROW
;

504 
	$bödªsvp‹t6
 (
__sockfd
, 
sockaddr_ö6
 *
__sock_ö
)

505 
__THROW
;

509 
	#IN6_IS_ADDR_MC_NODELOCAL
(
a
) \

510 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

511 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x1))

	)

513 
	#IN6_IS_ADDR_MC_LINKLOCAL
(
a
) \

514 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

515 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x2))

	)

517 
	#IN6_IS_ADDR_MC_SITELOCAL
(
a
) \

518 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

519 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x5))

	)

521 
	#IN6_IS_ADDR_MC_ORGLOCAL
(
a
) \

522 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

523 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x8))

	)

525 
	#IN6_IS_ADDR_MC_GLOBAL
(
a
) \

526 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

527 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0xe))

	)

530 #ifde‡
__USE_GNU


531 
cmsghdr
;

534 
	sö6_pktöfo


536 
ö6_addr
 
ùi6_addr
;

537 
ùi6_ifödex
;

541 
	sù6_mtuöfo


543 
sockaddr_ö6
 
ù6m_addr
;

544 
uöt32_t
 
ù6m_mtu
;

549 
	$öë6_›ti⁄_•a˚
 (
__nbyãs
)

550 
__THROW
 
__©åibuã_dïªˇãd__
;

551 
	$öë6_›ti⁄_öô
 (*
__bp
, 
cmsghdr
 **
__cmsgp
,

552 
__ty≥
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

553 
	$öë6_›ti⁄_≠≥nd
 (
cmsghdr
 *
__cmsg
,

554 c⁄° 
uöt8_t
 *
__ty≥p
, 
__mu…x
,

555 
__∂usy
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

556 
uöt8_t
 *
	$öë6_›ti⁄_Æloc
 (
cmsghdr
 *
__cmsg
, 
__d©Æí
,

557 
__mu…x
, 
__∂usy
)

558 
__THROW
 
__©åibuã_dïªˇãd__
;

559 
	$öë6_›ti⁄_√xt
 (c⁄° 
cmsghdr
 *
__cmsg
,

560 
uöt8_t
 **
__çåp
)

561 
__THROW
 
__©åibuã_dïªˇãd__
;

562 
	$öë6_›ti⁄_föd
 (c⁄° 
cmsghdr
 *
__cmsg
,

563 
uöt8_t
 **
__çåp
, 
__ty≥
)

564 
__THROW
 
__©åibuã_dïªˇãd__
;

568 
	$öë6_›t_öô
 (*
__extbuf
, 
sockÀn_t
 
__exéí
Ë
__THROW
;

569 
	$öë6_›t_≠≥nd
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

570 
uöt8_t
 
__ty≥
, 
sockÀn_t
 
__Àn
, uöt8_à
__Æign
,

571 **
__d©abuÂ
Ë
__THROW
;

572 
	$öë6_›t_föish
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
)

573 
__THROW
;

574 
	$öë6_›t_£t_vÆ
 (*
__d©abuf
, 
__off£t
, *
__vÆ
,

575 
sockÀn_t
 
__vÆÀn
Ë
__THROW
;

576 
	$öë6_›t_√xt
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

577 
uöt8_t
 *
__ty≥p
, 
sockÀn_t
 *
__À≈
,

578 **
__d©abuÂ
Ë
__THROW
;

579 
	$öë6_›t_föd
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

580 
uöt8_t
 
__ty≥
, 
sockÀn_t
 *
__À≈
,

581 **
__d©abuÂ
Ë
__THROW
;

582 
	$öë6_›t_gë_vÆ
 (*
__d©abuf
, 
__off£t
, *
__vÆ
,

583 
sockÀn_t
 
__vÆÀn
Ë
__THROW
;

587 
sockÀn_t
 
	$öë6_πh_•a˚
 (
__ty≥
, 
__£gmíts
Ë
__THROW
;

588 *
	$öë6_πh_öô
 (*
__bp
, 
sockÀn_t
 
__bp_Àn
, 
__ty≥
,

589 
__£gmíts
Ë
__THROW
;

590 
	$öë6_πh_add
 (*
__bp
, c⁄° 
ö6_addr
 *
__addr
Ë
__THROW
;

591 
	$öë6_πh_ªvî£
 (c⁄° *
__ö
, *
__out
Ë
__THROW
;

592 
	$öë6_πh_£gmíts
 (c⁄° *
__bp
Ë
__THROW
;

593 
ö6_addr
 *
	$öë6_πh_gëaddr
 (c⁄° *
__bp
, 
__ödex
)

594 
__THROW
;

600 
	$gëùv4sour˚fûãr
 (
__s
, 
ö_addr
 
__öãrÁ˚_addr
,

601 
ö_addr
 
__group
, 
uöt32_t
 *
__fmode
,

602 
uöt32_t
 *
__num§c
, 
ö_addr
 *
__¶i°
)

603 
__THROW
;

606 
	$£tùv4sour˚fûãr
 (
__s
, 
ö_addr
 
__öãrÁ˚_addr
,

607 
ö_addr
 
__group
, 
uöt32_t
 
__fmode
,

608 
uöt32_t
 
__num§c
,

609 c⁄° 
ö_addr
 *
__¶i°
)

610 
__THROW
;

614 
	$gësour˚fûãr
 (
__s
, 
uöt32_t
 
__öãrÁ˚_addr
,

615 c⁄° 
sockaddr
 *
__group
,

616 
sockÀn_t
 
__grou∂í
, 
uöt32_t
 *
__fmode
,

617 
uöt32_t
 *
__num§c
,

618 
sockaddr_°‹age
 *
__¶i°
Ë
__THROW
;

621 
	$£tsour˚fûãr
 (
__s
, 
uöt32_t
 
__öãrÁ˚_addr
,

622 c⁄° 
sockaddr
 *
__group
,

623 
sockÀn_t
 
__grou∂í
, 
uöt32_t
 
__fmode
,

624 
uöt32_t
 
__num§c
,

625 c⁄° 
sockaddr_°‹age
 *
__¶i°
Ë
__THROW
;

628 
__END_DECLS


	@/usr/include/poll.h

1 
	~<sys/pﬁl.h
>

	@/usr/include/pthread.h

18 #i‚de‡
_PTHREAD_H


19 
	#_PTHREAD_H
 1

	)

21 
	~<„©uªs.h
>

22 
	~<ídün.h
>

23 
	~<sched.h
>

24 
	~<time.h
>

26 
	~<bôs/±hªadty≥s.h
>

27 
	~<bôs/£tjmp.h
>

28 
	~<bôs/w‹dsize.h
>

34 
	mPTHREAD_CREATE_JOINABLE
,

35 
	#PTHREAD_CREATE_JOINABLE
 
PTHREAD_CREATE_JOINABLE


	)

36 
	mPTHREAD_CREATE_DETACHED


37 
	#PTHREAD_CREATE_DETACHED
 
PTHREAD_CREATE_DETACHED


	)

44 
	mPTHREAD_MUTEX_TIMED_NP
,

45 
	mPTHREAD_MUTEX_RECURSIVE_NP
,

46 
	mPTHREAD_MUTEX_ERRORCHECK_NP
,

47 
	mPTHREAD_MUTEX_ADAPTIVE_NP


48 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


50 
	mPTHREAD_MUTEX_NORMAL
 = 
PTHREAD_MUTEX_TIMED_NP
,

51 
	mPTHREAD_MUTEX_RECURSIVE
 = 
PTHREAD_MUTEX_RECURSIVE_NP
,

52 
	mPTHREAD_MUTEX_ERRORCHECK
 = 
PTHREAD_MUTEX_ERRORCHECK_NP
,

53 
	mPTHREAD_MUTEX_DEFAULT
 = 
PTHREAD_MUTEX_NORMAL


55 #ifde‡
__USE_GNU


57 , 
	mPTHREAD_MUTEX_FAST_NP
 = 
PTHREAD_MUTEX_TIMED_NP


62 #ifde‡
__USE_XOPEN2K


66 
	mPTHREAD_MUTEX_STALLED
,

67 
	mPTHREAD_MUTEX_STALLED_NP
 = 
PTHREAD_MUTEX_STALLED
,

68 
	mPTHREAD_MUTEX_ROBUST
,

69 
	mPTHREAD_MUTEX_ROBUST_NP
 = 
PTHREAD_MUTEX_ROBUST


74 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


78 
	mPTHREAD_PRIO_NONE
,

79 
	mPTHREAD_PRIO_INHERIT
,

80 
	mPTHREAD_PRIO_PROTECT


86 #i‡
__PTHREAD_MUTEX_HAVE_ELISION
 == 1

87 
	#__PTHREAD_SPINS
 0, 0

	)

88 #ñi‡
__PTHREAD_MUTEX_HAVE_ELISION
 == 2

89 
	#__PTHREAD_SPINS
 { 0, 0 }

	)

91 
	#__PTHREAD_SPINS
 0

	)

94 #ifde‡
__PTHREAD_MUTEX_HAVE_PREV


95 
	#PTHREAD_MUTEX_INITIALIZER
 \

96 { { 0, 0, 0, 0, 0, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

97 #ifde‡
__USE_GNU


98 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

99 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

100 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

101 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

102 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

103 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

104 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

105 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

109 
	#PTHREAD_MUTEX_INITIALIZER
 \

110 { { 0, 0, 0, 0, 0, { 
__PTHREAD_SPINS
 } } }

	)

111 #ifde‡
__USE_GNU


112 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

113 { { 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 
__PTHREAD_SPINS
 } } }

	)

114 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

115 { { 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 
__PTHREAD_SPINS
 } } }

	)

116 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

117 { { 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 
__PTHREAD_SPINS
 } } }

	)

124 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


127 
	mPTHREAD_RWLOCK_PREFER_READER_NP
,

128 
	mPTHREAD_RWLOCK_PREFER_WRITER_NP
,

129 
	mPTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,

130 
	mPTHREAD_RWLOCK_DEFAULT_NP
 = 
PTHREAD_RWLOCK_PREFER_READER_NP


136 #i‚de‡
__PTHREAD_RWLOCK_INT_FLAGS_SHARED


137 #i‡
__WORDSIZE
 == 64

138 
	#__PTHREAD_RWLOCK_INT_FLAGS_SHARED
 1

	)

143 
	#PTHREAD_RWLOCK_INITIALIZER
 \

144 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

	)

145 #ifde‡
__USE_GNU


146 #ifde‡
__PTHREAD_RWLOCK_INT_FLAGS_SHARED


147 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

149 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
 } }

	)

151 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


152 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

153 { { 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
, \

154 0, 0, 0, 0 } }

	)

156 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

157 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,\

158 0 } }

	)

168 
	mPTHREAD_INHERIT_SCHED
,

169 
	#PTHREAD_INHERIT_SCHED
 
PTHREAD_INHERIT_SCHED


	)

170 
	mPTHREAD_EXPLICIT_SCHED


171 
	#PTHREAD_EXPLICIT_SCHED
 
PTHREAD_EXPLICIT_SCHED


	)

178 
	mPTHREAD_SCOPE_SYSTEM
,

179 
	#PTHREAD_SCOPE_SYSTEM
 
PTHREAD_SCOPE_SYSTEM


	)

180 
	mPTHREAD_SCOPE_PROCESS


181 
	#PTHREAD_SCOPE_PROCESS
 
PTHREAD_SCOPE_PROCESS


	)

188 
	mPTHREAD_PROCESS_PRIVATE
,

189 
	#PTHREAD_PROCESS_PRIVATE
 
PTHREAD_PROCESS_PRIVATE


	)

190 
	mPTHREAD_PROCESS_SHARED


191 
	#PTHREAD_PROCESS_SHARED
 
PTHREAD_PROCESS_SHARED


	)

197 
	#PTHREAD_COND_INITIALIZER
 { { 0, 0, 0, 0, 0, (*Ë0, 0, 0 } }

	)

201 
	s_±hªad_˛ónup_buf„r


203 (*
	m__routöe
) (*);

204 *
	m__¨g
;

205 
	m__ˇn˚…y≥
;

206 
_±hªad_˛ónup_buf„r
 *
	m__¥ev
;

212 
	mPTHREAD_CANCEL_ENABLE
,

213 
	#PTHREAD_CANCEL_ENABLE
 
PTHREAD_CANCEL_ENABLE


	)

214 
	mPTHREAD_CANCEL_DISABLE


215 
	#PTHREAD_CANCEL_DISABLE
 
PTHREAD_CANCEL_DISABLE


	)

219 
	mPTHREAD_CANCEL_DEFERRED
,

220 
	#PTHREAD_CANCEL_DEFERRED
 
PTHREAD_CANCEL_DEFERRED


	)

221 
	mPTHREAD_CANCEL_ASYNCHRONOUS


222 
	#PTHREAD_CANCEL_ASYNCHRONOUS
 
PTHREAD_CANCEL_ASYNCHRONOUS


	)

224 
	#PTHREAD_CANCELED
 ((*Ë-1)

	)

228 
	#PTHREAD_ONCE_INIT
 0

	)

231 #ifde‡
__USE_XOPEN2K


235 
	#PTHREAD_BARRIER_SERIAL_THREAD
 -1

	)

239 
__BEGIN_DECLS


244 
±hªad_¸óã
 (
±hªad_t
 *
__ª°ri˘
 
__√wthªad
,

245 c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

246 *(*
__°¨t_routöe
) (*),

247 *
__ª°ri˘
 
__¨g
Ë
__THROWNL
 
__n⁄nuŒ
 ((1, 3));

253 
	$±hªad_exô
 (*
__ªtvÆ
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

261 
	`±hªad_joö
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
);

263 #ifde‡
__USE_GNU


266 
	$±hªad_åyjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
Ë
__THROW
;

274 
	`±hªad_timedjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
,

275 c⁄° 
time•ec
 *
__ab°ime
);

282 
	$±hªad_dëach
 (
±hªad_t
 
__th
Ë
__THROW
;

286 
±hªad_t
 
	$±hªad_£lf
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

289 
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
)

290 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

298 
	$±hªad_©å_öô
 (
±hªad_©å_t
 *
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

301 
	$±hªad_©å_de°roy
 (
±hªad_©å_t
 *
__©å
)

302 
__THROW
 
	`__n⁄nuŒ
 ((1));

305 
	$±hªad_©å_gëdëach°©e
 (c⁄° 
±hªad_©å_t
 *
__©å
,

306 *
__dëach°©e
)

307 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

310 
	$±hªad_©å_£tdëach°©e
 (
±hªad_©å_t
 *
__©å
,

311 
__dëach°©e
)

312 
__THROW
 
	`__n⁄nuŒ
 ((1));

316 
	$±hªad_©å_gëgu¨dsize
 (c⁄° 
±hªad_©å_t
 *
__©å
,

317 
size_t
 *
__gu¨dsize
)

318 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

321 
	$±hªad_©å_£tgu¨dsize
 (
±hªad_©å_t
 *
__©å
,

322 
size_t
 
__gu¨dsize
)

323 
__THROW
 
	`__n⁄nuŒ
 ((1));

327 
	$±hªad_©å_gësched∑øm
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

328 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

329 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

332 
	$±hªad_©å_£tsched∑øm
 (
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

333 c⁄° 
sched_∑øm
 *
__ª°ri˘


334 
__∑øm
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

337 
	$±hªad_©å_gëschedpﬁicy
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


338 
__©å
, *
__ª°ri˘
 
__pﬁicy
)

339 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

342 
	$±hªad_©å_£tschedpﬁicy
 (
±hªad_©å_t
 *
__©å
, 
__pﬁicy
)

343 
__THROW
 
	`__n⁄nuŒ
 ((1));

346 
	$±hªad_©å_gëöhîôsched
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


347 
__©å
, *
__ª°ri˘
 
__öhîô
)

348 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

351 
	$±hªad_©å_£töhîôsched
 (
±hªad_©å_t
 *
__©å
,

352 
__öhîô
)

353 
__THROW
 
	`__n⁄nuŒ
 ((1));

357 
	$±hªad_©å_gësc›e
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

358 *
__ª°ri˘
 
__sc›e
)

359 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

362 
	$±hªad_©å_£tsc›e
 (
±hªad_©å_t
 *
__©å
, 
__sc›e
)

363 
__THROW
 
	`__n⁄nuŒ
 ((1));

366 
	$±hªad_©å_gë°ackaddr
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


367 
__©å
, **
__ª°ri˘
 
__°ackaddr
)

368 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__©åibuã_dïªˇãd__
;

374 
	$±hªad_©å_£t°ackaddr
 (
±hªad_©å_t
 *
__©å
,

375 *
__°ackaddr
)

376 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
;

379 
	$±hªad_©å_gë°acksize
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


380 
__©å
, 
size_t
 *
__ª°ri˘
 
__°acksize
)

381 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

386 
	$±hªad_©å_£t°acksize
 (
±hªad_©å_t
 *
__©å
,

387 
size_t
 
__°acksize
)

388 
__THROW
 
	`__n⁄nuŒ
 ((1));

390 #ifde‡
__USE_XOPEN2K


392 
	$±hªad_©å_gë°ack
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

393 **
__ª°ri˘
 
__°ackaddr
,

394 
size_t
 *
__ª°ri˘
 
__°acksize
)

395 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

400 
	$±hªad_©å_£t°ack
 (
±hªad_©å_t
 *
__©å
, *
__°ackaddr
,

401 
size_t
 
__°acksize
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

404 #ifde‡
__USE_GNU


407 
	$±hªad_©å_£èfföôy_≈
 (
±hªad_©å_t
 *
__©å
,

408 
size_t
 
__˝u£tsize
,

409 c⁄° 
˝u_£t_t
 *
__˝u£t
)

410 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

414 
	$±hªad_©å_gëafföôy_≈
 (c⁄° 
±hªad_©å_t
 *
__©å
,

415 
size_t
 
__˝u£tsize
,

416 
˝u_£t_t
 *
__˝u£t
)

417 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

420 
	$±hªad_gë©å_deÁu…_≈
 (
±hªad_©å_t
 *
__©å
)

421 
__THROW
 
	`__n⁄nuŒ
 ((1));

425 
	$±hªad_£èâr_deÁu…_≈
 (c⁄° 
±hªad_©å_t
 *
__©å
)

426 
__THROW
 
	`__n⁄nuŒ
 ((1));

431 
	$±hªad_gë©å_≈
 (
±hªad_t
 
__th
, 
±hªad_©å_t
 *
__©å
)

432 
__THROW
 
	`__n⁄nuŒ
 ((2));

440 
	$±hªad_£tsched∑øm
 (
±hªad_t
 
__èrgë_thªad
, 
__pﬁicy
,

441 c⁄° 
sched_∑øm
 *
__∑øm
)

442 
__THROW
 
	`__n⁄nuŒ
 ((3));

445 
	$±hªad_gësched∑øm
 (
±hªad_t
 
__èrgë_thªad
,

446 *
__ª°ri˘
 
__pﬁicy
,

447 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

448 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

451 
	$±hªad_£tsched¥io
 (
±hªad_t
 
__èrgë_thªad
, 
__¥io
)

452 
__THROW
;

455 #ifde‡
__USE_GNU


457 
	$±hªad_gë«me_≈
 (
±hªad_t
 
__èrgë_thªad
, *
__buf
,

458 
size_t
 
__buÊí
)

459 
__THROW
 
	`__n⁄nuŒ
 ((2));

462 
	$±hªad_£äame_≈
 (
±hªad_t
 
__èrgë_thªad
, c⁄° *
__«me
)

463 
__THROW
 
	`__n⁄nuŒ
 ((2));

467 #ifde‡
__USE_UNIX98


469 
	$±hªad_gëc⁄cuºícy
 (Ë
__THROW
;

472 
	$±hªad_£tc⁄cuºícy
 (
__Àvñ
Ë
__THROW
;

475 #ifde‡
__USE_GNU


480 
	$±hªad_yõld
 (Ë
__THROW
;

485 
	$±hªad_£èfföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

486 c⁄° 
˝u_£t_t
 *
__˝u£t
)

487 
__THROW
 
	`__n⁄nuŒ
 ((3));

490 
	$±hªad_gëafföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

491 
˝u_£t_t
 *
__˝u£t
)

492 
__THROW
 
	`__n⁄nuŒ
 ((3));

505 
	`±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

506 (*
__öô_routöe
Ë()Ë
	`__n⁄nuŒ
 ((1, 2));

517 
	`±hªad_£tˇn˚l°©e
 (
__°©e
, *
__ﬁd°©e
);

521 
	`±hªad_£tˇn˚…y≥
 (
__ty≥
, *
__ﬁdty≥
);

524 
	`±hªad_ˇn˚l
 (
±hªad_t
 
__th
);

529 
	`±hªad_ã°ˇn˚l
 ();

538 
__jmp_buf
 
__ˇn˚l_jmp_buf
;

539 
__mask_was_ßved
;

540 } 
__ˇn˚l_jmp_buf
[1];

541 *
__∑d
[4];

542 } 
	t__±hªad_unwöd_buf_t
 
	t__©åibuã__
 ((
	t__Æig√d__
));

545 #i‚de‡
__˛ónup_f˘_©åibuã


546 
	#__˛ónup_f˘_©åibuã


	)

551 
	s__±hªad_˛ónup_‰ame


553 (*
__ˇn˚l_routöe
) (*);

554 *
__ˇn˚l_¨g
;

555 
__do_ô
;

556 
__ˇn˚l_ty≥
;

559 #i‡
deföed
 
__GNUC__
 && deföed 
__EXCEPTIONS


560 #ifde‡
__˝lu•lus


562 ˛as†
	c__±hªad_˛ónup_˛ass


564 (*
__ˇn˚l_routöe
) (*);

565 *
__ˇn˚l_¨g
;

566 
__do_ô
;

567 
__ˇn˚l_ty≥
;

569 
public
:

570 
	`__±hªad_˛ónup_˛ass
 ((*
__f˘
Ë(*), *
__¨g
)

571 : 
	`__ˇn˚l_routöe
 (
__f˘
), 
	`__ˇn˚l_¨g
 (
__¨g
), 
	$__do_ô
 (1) { }

572 ~
	$__±hªad_˛ónup_˛ass
 (Ë{ i‡(
__do_ô
Ë
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); 
	}
}

573 
	$__£tdoô
 (
__√wvÆ
Ë{ 
__do_ô
 = __√wvÆ; 
	}
}

574 
	$__de„r
 (Ë{ 
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
,

575 &
__ˇn˚l_ty≥
); 
	}
}

576 
	$__ª°‹e
 (Ëc⁄° { 
	`±hªad_£tˇn˚…y≥
 (
__ˇn˚l_ty≥
, 0); 
	}
}

586 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

588 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
)

	)

592 
	#±hªad_˛ónup_p›
(
execuã
) \

593 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

594 } 0)

	)

596 #ifde‡
__USE_GNU


600 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

602 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
); \

603 
__˛‰ame
.
	`__de„r
 ()

	)

608 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

609 
__˛‰ame
.
	`__ª°‹e
 (); \

610 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

611 } 0)

	)

618 
__exã∫_ölöe
 

619 
	$__±hªad_˛ónup_routöe
 (
__±hªad_˛ónup_‰ame
 *
__‰ame
)

621 i‡(
__‰ame
->
__do_ô
)

622 
__‰ame
->
	`__ˇn˚l_routöe
 (__‰ame->
__ˇn˚l_¨g
);

623 
	}
}

632 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

634 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

635 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

636 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

637 .
__do_ô
 = 1 };

	)

641 
	#±hªad_˛ónup_p›
(
execuã
) \

642 
__˛‰ame
.
__do_ô
 = (
execuã
); \

643 } 0)

	)

645 #ifde‡
__USE_GNU


649 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

651 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

652 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

653 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

654 .
__do_ô
 = 1 }; \

655 (Ë
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
, \

656 &
__˛‰ame
.
__ˇn˚l_ty≥
)

	)

661 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

662 (Ë
	`±hªad_£tˇn˚…y≥
 (
__˛‰ame
.
__ˇn˚l_ty≥
, 
NULL
); \

663 
__˛‰ame
.
__do_ô
 = (
execuã
); \

664 } 0)

	)

675 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

677 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

678 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

679 *
__ˇn˚l_¨g
 = (
¨g
); \

680 
__nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

681 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

682 i‡(
	`__glibc_u∆ikñy
 (
__nŸ_fú°_ˇŒ
)) \

684 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

685 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

689 
	`__±hªad_ªgi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

690 dÿ{

	)

691 
__±hªad_ªgi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

692 
__˛ónup_f˘_©åibuã
;

696 
	#±hªad_˛ónup_p›
(
execuã
) \

699 
	`__±hªad_uƒegi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

700 i‡(
execuã
) \

701 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

702 } 0)

	)

703 
	$__±hªad_uƒegi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

704 
__˛ónup_f˘_©åibuã
;

706 #ifde‡
__USE_GNU


710 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

712 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

713 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

714 *
__ˇn˚l_¨g
 = (
¨g
); \

715 
__nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

716 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

717 i‡(
	`__glibc_u∆ikñy
 (
__nŸ_fú°_ˇŒ
)) \

719 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

720 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

724 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (&
__ˇn˚l_buf
); \

725 dÿ{

	)

726 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (
__±hªad_unwöd_buf_t
 *
__buf
)

727 
__˛ónup_f˘_©åibuã
;

732 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

735 
	`__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (&
__ˇn˚l_buf
); \

736 i‡(
execuã
) \

737 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

738 
	}
} 0)

	)

739 
	$__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (
__±hªad_unwöd_buf_t
 *
__buf
)

740 
__˛ónup_f˘_©åibuã
;

744 
	$__±hªad_unwöd_√xt
 (
__±hªad_unwöd_buf_t
 *
__buf
)

745 
__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
__n‹ëu∫__
))

746 #i‚de‡
SHARED


747 
	`__©åibuã__
 ((
__wók__
))

753 
__jmp_buf_èg
;

754 
	$__sig£tjmp
 (
__jmp_buf_èg
 *
__ív
, 
__ßvemask
Ë
__THROWNL
;

760 
	$±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

761 c⁄° 
±hªad_muãx©å_t
 *
__muãx©å
)

762 
__THROW
 
	`__n⁄nuŒ
 ((1));

765 
	$±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
)

766 
__THROW
 
	`__n⁄nuŒ
 ((1));

769 
	$±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
)

770 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

773 
	$±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
)

774 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

776 #ifde‡
__USE_XOPEN2K


778 
	$±hªad_muãx_timedlock
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

779 c⁄° 
time•ec
 *
__ª°ri˘


780 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

784 
	$±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
)

785 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

789 
	$±hªad_muãx_gë¥io˚ûög
 (c⁄° 
±hªad_muãx_t
 *

790 
__ª°ri˘
 
__muãx
,

791 *
__ª°ri˘
 
__¥io˚ûög
)

792 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

796 
	$±hªad_muãx_£çrio˚ûög
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

797 
__¥io˚ûög
,

798 *
__ª°ri˘
 
__ﬁd_˚ûög
)

799 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

802 #ifde‡
__USE_XOPEN2K8


804 
	$±hªad_muãx_c⁄si°ít
 (
±hªad_muãx_t
 *
__muãx
)

805 
__THROW
 
	`__n⁄nuŒ
 ((1));

806 #ifde‡
__USE_GNU


807 
	$±hªad_muãx_c⁄si°ít_≈
 (
±hªad_muãx_t
 *
__muãx
)

808 
__THROW
 
	`__n⁄nuŒ
 ((1));

817 
	$±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
)

818 
__THROW
 
	`__n⁄nuŒ
 ((1));

821 
	$±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
)

822 
__THROW
 
	`__n⁄nuŒ
 ((1));

825 
	$±hªad_muãx©å_gëpsh¨ed
 (c⁄° 
±hªad_muãx©å_t
 *

826 
__ª°ri˘
 
__©å
,

827 *
__ª°ri˘
 
__psh¨ed
)

828 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

831 
	$±hªad_muãx©å_£çsh¨ed
 (
±hªad_muãx©å_t
 *
__©å
,

832 
__psh¨ed
)

833 
__THROW
 
	`__n⁄nuŒ
 ((1));

835 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


837 
	$±hªad_muãx©å_gëty≥
 (c⁄° 
±hªad_muãx©å_t
 *
__ª°ri˘


838 
__©å
, *
__ª°ri˘
 
__köd
)

839 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

844 
	$±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
, 
__köd
)

845 
__THROW
 
	`__n⁄nuŒ
 ((1));

849 
	$±hªad_muãx©å_gë¥Ÿocﬁ
 (c⁄° 
±hªad_muãx©å_t
 *

850 
__ª°ri˘
 
__©å
,

851 *
__ª°ri˘
 
__¥Ÿocﬁ
)

852 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

856 
	$±hªad_muãx©å_£çrŸocﬁ
 (
±hªad_muãx©å_t
 *
__©å
,

857 
__¥Ÿocﬁ
)

858 
__THROW
 
	`__n⁄nuŒ
 ((1));

861 
	$±hªad_muãx©å_gë¥io˚ûög
 (c⁄° 
±hªad_muãx©å_t
 *

862 
__ª°ri˘
 
__©å
,

863 *
__ª°ri˘
 
__¥io˚ûög
)

864 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

867 
	$±hªad_muãx©å_£çrio˚ûög
 (
±hªad_muãx©å_t
 *
__©å
,

868 
__¥io˚ûög
)

869 
__THROW
 
	`__n⁄nuŒ
 ((1));

871 #ifde‡
__USE_XOPEN2K


873 
	$±hªad_muãx©å_gërobu°
 (c⁄° 
±hªad_muãx©å_t
 *
__©å
,

874 *
__robu°√ss
)

875 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

876 #ifde‡
__USE_GNU


877 
	$±hªad_muãx©å_gërobu°_≈
 (c⁄° 
±hªad_muãx©å_t
 *
__©å
,

878 *
__robu°√ss
)

879 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

883 
	$±hªad_muãx©å_£åobu°
 (
±hªad_muãx©å_t
 *
__©å
,

884 
__robu°√ss
)

885 
__THROW
 
	`__n⁄nuŒ
 ((1));

886 #ifde‡
__USE_GNU


887 
	$±hªad_muãx©å_£åobu°_≈
 (
±hªad_muãx©å_t
 *
__©å
,

888 
__robu°√ss
)

889 
__THROW
 
	`__n⁄nuŒ
 ((1));

894 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


899 
	$±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

900 c⁄° 
±hªad_rwlock©å_t
 *
__ª°ri˘


901 
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

904 
	$±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
)

905 
__THROW
 
	`__n⁄nuŒ
 ((1));

908 
	$±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

909 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

912 
	$±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

913 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

915 #ifde‡
__USE_XOPEN2K


917 
	$±hªad_rwlock_timedrdlock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

918 c⁄° 
time•ec
 *
__ª°ri˘


919 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

923 
	$±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
)

924 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

927 
	$±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
)

928 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

930 #ifde‡
__USE_XOPEN2K


932 
	$±hªad_rwlock_timedwæock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

933 c⁄° 
time•ec
 *
__ª°ri˘


934 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

938 
	$±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
)

939 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

945 
	$±hªad_rwlock©å_öô
 (
±hªad_rwlock©å_t
 *
__©å
)

946 
__THROW
 
	`__n⁄nuŒ
 ((1));

949 
	$±hªad_rwlock©å_de°roy
 (
±hªad_rwlock©å_t
 *
__©å
)

950 
__THROW
 
	`__n⁄nuŒ
 ((1));

953 
	$±hªad_rwlock©å_gëpsh¨ed
 (c⁄° 
±hªad_rwlock©å_t
 *

954 
__ª°ri˘
 
__©å
,

955 *
__ª°ri˘
 
__psh¨ed
)

956 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

959 
	$±hªad_rwlock©å_£çsh¨ed
 (
±hªad_rwlock©å_t
 *
__©å
,

960 
__psh¨ed
)

961 
__THROW
 
	`__n⁄nuŒ
 ((1));

964 
	$±hªad_rwlock©å_gëköd_≈
 (c⁄° 
±hªad_rwlock©å_t
 *

965 
__ª°ri˘
 
__©å
,

966 *
__ª°ri˘
 
__¥ef
)

967 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

970 
	$±hªad_rwlock©å_£tköd_≈
 (
±hªad_rwlock©å_t
 *
__©å
,

971 
__¥ef
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

979 
	$±hªad_c⁄d_öô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

980 c⁄° 
±hªad_c⁄d©å_t
 *
__ª°ri˘
 
__c⁄d_©å
)

981 
__THROW
 
	`__n⁄nuŒ
 ((1));

984 
	$±hªad_c⁄d_de°roy
 (
±hªad_c⁄d_t
 *
__c⁄d
)

985 
__THROW
 
	`__n⁄nuŒ
 ((1));

988 
	$±hªad_c⁄d_sig«l
 (
±hªad_c⁄d_t
 *
__c⁄d
)

989 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

992 
	$±hªad_c⁄d_brﬂdˇ°
 (
±hªad_c⁄d_t
 *
__c⁄d
)

993 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1000 
	$±hªad_c⁄d_waô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

1001 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
)

1002 
	`__n⁄nuŒ
 ((1, 2));

1011 
	$±hªad_c⁄d_timedwaô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

1012 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

1013 c⁄° 
time•ec
 *
__ª°ri˘
 
__ab°ime
)

1014 
	`__n⁄nuŒ
 ((1, 2, 3));

1019 
	$±hªad_c⁄d©å_öô
 (
±hªad_c⁄d©å_t
 *
__©å
)

1020 
__THROW
 
	`__n⁄nuŒ
 ((1));

1023 
	$±hªad_c⁄d©å_de°roy
 (
±hªad_c⁄d©å_t
 *
__©å
)

1024 
__THROW
 
	`__n⁄nuŒ
 ((1));

1027 
	$±hªad_c⁄d©å_gëpsh¨ed
 (c⁄° 
±hªad_c⁄d©å_t
 *

1028 
__ª°ri˘
 
__©å
,

1029 *
__ª°ri˘
 
__psh¨ed
)

1030 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1033 
	$±hªad_c⁄d©å_£çsh¨ed
 (
±hªad_c⁄d©å_t
 *
__©å
,

1034 
__psh¨ed
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1036 #ifde‡
__USE_XOPEN2K


1038 
	$±hªad_c⁄d©å_gë˛ock
 (c⁄° 
±hªad_c⁄d©å_t
 *

1039 
__ª°ri˘
 
__©å
,

1040 
__˛ockid_t
 *
__ª°ri˘
 
__˛ock_id
)

1041 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1044 
	$±hªad_c⁄d©å_£t˛ock
 (
±hªad_c⁄d©å_t
 *
__©å
,

1045 
__˛ockid_t
 
__˛ock_id
)

1046 
__THROW
 
	`__n⁄nuŒ
 ((1));

1050 #ifde‡
__USE_XOPEN2K


1055 
	$±hªad_•ö_öô
 (
±hªad_•ölock_t
 *
__lock
, 
__psh¨ed
)

1056 
__THROW
 
	`__n⁄nuŒ
 ((1));

1059 
	$±hªad_•ö_de°roy
 (
±hªad_•ölock_t
 *
__lock
)

1060 
__THROW
 
	`__n⁄nuŒ
 ((1));

1063 
	$±hªad_•ö_lock
 (
±hªad_•ölock_t
 *
__lock
)

1064 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1067 
	$±hªad_•ö_åylock
 (
±hªad_•ölock_t
 *
__lock
)

1068 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1071 
	$±hªad_•ö_u∆ock
 (
±hªad_•ölock_t
 *
__lock
)

1072 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1079 
	$±hªad_b¨rõr_öô
 (
±hªad_b¨rõr_t
 *
__ª°ri˘
 
__b¨rõr
,

1080 c⁄° 
±hªad_b¨rõøâr_t
 *
__ª°ri˘


1081 
__©å
, 
__cou¡
)

1082 
__THROW
 
	`__n⁄nuŒ
 ((1));

1085 
	$±hªad_b¨rõr_de°roy
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1086 
__THROW
 
	`__n⁄nuŒ
 ((1));

1089 
	$±hªad_b¨rõr_waô
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1090 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1094 
	$±hªad_b¨rõøâr_öô
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1095 
__THROW
 
	`__n⁄nuŒ
 ((1));

1098 
	$±hªad_b¨rõøâr_de°roy
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1099 
__THROW
 
	`__n⁄nuŒ
 ((1));

1102 
	$±hªad_b¨rõøâr_gëpsh¨ed
 (c⁄° 
±hªad_b¨rõøâr_t
 *

1103 
__ª°ri˘
 
__©å
,

1104 *
__ª°ri˘
 
__psh¨ed
)

1105 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1108 
	$±hªad_b¨rõøâr_£çsh¨ed
 (
±hªad_b¨rõøâr_t
 *
__©å
,

1109 
__psh¨ed
)

1110 
__THROW
 
	`__n⁄nuŒ
 ((1));

1122 
	`±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

1123 (*
__de°r_fun˘i⁄
) (*))

1124 
__THROW
 
	`__n⁄nuŒ
 ((1));

1127 
	$±hªad_key_dñëe
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1130 *
	$±hªad_gë•ecific
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1133 
	$±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

1134 c⁄° *
__poöãr
Ë
__THROW
 ;

1137 #ifde‡
__USE_XOPEN2K


1139 
	$±hªad_gë˝u˛ockid
 (
±hªad_t
 
__thªad_id
,

1140 
__˛ockid_t
 *
__˛ock_id
)

1141 
__THROW
 
	`__n⁄nuŒ
 ((2));

1156 
	`±hªad_©f‹k
 ((*
__¥ï¨e
) (),

1157 (*
__∑ª¡
) (),

1158 (*
__chûd
Ë()Ë
__THROW
;

1161 #ifde‡
__USE_EXTERN_INLINES


1163 
__exã∫_ölöe
 

1164 
	`__NTH
 (
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
))

1166  
__thªad1
 =
__thªad2
;

1167 
	}
}

1170 
	g__END_DECLS


	@/usr/include/pwd.h

22 #i‚def 
_PWD_H


23 
	#_PWD_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


29 
	~<bôs/ty≥s.h
>

31 
	#__√ed_size_t


	)

32 
	~<°ddef.h
>

34 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


37 #i‚de‡
__gid_t_deföed


38 
__gid_t
 
	tgid_t
;

39 
	#__gid_t_deföed


	)

42 #i‚de‡
__uid_t_deföed


43 
__uid_t
 
	tuid_t
;

44 
	#__uid_t_deföed


	)

49 
	s∑sswd


51 *
	mpw_«me
;

52 *
	mpw_∑sswd
;

53 
__uid_t
 
	mpw_uid
;

54 
__gid_t
 
	mpw_gid
;

55 *
	mpw_gecos
;

56 *
	mpw_dú
;

57 *
	mpw_shñl
;

61 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_GNU


62 
	#__√ed_FILE


	)

63 
	~<°dio.h
>

67 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


72 
£çwít
 ();

78 
ídpwít
 ();

84 
∑sswd
 *
gëpwít
 ();

87 #ifdef 
__USE_SVID


94 
∑sswd
 *
fgëpwít
 (
FILE
 *
__°ªam
);

102 
puçwít
 (c⁄° 
∑sswd
 *
__ª°ri˘
 
__p
,

103 
FILE
 *
__ª°ri˘
 
__f
);

110 
∑sswd
 *
gëpwuid
 (
__uid_t
 
__uid
);

116 
∑sswd
 *
gëpw«m
 (c⁄° *
__«me
);

118 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


120 #ifde‡
__USE_MISC


123 
	#NSS_BUFLEN_PASSWD
 1024

	)

134 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


139 
gëpwít_r
 (
∑sswd
 *
__ª°ri˘
 
__ªsu…buf
,

140 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

141 
∑sswd
 **
__ª°ri˘
 
__ªsu…
);

144 
gëpwuid_r
 (
__uid_t
 
__uid
,

145 
∑sswd
 *
__ª°ri˘
 
__ªsu…buf
,

146 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

147 
∑sswd
 **
__ª°ri˘
 
__ªsu…
);

149 
gëpw«m_r
 (c⁄° *
__ª°ri˘
 
__«me
,

150 
∑sswd
 *
__ª°ri˘
 
__ªsu…buf
,

151 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

152 
∑sswd
 **
__ª°ri˘
 
__ªsu…
);

155 #ifdef 
__USE_SVID


163 
fgëpwít_r
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

164 
∑sswd
 *
__ª°ri˘
 
__ªsu…buf
,

165 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

166 
∑sswd
 **
__ª°ri˘
 
__ªsu…
);

171 #ifde‡
__USE_GNU


180 
gëpw
 (
__uid_t
 
__uid
, *
__buf„r
);

183 
	g__END_DECLS


	@/usr/include/signal.h

22 #i‚def 
_SIGNAL_H


24 #i‡!
deföed
 
__√ed_sig_©omic_t
 && !deföed 
__√ed_sig£t_t


25 
	#_SIGNAL_H


	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


32 
	~<bôs/sig£t.h
>

36 #i‡
deföed
 
__√ed_sig_©omic_t
 || deföed 
_SIGNAL_H


37 #i‚de‡
__sig_©omic_t_deföed


38 
	#__sig_©omic_t_deföed


	)

39 
__BEGIN_NAMESPACE_STD


40 
__sig_©omic_t
 
	tsig_©omic_t
;

41 
	g__END_NAMESPACE_STD


43 #unde‡
__√ed_sig_©omic_t


46 #i‡
deföed
 
__√ed_sig£t_t
 || (deföed 
_SIGNAL_H
 && deföed 
__USE_POSIX
)

47 #i‚de‡
__sig£t_t_deföed


48 
	#__sig£t_t_deföed


	)

49 
__sig£t_t
 
	tsig£t_t
;

51 #unde‡
__√ed_sig£t_t


54 #ifde‡
_SIGNAL_H


56 
	~<bôs/ty≥s.h
>

57 
	~<bôs/signum.h
>

59 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


60 #i‚de‡
__pid_t_deföed


61 
__pid_t
 
	tpid_t
;

62 
	#__pid_t_deföed


	)

64 #ifde‡
__USE_XOPEN


66 #i‚de‡
__uid_t_deföed


67 
__uid_t
 
	tuid_t
;

68 
	#__uid_t_deföed


	)

72 #ifde‡
__USE_POSIX199309


74 
	#__√ed_time•ec


	)

75 
	~<time.h
>

78 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_XOPEN_EXTENDED


80 
	~<bôs/sigöfo.h
>

85 (*
	t__sigh™dÀr_t
) ();

90 
__sigh™dÀr_t
 
	$__sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

91 
__THROW
;

92 #ifde‡
__USE_GNU


93 
__sigh™dÀr_t
 
	$sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

94 
__THROW
;

100 
__BEGIN_NAMESPACE_STD


101 #ifde‡
__USE_BSD


102 
__sigh™dÀr_t
 
	$sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

103 
__THROW
;

106 #ifde‡
__REDIRECT_NTH


107 
__sigh™dÀr_t
 
	`__REDIRECT_NTH
 (
sig«l
,

108 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
),

109 
__sysv_sig«l
);

111 
	#sig«l
 
__sysv_sig«l


	)

114 
__END_NAMESPACE_STD


116 #ifde‡
__USE_XOPEN


119 
__sigh™dÀr_t
 
	$bsd_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

120 
__THROW
;

126 #ifde‡
__USE_POSIX


127 
	$kûl
 (
__pid_t
 
__pid
, 
__sig
Ë
__THROW
;

130 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


134 
	$kûÕg
 (
__pid_t
 
__pgΩ
, 
__sig
Ë
__THROW
;

137 
__BEGIN_NAMESPACE_STD


139 
	$øi£
 (
__sig
Ë
__THROW
;

140 
__END_NAMESPACE_STD


142 #ifde‡
__USE_SVID


144 
__sigh™dÀr_t
 
	$ssig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

145 
__THROW
;

146 
	$gsig«l
 (
__sig
Ë
__THROW
;

149 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN2K


151 
	`psig«l
 (
__sig
, c⁄° *
__s
);

154 #ifde‡
__USE_XOPEN2K


156 
	`psigöfo
 (c⁄° 
sigöfo_t
 *
__pöfo
, c⁄° *
__s
);

167 
	`__sig∑u£
 (
__sig_‹_mask
, 
__is_sig
);

169 #ifde‡
__USE_XOPEN


170 #ifde‡
__GNUC__


171 
	$sig∑u£
 (
__sig
Ë
	`__asm__
 ("__xpg_sigpause");

174 
	#sig∑u£
(
sig
Ë
	`__sig∑u£
 ((sig), 1)

	)

179 #ifde‡
__USE_BSD


186 
	#sigmask
(
sig
Ë
	`__sigmask
(sig)

	)

189 
	$sigblock
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

192 
	$sig£tmask
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

195 
	$siggëmask
 (Ë
__THROW
 
__©åibuã_dïªˇãd__
;

199 #ifde‡
__USE_MISC


200 
	#NSIG
 
_NSIG


	)

203 #ifde‡
__USE_GNU


204 
__sigh™dÀr_t
 
	tsigh™dÀr_t
;

208 #ifde‡
__USE_BSD


209 
__sigh™dÀr_t
 
	tsig_t
;

212 #ifde‡
__USE_POSIX


215 
	$sigem±y£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

218 
	$sigfûl£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

221 
	$sigadd£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

224 
	$sigdñ£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

227 
	$sigismembî
 (c⁄° 
sig£t_t
 *
__£t
, 
__signo
)

228 
__THROW
 
	`__n⁄nuŒ
 ((1));

230 #ifde‡
__USE_GNU


232 
	$sigi£m±y£t
 (c⁄° 
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

235 
	$sig™d£t
 (
sig£t_t
 *
__£t
, c⁄° sig£t_à*
__À·
,

236 c⁄° 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

239 
	$sig‹£t
 (
sig£t_t
 *
__£t
, c⁄° sig£t_à*
__À·
,

240 c⁄° 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

245 
	~<bôs/siga˘i⁄.h
>

248 
	$sig¥ocmask
 (
__how
, c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
,

249 
sig£t_t
 *
__ª°ri˘
 
__o£t
Ë
__THROW
;

256 
	$sigsu•íd
 (c⁄° 
sig£t_t
 *
__£t
Ë
	`__n⁄nuŒ
 ((1));

259 
	$siga˘i⁄
 (
__sig
, c⁄° 
siga˘i⁄
 *
__ª°ri˘
 
__a˘
,

260 
siga˘i⁄
 *
__ª°ri˘
 
__ﬂ˘
Ë
__THROW
;

263 
	$sig≥ndög
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

270 
	$sigwaô
 (c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
, *__ª°ri˘ 
__sig
)

271 
	`__n⁄nuŒ
 ((1, 2));

273 #ifde‡
__USE_POSIX199309


278 
	$sigwaôöfo
 (c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
,

279 
sigöfo_t
 *
__ª°ri˘
 
__öfo
Ë
	`__n⁄nuŒ
 ((1));

286 
	$sigtimedwaô
 (c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
,

287 
sigöfo_t
 *
__ª°ri˘
 
__öfo
,

288 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
)

289 
	`__n⁄nuŒ
 ((1));

293 
	$sigqueue
 (
__pid_t
 
__pid
, 
__sig
, c⁄° 
sigvÆ
 
__vÆ
)

294 
__THROW
;

299 #ifde‡
__USE_BSD


303 c⁄° *c⁄° 
_sys_sigli°
[
_NSIG
];

304 c⁄° *c⁄° 
sys_sigli°
[
_NSIG
];

307 
	ssigvec


309 
__sigh™dÀr_t
 
sv_h™dÀr
;

310 
sv_mask
;

312 
sv_Êags
;

313 
	#sv_⁄°ack
 
sv_Êags


	)

317 
	#SV_ONSTACK
 (1 << 0)

	)

318 
	#SV_INTERRUPT
 (1 << 1)

	)

319 
	#SV_RESETHAND
 (1 << 2)

	)

327 
	$sigvec
 (
__sig
, c⁄° 
sigvec
 *
__vec
,

328 
sigvec
 *
__ovec
Ë
__THROW
;

332 
	~<bôs/sigc⁄ãxt.h
>

335 
	$sigªtu∫
 (
sigc⁄ãxt
 *
__s˝
Ë
__THROW
;

340 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


341 
	#__√ed_size_t


	)

342 
	~<°ddef.h
>

347 
	$sigöãºu±
 (
__sig
, 
__öãºu±
Ë
__THROW
;

349 
	~<bôs/sig°ack.h
>

350 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


352 
	~<sys/uc⁄ãxt.h
>

358 
	$sig°ack
 (
sig°ack
 *
__ss
, sig°ack *
__oss
)

359 
__THROW
 
__©åibuã_dïªˇãd__
;

363 
	$sigÆt°ack
 (c⁄° 
sigÆt°ack
 *
__ª°ri˘
 
__ss
,

364 
sigÆt°ack
 *
__ª°ri˘
 
__oss
Ë
__THROW
;

368 #ifde‡
__USE_XOPEN_EXTENDED


372 
	$sighﬁd
 (
__sig
Ë
__THROW
;

375 
	$sigªl£
 (
__sig
Ë
__THROW
;

378 
	$sigign‹e
 (
__sig
Ë
__THROW
;

381 
__sigh™dÀr_t
 
	$sig£t
 (
__sig
, 
__sigh™dÀr_t
 
__di•
Ë
__THROW
;

384 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


387 
	~<bôs/±hªadty≥s.h
>

388 
	~<bôs/sigthªad.h
>

395 
	$__libc_cuºít_sigπmö
 (Ë
__THROW
;

397 
	$__libc_cuºít_sigπmax
 (Ë
__THROW
;

401 
__END_DECLS


	@/usr/include/stdio.h

23 #i‚de‡
_STDIO_H


25 #i‡!
deföed
 
__√ed_FILE
 && !deföed 
__√ed___FILE


26 
	#_STDIO_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


31 
	#__√ed_size_t


	)

32 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	~<bôs/ty≥s.h
>

36 
	#__√ed_FILE


	)

37 
	#__√ed___FILE


	)

41 #i‡!
deföed
 
__FILE_deföed
 && deföed 
__√ed_FILE


44 
	g_IO_FILE
;

46 
__BEGIN_NAMESPACE_STD


48 
_IO_FILE
 
	tFILE
;

49 
	g__END_NAMESPACE_STD


50 #i‡
deföed
 
__USE_LARGEFILE64
 || deföed 
__USE_SVID
 || deföed 
__USE_POSIX
 \

51 || 
deföed
 
	g__USE_BSD
 || deföed 
	g__USE_ISOC99
 || deföed 
	g__USE_XOPEN
 \

52 || 
deföed
 
__USE_POSIX2


53 
	$__USING_NAMESPACE_STD
(
FILE
)

56 
	#__FILE_deföed
 1

	)

58 #unde‡
__√ed_FILE


61 #i‡!
deföed
 
____FILE_deföed
 && deföed 
__√ed___FILE


64 
_IO_FILE
 
	t__FILE
;

66 
	#____FILE_deföed
 1

	)

68 #unde‡
__√ed___FILE


71 #ifdef 
_STDIO_H


72 
	#_STDIO_USES_IOSTREAM


	)

74 
	~<libio.h
>

76 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


77 #ifde‡
__GNUC__


78 #i‚de‡
_VA_LIST_DEFINED


79 
_G_va_li°
 
	tva_li°
;

80 
	#_VA_LIST_DEFINED


	)

83 
	~<°d¨g.h
>

87 #ifde‡
__USE_XOPEN2K8


88 #i‚de‡
__off_t_deföed


89 #i‚de‡
__USE_FILE_OFFSET64


90 
__off_t
 
	toff_t
;

92 
__off64_t
 
	toff_t
;

94 
	#__off_t_deföed


	)

96 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


97 
__off64_t
 
	toff64_t
;

98 
	#__off64_t_deföed


	)

101 #i‚de‡
__ssize_t_deföed


102 
__ssize_t
 
	tssize_t
;

103 
	#__ssize_t_deföed


	)

108 
__BEGIN_NAMESPACE_STD


109 #i‚de‡
__USE_FILE_OFFSET64


110 
_G_Âos_t
 
	tÂos_t
;

112 
_G_Âos64_t
 
	tÂos_t
;

114 
__END_NAMESPACE_STD


115 #ifde‡
__USE_LARGEFILE64


116 
_G_Âos64_t
 
	tÂos64_t
;

120 
	#_IOFBF
 0

	)

121 
	#_IOLBF
 1

	)

122 
	#_IONBF
 2

	)

126 #i‚de‡
BUFSIZ


127 
	#BUFSIZ
 
_IO_BUFSIZ


	)

133 #i‚de‡
EOF


134 
	#EOF
 (-1)

	)

140 
	#SEEK_SET
 0

	)

141 
	#SEEK_CUR
 1

	)

142 
	#SEEK_END
 2

	)

143 #ifde‡
__USE_GNU


144 
	#SEEK_DATA
 3

	)

145 
	#SEEK_HOLE
 4

	)

149 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


151 
	#P_tmpdú
 "/tmp"

	)

164 
	~<bôs/°dio_lim.h
>

168 
_IO_FILE
 *
°dö
;

169 
_IO_FILE
 *
°dout
;

170 
_IO_FILE
 *
°dîr
;

172 
	#°dö
 
°dö


	)

173 
	#°dout
 
°dout


	)

174 
	#°dîr
 
°dîr


	)

176 
__BEGIN_NAMESPACE_STD


178 
	$ªmove
 (c⁄° *
__fûíame
Ë
__THROW
;

180 
	$ª«me
 (c⁄° *
__ﬁd
, c⁄° *
__√w
Ë
__THROW
;

181 
__END_NAMESPACE_STD


183 #ifde‡
__USE_ATFILE


185 
	$ª«mót
 (
__ﬁdfd
, c⁄° *
__ﬁd
, 
__√wfd
,

186 c⁄° *
__√w
Ë
__THROW
;

189 
__BEGIN_NAMESPACE_STD


194 #i‚de‡
__USE_FILE_OFFSET64


195 
FILE
 *
	$tmpfûe
 (Ë
__wur
;

197 #ifde‡
__REDIRECT


198 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
Ë
__wur
;

200 
	#tmpfûe
 
tmpfûe64


	)

204 #ifde‡
__USE_LARGEFILE64


205 
FILE
 *
	$tmpfûe64
 (Ë
__wur
;

209 *
	$tm≤am
 (*
__s
Ë
__THROW
 
__wur
;

210 
__END_NAMESPACE_STD


212 #ifde‡
__USE_MISC


215 *
	$tm≤am_r
 (*
__s
Ë
__THROW
 
__wur
;

219 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


227 *
	$ãm≤am
 (c⁄° *
__dú
, c⁄° *
__pfx
)

228 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

232 
__BEGIN_NAMESPACE_STD


237 
	`f˛o£
 (
FILE
 *
__°ªam
);

242 
	`fÊush
 (
FILE
 *
__°ªam
);

243 
__END_NAMESPACE_STD


245 #ifde‡
__USE_MISC


252 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

255 #ifde‡
__USE_GNU


262 
	`f˛o£Æl
 ();

266 
__BEGIN_NAMESPACE_STD


267 #i‚de‡
__USE_FILE_OFFSET64


272 
FILE
 *
	$f›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

273 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

278 
FILE
 *
	$‰e›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

279 c⁄° *
__ª°ri˘
 
__modes
,

280 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

282 #ifde‡
__REDIRECT


283 
FILE
 *
	`__REDIRECT
 (
f›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

284 c⁄° *
__ª°ri˘
 
__modes
), 
f›í64
)

285 
__wur
;

286 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

287 c⁄° *
__ª°ri˘
 
__modes
,

288 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

289 
__wur
;

291 
	#f›í
 
f›í64


	)

292 
	#‰e›í
 
‰e›í64


	)

295 
__END_NAMESPACE_STD


296 #ifde‡
__USE_LARGEFILE64


297 
FILE
 *
	$f›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

298 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

299 
FILE
 *
	$‰e›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

300 c⁄° *
__ª°ri˘
 
__modes
,

301 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

304 #ifdef 
__USE_POSIX


306 
FILE
 *
	$fd›í
 (
__fd
, c⁄° *
__modes
Ë
__THROW
 
__wur
;

309 #ifdef 
__USE_GNU


312 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

313 c⁄° *
__ª°ri˘
 
__modes
,

314 
_IO_cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
 
__wur
;

317 #ifde‡
__USE_XOPEN2K8


319 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, c⁄° *
__modes
)

320 
__THROW
 
__wur
;

325 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
 
__wur
;

329 
__BEGIN_NAMESPACE_STD


332 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

336 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

337 
__modes
, 
size_t
 
__n
Ë
__THROW
;

338 
__END_NAMESPACE_STD


340 #ifdef 
__USE_BSD


343 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

344 
size_t
 
__size
Ë
__THROW
;

347 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

351 
__BEGIN_NAMESPACE_STD


356 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

357 c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

362 
	`¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

364 
	$•rötf
 (*
__ª°ri˘
 
__s
,

365 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROWNL
;

371 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

372 
_G_va_li°
 
__¨g
);

377 
	`v¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
);

379 
	$v•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

380 
_G_va_li°
 
__¨g
Ë
__THROWNL
;

381 
__END_NAMESPACE_STD


383 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


384 
__BEGIN_NAMESPACE_C99


386 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

387 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

388 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

390 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

391 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

392 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

393 
__END_NAMESPACE_C99


396 #ifde‡
__USE_GNU


399 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__f
,

400 
_G_va_li°
 
__¨g
)

401 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

402 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

403 c⁄° *
__ª°ri˘
 
__fmt
, ...)

404 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

405 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

406 c⁄° *
__ª°ri˘
 
__fmt
, ...)

407 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

410 #ifde‡
__USE_XOPEN2K8


412 
	$vd¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
,

413 
_G_va_li°
 
__¨g
)

414 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

415 
	$d¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, ...)

416 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

420 
__BEGIN_NAMESPACE_STD


425 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

426 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

431 
	$sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

433 
	$ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

434 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

436 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

437 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

438 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

439 #ifde‡
__REDIRECT


443 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

444 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

445 
__isoc99_fsˇnf
Ë
__wur
;

446 
	`__REDIRECT
 (
sˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

447 
__isoc99_sˇnf
Ë
__wur
;

448 
	`__REDIRECT_NTH
 (
ssˇnf
, (c⁄° *
__ª°ri˘
 
__s
,

449 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

450 
__isoc99_ssˇnf
);

452 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

453 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

454 
	$__isoc99_sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

455 
	$__isoc99_ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

456 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

457 
	#fsˇnf
 
__isoc99_fsˇnf


	)

458 
	#sˇnf
 
__isoc99_sˇnf


	)

459 
	#ssˇnf
 
__isoc99_ssˇnf


	)

463 
__END_NAMESPACE_STD


465 #ifdef 
__USE_ISOC99


466 
__BEGIN_NAMESPACE_C99


471 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

472 
_G_va_li°
 
__¨g
)

473 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

479 
	$vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

480 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

483 
	$vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

484 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

485 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

487 #i‡!
deföed
 
__USE_GNU
 \

488 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

489 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

490 #ifde‡
__REDIRECT


494 
	`__REDIRECT
 (
vfsˇnf
,

495 (
FILE
 *
__ª°ri˘
 
__s
,

496 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

497 
__isoc99_vfsˇnf
)

498 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

499 
	`__REDIRECT
 (
vsˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
,

500 
_G_va_li°
 
__¨g
), 
__isoc99_vsˇnf
)

501 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

502 
	`__REDIRECT_NTH
 (
vssˇnf
,

503 (c⁄° *
__ª°ri˘
 
__s
,

504 c⁄° *
__ª°ri˘
 
__f‹m©
,

505 
_G_va_li°
 
__¨g
), 
__isoc99_vssˇnf
)

506 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

508 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

509 c⁄° *
__ª°ri˘
 
__f‹m©
,

510 
_G_va_li°
 
__¨g
Ë
__wur
;

511 
	$__isoc99_vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
,

512 
_G_va_li°
 
__¨g
Ë
__wur
;

513 
	$__isoc99_vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

514 c⁄° *
__ª°ri˘
 
__f‹m©
,

515 
_G_va_li°
 
__¨g
Ë
__THROW
;

516 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

517 
	#vsˇnf
 
__isoc99_vsˇnf


	)

518 
	#vssˇnf
 
__isoc99_vssˇnf


	)

522 
__END_NAMESPACE_C99


526 
__BEGIN_NAMESPACE_STD


531 
	`fgëc
 (
FILE
 *
__°ªam
);

532 
	`gëc
 (
FILE
 *
__°ªam
);

538 
	`gëch¨
 ();

539 
__END_NAMESPACE_STD


543 
	#gëc
(
_Â
Ë
	`_IO_gëc
 (_Â)

	)

545 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


550 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

551 
	`gëch¨_u∆ocked
 ();

554 #ifde‡
__USE_MISC


561 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

565 
__BEGIN_NAMESPACE_STD


573 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

574 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

580 
	`putch¨
 (
__c
);

581 
__END_NAMESPACE_STD


585 
	#putc
(
_ch
, 
_Â
Ë
	`_IO_putc
 (_ch, _Â)

	)

587 #ifde‡
__USE_MISC


594 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

597 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


602 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

603 
	`putch¨_u∆ocked
 (
__c
);

607 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 \

608 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

610 
	`gëw
 (
FILE
 *
__°ªam
);

613 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

617 
__BEGIN_NAMESPACE_STD


622 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

623 
__wur
;

625 #i‡!
deföed
 
__USE_ISOC11
 \

626 || (
deföed
 
__˝lu•lus
 && __cplusplus <= 201103L)

638 *
	$gës
 (*
__s
Ë
__wur
 
__©åibuã_dïªˇãd__
;

640 
__END_NAMESPACE_STD


642 #ifde‡
__USE_GNU


649 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

650 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

654 #ifdef 
__USE_XOPEN2K8


665 
_IO_ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

666 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

667 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

668 
_IO_ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

669 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

670 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

678 
_IO_ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

679 
size_t
 *
__ª°ri˘
 
__n
,

680 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

684 
__BEGIN_NAMESPACE_STD


689 
	`Âuts
 (c⁄° *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

695 
	`puts
 (c⁄° *
__s
);

702 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

709 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

710 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

715 
size_t
 
	`fwrôe
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

716 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
);

717 
__END_NAMESPACE_STD


719 #ifde‡
__USE_GNU


726 
	`Âuts_u∆ocked
 (c⁄° *
__ª°ri˘
 
__s
,

727 
FILE
 *
__ª°ri˘
 
__°ªam
);

730 #ifde‡
__USE_MISC


737 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

738 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

739 
size_t
 
	`fwrôe_u∆ocked
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

740 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
);

744 
__BEGIN_NAMESPACE_STD


749 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

754 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

759 
	`ªwöd
 (
FILE
 *
__°ªam
);

760 
__END_NAMESPACE_STD


767 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


768 #i‚de‡
__USE_FILE_OFFSET64


773 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

778 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

780 #ifde‡
__REDIRECT


781 
	`__REDIRECT
 (
f£eko
,

782 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

783 
f£eko64
);

784 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

786 
	#f£eko
 
f£eko64


	)

787 
	#·ñlo
 
·ñlo64


	)

792 
__BEGIN_NAMESPACE_STD


793 #i‚de‡
__USE_FILE_OFFSET64


798 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

803 
	`f£ços
 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
);

805 #ifde‡
__REDIRECT


806 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

807 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

808 
	`__REDIRECT
 (
f£ços
,

809 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
), 
f£ços64
);

811 
	#fgëpos
 
fgëpos64


	)

812 
	#f£ços
 
f£ços64


	)

815 
__END_NAMESPACE_STD


817 #ifde‡
__USE_LARGEFILE64


818 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

819 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

820 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

821 
	`f£ços64
 (
FILE
 *
__°ªam
, c⁄° 
Âos64_t
 *
__pos
);

824 
__BEGIN_NAMESPACE_STD


826 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

828 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

830 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

831 
__END_NAMESPACE_STD


833 #ifde‡
__USE_MISC


835 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

836 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

837 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

841 
__BEGIN_NAMESPACE_STD


846 
	`≥º‹
 (c⁄° *
__s
);

847 
__END_NAMESPACE_STD


853 
	~<bôs/sys_îæi°.h
>

856 #ifdef 
__USE_POSIX


858 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

861 #ifde‡
__USE_MISC


863 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

867 #i‡(
deföed
 
__USE_POSIX2
 || deföed 
__USE_SVID
 || deföed 
__USE_BSD
 || \

868 
deföed
 
__USE_MISC
)

873 
FILE
 *
	$p›í
 (c⁄° *
__comm™d
, c⁄° *
__modes
Ë
__wur
;

879 
	`p˛o£
 (
FILE
 *
__°ªam
);

883 #ifdef 
__USE_POSIX


885 *
	$˘îmid
 (*
__s
Ë
__THROW
;

889 #ifde‡
__USE_XOPEN


891 *
	`cu£rid
 (*
__s
);

895 #ifdef 
__USE_GNU


896 
ob°ack
;

899 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

900 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

901 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

902 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

903 c⁄° *
__ª°ri˘
 
__f‹m©
,

904 
_G_va_li°
 
__¨gs
)

905 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

909 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


913 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

917 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

920 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

923 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


927 
	#__√ed_gë›t


	)

928 
	~<gë›t.h
>

933 #ifde‡
__USE_EXTERN_INLINES


934 
	~<bôs/°dio.h
>

936 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


937 
	~<bôs/°dio2.h
>

939 #ifde‡
__LDBL_COMPAT


940 
	~<bôs/°dio-ldbl.h
>

943 
__END_DECLS


	@/usr/include/stdlib.h

22 #i‚def 
_STDLIB_H


24 
	~<„©uªs.h
>

27 
	#__√ed_size_t


	)

28 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


29 
	#__√ed_wch¨_t


	)

30 
	#__√ed_NULL


	)

32 
	~<°ddef.h
>

34 
	g__BEGIN_DECLS


36 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


37 
	#_STDLIB_H
 1

	)

39 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
Ë&& !deföed 
_SYS_WAIT_H


41 
	~<bôs/waôÊags.h
>

42 
	~<bôs/waô°©us.h
>

44 #ifde‡
__USE_BSD


49 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


50 
	#__WAIT_INT
(
°©us
) \

51 (
	`__exãnsi⁄__
 (((uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; }) \

52 { .
__ö
 = (
°©us
Ë}).
__i
))

	)

54 
	#__WAIT_INT
(
°©us
Ë(*(*Ë&(°©us))

	)

62 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


63 
	#__WAIT_STATUS
 *

	)

64 
	#__WAIT_STATUS_DEFN
 *

	)

69 
waô
 *
	m__u±r
;

70 *
	m__ùå
;

71 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

72 
	#__WAIT_STATUS_DEFN
 *

	)

77 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

78 
	#__WAIT_STATUS
 *

	)

79 
	#__WAIT_STATUS_DEFN
 *

	)

84 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (
	`__WAIT_INT
 (°©us))

	)

85 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (
	`__WAIT_INT
 (°©us))

	)

86 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (
	`__WAIT_INT
 (°©us))

	)

87 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (
	`__WAIT_INT
 (°©us))

	)

88 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (
	`__WAIT_INT
 (°©us))

	)

89 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (
	`__WAIT_INT
 (°©us))

	)

90 #ifde‡
__WIFCONTINUED


91 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (
	`__WAIT_INT
 (°©us))

	)

95 
__BEGIN_NAMESPACE_STD


99 
	mquŸ
;

100 
	mªm
;

101 } 
	tdiv_t
;

104 #i‚de‡
__ldiv_t_deföed


107 
	mquŸ
;

108 
	mªm
;

109 } 
	tldiv_t
;

110 
	#__ldiv_t_deföed
 1

	)

112 
	g__END_NAMESPACE_STD


114 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


115 
__BEGIN_NAMESPACE_C99


117 
__exãnsi⁄__
 struct

119 
	mquŸ
;

120 
	mªm
;

121 } 
	tŒdiv_t
;

122 
	#__Œdiv_t_deföed
 1

	)

123 
	g__END_NAMESPACE_C99


128 
	#RAND_MAX
 2147483647

	)

133 
	#EXIT_FAILURE
 1

	)

134 
	#EXIT_SUCCESS
 0

	)

138 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

139 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

142 
__BEGIN_NAMESPACE_STD


144 
	$©of
 (c⁄° *
__≈å
)

145 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

147 
	$©oi
 (c⁄° *
__≈å
)

148 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

150 
	$©ﬁ
 (c⁄° *
__≈å
)

151 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

152 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_MISC


155 
__BEGIN_NAMESPACE_C99


157 
__exãnsi⁄__
 
	$©ﬁl
 (c⁄° *
__≈å
)

158 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

159 
__END_NAMESPACE_C99


162 
__BEGIN_NAMESPACE_STD


164 
	$°πod
 (c⁄° *
__ª°ri˘
 
__≈å
,

165 **
__ª°ri˘
 
__íd±r
)

166 
__THROW
 
	`__n⁄nuŒ
 ((1));

167 
__END_NAMESPACE_STD


169 #ifdef 
__USE_ISOC99


170 
__BEGIN_NAMESPACE_C99


172 
	$°πof
 (c⁄° *
__ª°ri˘
 
__≈å
,

173 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

175 
	$°πﬁd
 (c⁄° *
__ª°ri˘
 
__≈å
,

176 **
__ª°ri˘
 
__íd±r
)

177 
__THROW
 
	`__n⁄nuŒ
 ((1));

178 
__END_NAMESPACE_C99


181 
__BEGIN_NAMESPACE_STD


183 
	$°πﬁ
 (c⁄° *
__ª°ri˘
 
__≈å
,

184 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

185 
__THROW
 
	`__n⁄nuŒ
 ((1));

187 
	$°πoul
 (c⁄° *
__ª°ri˘
 
__≈å
,

188 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

189 
__THROW
 
	`__n⁄nuŒ
 ((1));

190 
__END_NAMESPACE_STD


192 #ifde‡
__USE_BSD


194 
__exãnsi⁄__


195 
	$°πoq
 (c⁄° *
__ª°ri˘
 
__≈å
,

196 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

197 
__THROW
 
	`__n⁄nuŒ
 ((1));

199 
__exãnsi⁄__


200 
	$°πouq
 (c⁄° *
__ª°ri˘
 
__≈å
,

201 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

202 
__THROW
 
	`__n⁄nuŒ
 ((1));

205 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_MISC


206 
__BEGIN_NAMESPACE_C99


208 
__exãnsi⁄__


209 
	$°πﬁl
 (c⁄° *
__ª°ri˘
 
__≈å
,

210 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

211 
__THROW
 
	`__n⁄nuŒ
 ((1));

213 
__exãnsi⁄__


214 
	$°πouŒ
 (c⁄° *
__ª°ri˘
 
__≈å
,

215 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

216 
__THROW
 
	`__n⁄nuŒ
 ((1));

217 
__END_NAMESPACE_C99


221 #ifde‡
__USE_GNU


235 
	~<xloˇÀ.h
>

239 
	$°πﬁ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

240 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

241 
__loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

243 
	$°πoul_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

244 **
__ª°ri˘
 
__íd±r
,

245 
__ba£
, 
__loˇÀ_t
 
__loc
)

246 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

248 
__exãnsi⁄__


249 
	$°πﬁl_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

250 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

251 
__loˇÀ_t
 
__loc
)

252 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

254 
__exãnsi⁄__


255 
	$°πouŒ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

256 **
__ª°ri˘
 
__íd±r
,

257 
__ba£
, 
__loˇÀ_t
 
__loc
)

258 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

260 
	$°πod_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

261 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

262 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

264 
	$°πof_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

265 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

266 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

268 
	$°πﬁd_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

269 **
__ª°ri˘
 
__íd±r
,

270 
__loˇÀ_t
 
__loc
)

271 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

275 #ifde‡
__USE_EXTERN_INLINES


276 
__BEGIN_NAMESPACE_STD


277 
__exã∫_ölöe
 

278 
	`__NTH
 (
	$©oi
 (c⁄° *
__≈å
))

280  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

281 
	}
}

282 
__exã∫_ölöe
 

283 
__NTH
 (
	$©ﬁ
 (c⁄° *
__≈å
))

285  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

286 
	}
}

287 
	g__END_NAMESPACE_STD


289 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


290 
__BEGIN_NAMESPACE_C99


291 
__exãnsi⁄__
 
__exã∫_ölöe
 

292 
__NTH
 (
	$©ﬁl
 (c⁄° *
__≈å
))

294  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

295 
	}
}

296 
	g__END_NAMESPACE_C99


301 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


305 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

308 
	$a64l
 (c⁄° *
__s
)

309 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

313 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_BSD


314 
	~<sys/ty≥s.h
>

321 
	$øndom
 (Ë
__THROW
;

324 
	$§™dom
 (
__£ed
Ë
__THROW
;

330 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

331 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

335 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

338 #ifde‡
__USE_MISC


343 
	søndom_d©a


345 
öt32_t
 *
Âå
;

346 
öt32_t
 *
Ωå
;

347 
öt32_t
 *
°©e
;

348 
ønd_ty≥
;

349 
ønd_deg
;

350 
ønd_£p
;

351 
öt32_t
 *
íd_±r
;

354 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

355 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

357 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

358 
__THROW
 
	`__n⁄nuŒ
 ((2));

360 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

361 
size_t
 
__°©ñí
,

362 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

363 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

365 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

366 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

367 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

372 
__BEGIN_NAMESPACE_STD


374 
	$ønd
 (Ë
__THROW
;

376 
	$§™d
 (
__£ed
Ë
__THROW
;

377 
__END_NAMESPACE_STD


379 #ifde‡
__USE_POSIX


381 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

385 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


389 
	$dønd48
 (Ë
__THROW
;

390 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

393 
	$Ã™d48
 (Ë
__THROW
;

394 
	$ƒ™d48
 (
__xsubi
[3])

395 
__THROW
 
	`__n⁄nuŒ
 ((1));

398 
	$mønd48
 (Ë
__THROW
;

399 
	$jønd48
 (
__xsubi
[3])

400 
__THROW
 
	`__n⁄nuŒ
 ((1));

403 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

404 *
	$£ed48
 (
__£ed16v
[3])

405 
__THROW
 
	`__n⁄nuŒ
 ((1));

406 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

408 #ifde‡
__USE_MISC


412 
	sdønd48_d©a


414 
__x
[3];

415 
__ﬁd_x
[3];

416 
__c
;

417 
__öô
;

418 
__exãnsi⁄__
 
__a
;

423 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

424 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

425 
	$î™d48_r
 (
__xsubi
[3],

426 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

427 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

430 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

431 *
__ª°ri˘
 
__ªsu…
)

432 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

433 
	$ƒ™d48_r
 (
__xsubi
[3],

434 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

435 *
__ª°ri˘
 
__ªsu…
)

436 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

439 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

440 *
__ª°ri˘
 
__ªsu…
)

441 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

442 
	$jønd48_r
 (
__xsubi
[3],

443 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

444 *
__ª°ri˘
 
__ªsu…
)

445 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

448 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

449 
__THROW
 
	`__n⁄nuŒ
 ((2));

451 
	$£ed48_r
 (
__£ed16v
[3],

452 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

454 
	$lc⁄g48_r
 (
__∑øm
[7],

455 
dønd48_d©a
 *
__buf„r
)

456 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

462 #i‚de‡
__mÆloc_™d_ˇŒoc_deföed


463 
	#__mÆloc_™d_ˇŒoc_deföed


	)

464 
__BEGIN_NAMESPACE_STD


466 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

468 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

469 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

470 
__END_NAMESPACE_STD


473 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


474 
__BEGIN_NAMESPACE_STD


480 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

481 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

483 
	$‰ì
 (*
__±r
Ë
__THROW
;

484 
__END_NAMESPACE_STD


486 #ifdef 
__USE_MISC


488 
	$c‰ì
 (*
__±r
Ë
__THROW
;

491 #i‡
deföed
 
__USE_GNU
 || deföed 
__USE_BSD
 || deföed 
__USE_MISC


492 
	~<Æloˇ.h
>

495 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

496 || 
deföed
 
__USE_BSD


498 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

501 #ifde‡
__USE_XOPEN2K


503 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

504 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

507 #ifde‡
__USE_ISOC11


509 *
	$Æig√d_Æloc
 (
size_t
 
__Æignmít
, size_à
__size
)

510 
__THROW
 
__©åibuã_mÆloc__
 
	`__©åibuã_Æloc_size__
 ((2)Ë
__wur
;

513 
__BEGIN_NAMESPACE_STD


515 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

519 
	`©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

521 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


523 #ifde‡
__˝lu•lus


524 "C++" 
	`©_quick_exô
 ((*
__func
) ())

525 
__THROW
 
	`__asm
 ("©_quick_exô"Ë
	`__n⁄nuŒ
 ((1));

527 
	`©_quick_exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

530 
__END_NAMESPACE_STD


532 #ifdef 
__USE_MISC


535 
	`⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

536 
__THROW
 
	`__n⁄nuŒ
 ((1));

539 
__BEGIN_NAMESPACE_STD


543 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

545 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


549 
	$quick_exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

551 
__END_NAMESPACE_STD


553 #ifde‡
__USE_ISOC99


554 
__BEGIN_NAMESPACE_C99


557 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

558 
__END_NAMESPACE_C99


562 
__BEGIN_NAMESPACE_STD


564 *
	$gëív
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

565 
__END_NAMESPACE_STD


567 #ifde‡
__USE_GNU


570 *
	$£cuª_gëív
 (c⁄° *
__«me
)

571 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

574 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


578 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

581 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


584 
	$£ãnv
 (c⁄° *
__«me
, c⁄° *
__vÆue
, 
__ª∂a˚
)

585 
__THROW
 
	`__n⁄nuŒ
 ((2));

588 
	$un£ãnv
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

591 #ifdef 
__USE_MISC


595 
	$˛óªnv
 (Ë
__THROW
;

599 #i‡
deföed
 
__USE_MISC
 \

600 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
)

606 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

609 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 \

610 || 
deföed
 
__USE_XOPEN2K8


619 #i‚de‡
__USE_FILE_OFFSET64


620 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

622 #ifde‡
__REDIRECT


623 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

624 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

626 
	#mk°emp
 
mk°emp64


	)

629 #ifde‡
__USE_LARGEFILE64


630 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

634 #ifde‡
__USE_MISC


641 #i‚de‡
__USE_FILE_OFFSET64


642 
	$mk°emps
 (*
__ãm∂©e
, 
__suffixÀn
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

644 #ifde‡
__REDIRECT


645 
	`__REDIRECT
 (
mk°emps
, (*
__ãm∂©e
, 
__suffixÀn
),

646 
mk°emps64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

648 
	#mk°emps
 
mk°emps64


	)

651 #ifde‡
__USE_LARGEFILE64


652 
	$mk°emps64
 (*
__ãm∂©e
, 
__suffixÀn
)

653 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

657 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K8


663 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

666 #ifde‡
__USE_GNU


673 #i‚de‡
__USE_FILE_OFFSET64


674 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

676 #ifde‡
__REDIRECT


677 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

678 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

680 
	#mko°emp
 
mko°emp64


	)

683 #ifde‡
__USE_LARGEFILE64


684 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

693 #i‚de‡
__USE_FILE_OFFSET64


694 
	$mko°emps
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

695 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

697 #ifde‡
__REDIRECT


698 
	`__REDIRECT
 (
mko°emps
, (*
__ãm∂©e
, 
__suffixÀn
,

699 
__Êags
), 
mko°emps64
)

700 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

702 
	#mko°emps
 
mko°emps64


	)

705 #ifde‡
__USE_LARGEFILE64


706 
	$mko°emps64
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

707 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

712 
__BEGIN_NAMESPACE_STD


717 
	$sy°em
 (c⁄° *
__comm™d
Ë
__wur
;

718 
__END_NAMESPACE_STD


721 #ifdef 
__USE_GNU


724 *
	$ˇn⁄iˇlize_fûe_«me
 (c⁄° *
__«me
)

725 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

728 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


734 *
	$ªÆ∑th
 (c⁄° *
__ª°ri˘
 
__«me
,

735 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

740 #i‚de‡
__COMPAR_FN_T


741 
	#__COMPAR_FN_T


	)

742 (*
	t__com∑r_‚_t
) (const *, const *);

744 #ifdef 
__USE_GNU


745 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

748 #ifde‡
__USE_GNU


749 (*
	t__com∑r_d_‚_t
) (const *, const *, *);

752 
__BEGIN_NAMESPACE_STD


755 *
	$b£¨ch
 (c⁄° *
__key
, c⁄° *
__ba£
,

756 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

757 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

759 #ifde‡
__USE_EXTERN_INLINES


760 
	~<bôs/°dlib-b£¨ch.h
>

765 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

766 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

767 #ifde‡
__USE_GNU


768 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

769 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

770 
	`__n⁄nuŒ
 ((1, 4));

775 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

776 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

777 
__END_NAMESPACE_STD


779 #ifde‡
__USE_ISOC99


780 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

781 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

785 
__BEGIN_NAMESPACE_STD


789 
div_t
 
	$div
 (
__numî
, 
__díom
)

790 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

791 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

792 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

793 
__END_NAMESPACE_STD


795 #ifde‡
__USE_ISOC99


796 
__BEGIN_NAMESPACE_C99


797 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

798 
__díom
)

799 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

800 
__END_NAMESPACE_C99


804 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

805 || 
deföed
 
__USE_SVID


812 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

813 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

818 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

819 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

824 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

825 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

828 #ifde‡
__USE_MISC


830 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

831 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

832 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

833 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

834 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

835 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

836 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

837 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

842 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

843 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

844 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

845 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

846 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

847 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

849 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

850 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

851 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

852 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

853 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

854 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

855 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

856 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

860 
__BEGIN_NAMESPACE_STD


863 
	$mbÀn
 (c⁄° *
__s
, 
size_t
 
__n
Ë
__THROW
;

866 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

867 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

870 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
;

874 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

875 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

877 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

878 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

879 
__THROW
;

880 
__END_NAMESPACE_STD


883 #ifde‡
__USE_SVID


888 
	$Ωm©ch
 (c⁄° *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

892 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


899 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

900 *c⁄° *
__ª°ri˘
 
__tokís
,

901 **
__ª°ri˘
 
__vÆuï
)

902 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

906 #ifde‡
__USE_XOPEN


908 
	$£tkey
 (c⁄° *
__key
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

914 #ifde‡
__USE_XOPEN2KXSI


916 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

919 #ifde‡
__USE_XOPEN


924 
	$gø¡±
 (
__fd
Ë
__THROW
;

928 
	$u∆ock±
 (
__fd
Ë
__THROW
;

933 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

936 #ifde‡
__USE_GNU


940 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

941 
__THROW
 
	`__n⁄nuŒ
 ((2));

944 
	`gë±
 ();

947 #ifde‡
__USE_BSD


951 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

952 
__THROW
 
	`__n⁄nuŒ
 ((1));

955 
	~<bôs/°dlib-Êﬂt.h
>

958 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


959 
	~<bôs/°dlib.h
>

961 #ifde‡
__LDBL_COMPAT


962 
	~<bôs/°dlib-ldbl.h
>

966 #unde‡
__√ed_mÆloc_™d_ˇŒoc


968 
__END_DECLS


	@/usr/include/string.h

22 #i‚def 
_STRING_H


23 
	#_STRING_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


30 
	#__√ed_size_t


	)

31 
	#__√ed_NULL


	)

32 
	~<°ddef.h
>

39 #i‡
deföed
 
__˝lu•lus
 && (__˝lu•lu†>199711L || 
__GNUC_PREREQ
 (4, 4))

40 
	#__CORRECT_ISO_CPP_STRING_H_PROTO


	)

44 
__BEGIN_NAMESPACE_STD


46 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

47 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

50 *
	$memmove
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

51 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

52 
__END_NAMESPACE_STD


57 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN


58 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

59 
__c
, 
size_t
 
__n
)

60 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

64 
__BEGIN_NAMESPACE_STD


66 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

69 
	$memcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

70 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

73 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


76 *
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

77 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

78 c⁄° *
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

79 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

81 #ifde‡
__OPTIMIZE__


82 
__exã∫_Æways_ölöe
 *

83 
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


85  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

88 
__exã∫_Æways_ölöe
 const *

89 
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


91  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

94 
	}
}

96 *
	$memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

97 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

99 
__END_NAMESPACE_STD


101 #ifde‡
__USE_GNU


104 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


105 "C++" *
	$øwmemchr
 (*
__s
, 
__c
)

106 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

107 "C++" c⁄° *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

108 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

110 *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

111 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

115 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


116 "C++" *
	$memrchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

117 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

118 "C++" c⁄° *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

119 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

121 *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

122 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

127 
__BEGIN_NAMESPACE_STD


129 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

130 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

132 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

133 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

134 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

137 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

138 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

140 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

141 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

144 
	$°rcmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

145 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

147 
	$°∫cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

148 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

151 
	$°rcﬁl
 (c⁄° *
__s1
, c⁄° *
__s2
)

152 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

154 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

155 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

156 
__THROW
 
	`__n⁄nuŒ
 ((2));

157 
__END_NAMESPACE_STD


159 #ifde‡
__USE_XOPEN2K8


163 
	~<xloˇÀ.h
>

166 
	$°rcﬁl_l
 (c⁄° *
__s1
, c⁄° *
__s2
, 
__loˇÀ_t
 
__l
)

167 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

169 
size_t
 
	$°rx‰m_l
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
,

170 
__loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

173 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 \

174 || 
deföed
 
__USE_XOPEN2K8


176 *
	$°rdup
 (c⁄° *
__s
)

177 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

183 #i‡
deföed
 
__USE_XOPEN2K8


184 *
	$°∫dup
 (c⁄° *
__°rög
, 
size_t
 
__n
)

185 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

188 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


190 
	#°rdu∑
(
s
) \

191 (
__exãnsi⁄__
 \

193 c⁄° *
__ﬁd
 = (
s
); \

194 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

195 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

196 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

197 
	}
}))

	)

200 
	#°∫du∑
(
s
, 
n
) \

201 (
__exãnsi⁄__
 \

203 c⁄° *
__ﬁd
 = (
s
); \

204 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

205 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

206 
__√w
[
__Àn
] = '\0'; \

207 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

208 }))

	)

211 
	g__BEGIN_NAMESPACE_STD


213 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


216 *
°rchr
 (*
__s
, 
__c
)

217 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

218 c⁄° *
°rchr
 (c⁄° *
__s
, 
__c
)

219 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

221 #ifde‡
__OPTIMIZE__


222 
__exã∫_Æways_ölöe
 *

223 
°rchr
 (*
__s
, 
__c
Ë
	g__THROW


225  
__buûtö_°rchr
 (
__s
, 
__c
);

228 
__exã∫_Æways_ölöe
 const *

229 
°rchr
 (c⁄° *
__s
, 
__c
Ë
	g__THROW


231  
__buûtö_°rchr
 (
__s
, 
__c
);

236 *
	$°rchr
 (c⁄° *
__s
, 
__c
)

237 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

240 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


243 *
	`°ºchr
 (*
__s
, 
__c
)

244 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

245 c⁄° *
	`°ºchr
 (c⁄° *
__s
, 
__c
)

246 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

248 #ifde‡
__OPTIMIZE__


249 
__exã∫_Æways_ölöe
 *

250 
	`°ºchr
 (*
__s
, 
__c
Ë
__THROW


252  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

255 
__exã∫_Æways_ölöe
 const *

256 
	`°ºchr
 (c⁄° *
__s
, 
__c
Ë
__THROW


258  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

261 
	}
}

263 *
	$°ºchr
 (c⁄° *
__s
, 
__c
)

264 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

266 
__END_NAMESPACE_STD


268 #ifde‡
__USE_GNU


271 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


272 "C++" *
	$°rch∫ul
 (*
__s
, 
__c
)

273 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

274 "C++" c⁄° *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

275 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

277 *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

278 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

282 
__BEGIN_NAMESPACE_STD


285 
size_t
 
	$°rc•n
 (c⁄° *
__s
, c⁄° *
__ªje˘
)

286 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

289 
size_t
 
	$°r•n
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

290 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

292 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


295 *
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
)

296 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

297 c⁄° *
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

298 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

300 #ifde‡
__OPTIMIZE__


301 
__exã∫_Æways_ölöe
 *

302 
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
Ë
__THROW


304  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

307 
__exã∫_Æways_ölöe
 const *

308 
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
Ë
__THROW


310  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

313 
	}
}

315 *
	$°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

316 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

319 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


322 *
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

323 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

324 c⁄° *
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

325 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

327 #ifde‡
__OPTIMIZE__


328 
__exã∫_Æways_ölöe
 *

329 
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


331  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

334 
__exã∫_Æways_ölöe
 const *

335 
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


337  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

340 
	}
}

342 *
	$°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

343 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

348 *
	$°πok
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
)

349 
__THROW
 
	`__n⁄nuŒ
 ((2));

350 
__END_NAMESPACE_STD


354 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

355 c⁄° *
__ª°ri˘
 
__dñim
,

356 **
__ª°ri˘
 
__ßve_±r
)

357 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

358 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


359 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
,

360 **
__ª°ri˘
 
__ßve_±r
)

361 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

364 #ifde‡
__USE_GNU


366 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


367 "C++" *
	$°rˇ£°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

368 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

369 "C++" c⁄° *
	$°rˇ£°r
 (c⁄° *
__hay°ack
,

370 c⁄° *
__√edÀ
)

371 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

373 *
	$°rˇ£°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

374 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

378 #ifde‡
__USE_GNU


382 *
	$memmem
 (c⁄° *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

383 c⁄° *
__√edÀ
, 
size_t
 
__√edÀÀn
)

384 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

388 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

389 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

390 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

391 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

392 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

393 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

397 
__BEGIN_NAMESPACE_STD


399 
size_t
 
	$°æí
 (c⁄° *
__s
)

400 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

401 
__END_NAMESPACE_STD


403 #ifdef 
__USE_XOPEN2K8


406 
size_t
 
	$°∫Àn
 (c⁄° *
__°rög
, 
size_t
 
__maxÀn
)

407 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

411 
__BEGIN_NAMESPACE_STD


413 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

414 
__END_NAMESPACE_STD


415 #i‡
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_MISC


423 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


426 #ifde‡
__REDIRECT_NTH


427 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

428 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

429 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

431 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

432 
__THROW
 
	`__n⁄nuŒ
 ((2));

433 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

438 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

439 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

443 #ifde‡
__USE_XOPEN2K8


445 *
	$°ªº‹_l
 (
__î∫um
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

451 
	$__bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

453 #ifde‡
__USE_BSD


455 
	$bc›y
 (c⁄° *
__§c
, *
__de°
, 
size_t
 
__n
)

456 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

459 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

462 
	$bcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

463 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

466 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


469 *
	`ödex
 (*
__s
, 
__c
)

470 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

471 c⁄° *
	`ödex
 (c⁄° *
__s
, 
__c
)

472 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

474 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


475 
__exã∫_Æways_ölöe
 *

476 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


478  
	`__buûtö_ödex
 (
__s
, 
__c
);

481 
__exã∫_Æways_ölöe
 const *

482 
	`ödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


484  
	`__buûtö_ödex
 (
__s
, 
__c
);

487 
	}
}

489 *
	$ödex
 (c⁄° *
__s
, 
__c
)

490 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

494 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


497 *
	`rödex
 (*
__s
, 
__c
)

498 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

499 c⁄° *
	`rödex
 (c⁄° *
__s
, 
__c
)

500 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

502 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


503 
__exã∫_Æways_ölöe
 *

504 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


506  
	`__buûtö_rödex
 (
__s
, 
__c
);

509 
__exã∫_Æways_ölöe
 const *

510 
	`rödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


512  
	`__buûtö_rödex
 (
__s
, 
__c
);

515 
	}
}

517 *
	$rödex
 (c⁄° *
__s
, 
__c
)

518 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

523 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

527 #ifdef 
__USE_GNU


528 
	$ff¶
 (
__l
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

529 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

530 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

534 
	$°rˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

535 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

538 
	$°∫ˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

539 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

542 #ifdef 
__USE_GNU


545 
	$°rˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

546 
__loˇÀ_t
 
__loc
)

547 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

549 
	$°∫ˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

550 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

551 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

554 #ifdef 
__USE_BSD


557 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

558 c⁄° *
__ª°ri˘
 
__dñim
)

559 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

562 #ifdef 
__USE_XOPEN2K8


564 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

567 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

568 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

569 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

570 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

574 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

575 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

576 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

577 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

578 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

579 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

582 #ifdef 
__USE_GNU


584 
	$°rvîscmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

585 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

588 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

591 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

593 #i‚de‡
ba£«me


598 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


599 "C++" *
	$ba£«me
 (*
__fûíame
)

600 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

601 "C++" c⁄° *
	$ba£«me
 (c⁄° *
__fûíame
)

602 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

604 *
	$ba£«me
 (c⁄° *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

610 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

611 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__OPTIMIZE_SIZE__
 \

612 && !
deföed
 
__NO_INLINE__
 && !deföed 
__˝lu•lus


632 
	~<bôs/°rög.h
>

635 
	~<bôs/°rög2.h
>

638 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


640 
	~<bôs/°rög3.h
>

644 
__END_DECLS


	@/usr/include/strings.h

18 #i‚def 
_STRINGS_H


19 
	#_STRINGS_H
 1

	)

24 #i‡!
deföed
 
_STRING_H
 || !deföed 
__USE_BSD


26 
	~<„©uªs.h
>

27 
	#__√ed_size_t


	)

28 
	~<°ddef.h
>

35 #i‡
deföed
 
__˝lu•lus
 && (__˝lu•lu†>199711L || 
__GNUC_PREREQ
 (4, 4))

36 
	#__CORRECT_ISO_CPP_STRINGS_H_PROTO


	)

39 
	g__BEGIN_DECLS


41 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K8


43 
	$bcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

44 
__THROW
 
__©åibuã_puª__
;

47 
	$bc›y
 (c⁄° *
__§c
, *
__de°
, 
size_t
 
__n
Ë
__THROW
;

50 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
;

53 #ifde‡
__CORRECT_ISO_CPP_STRINGS_H_PROTO


56 *
	`ödex
 (*
__s
, 
__c
)

57 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

58 c⁄° *
	`ödex
 (c⁄° *
__s
, 
__c
)

59 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

61 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRING_H_PROTO


62 
__exã∫_Æways_ölöe
 *

63 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


65  
	`__buûtö_ödex
 (
__s
, 
__c
);

68 
__exã∫_Æways_ölöe
 const *

69 
	`ödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


71  
	`__buûtö_ödex
 (
__s
, 
__c
);

74 
	}
}

76 *
	$ödex
 (c⁄° *
__s
, 
__c
)

77 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

81 #ifde‡
__CORRECT_ISO_CPP_STRINGS_H_PROTO


84 *
	`rödex
 (*
__s
, 
__c
)

85 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

86 c⁄° *
	`rödex
 (c⁄° *
__s
, 
__c
)

87 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

89 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRING_H_PROTO


90 
__exã∫_Æways_ölöe
 *

91 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


93  
	`__buûtö_rödex
 (
__s
, 
__c
);

96 
__exã∫_Æways_ölöe
 const *

97 
	`rödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


99  
	`__buûtö_rödex
 (
__s
, 
__c
);

102 
	}
}

104 *
	$rödex
 (c⁄° *
__s
, 
__c
)

105 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

109 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K8
 || deföed 
__USE_XOPEN2K8XSI


112 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((const));

116 
	$°rˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

117 
__THROW
 
__©åibuã_puª__
;

120 
	$°∫ˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

121 
__THROW
 
__©åibuã_puª__
;

123 #ifdef 
__USE_XOPEN2K8


127 
	~<xloˇÀ.h
>

131 
	$°rˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
, 
__loˇÀ_t
 
__loc
)

132 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

134 
	$°∫ˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

135 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

136 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

139 
__END_DECLS


	@/usr/include/stropts.h

18 #i‚de‡
_STROPTS_H


19 
	#_STROPTS_H
 1

	)

21 
	~<„©uªs.h
>

22 
	~<bôs/ty≥s.h
>

23 
	~<bôs/xtôy≥s.h
>

25 #i‚de‡
__gid_t_deföed


26 
__gid_t
 
	tgid_t
;

27 
	#__gid_t_deföed


	)

30 #i‚de‡
__uid_t_deföed


31 
__uid_t
 
	tuid_t
;

32 
	#__uid_t_deföed


	)

35 
__t_sˇœr_t
 
	tt_sˇœr_t
;

36 
__t_usˇœr_t
 
	tt_usˇœr_t
;

39 
	~<bôs/°r›ts.h
>

42 
__BEGIN_DECLS


45 
	$iß°ªam
 (
__fûdes
Ë
__THROW
;

51 
	`gëmsg
 (
__fûdes
, 
°rbuf
 *
__ª°ri˘
 
__˘Õå
,

52 
°rbuf
 *
__ª°ri˘
 
__d©≠å
,

53 *
__ª°ri˘
 
__Êag•
);

60 
	`gëpmsg
 (
__fûdes
, 
°rbuf
 *
__ª°ri˘
 
__˘Õå
,

61 
°rbuf
 *
__ª°ri˘
 
__d©≠å
,

62 *
__ª°ri˘
 
__b™dp
, *__ª°ri˘ 
__Êag•
);

67 
	$io˘l
 (
__fd
, 
__ªque°
, ...Ë
__THROW
;

73 
	`putmsg
 (
__fûdes
, c⁄° 
°rbuf
 *
__˘Õå
,

74 c⁄° 
°rbuf
 *
__d©≠å
, 
__Êags
);

80 
	`puçmsg
 (
__fûdes
, c⁄° 
°rbuf
 *
__˘Õå
,

81 c⁄° 
°rbuf
 *
__d©≠å
, 
__b™d
, 
__Êags
);

85 
	$Áâach
 (
__fûdes
, c⁄° *
__∑th
Ë
__THROW
;

88 
	$fdëach
 (c⁄° *
__∑th
Ë
__THROW
;

90 
__END_DECLS


	@/usr/include/syslog.h

1 
	~<sys/sy¶og.h
>

	@/usr/include/time.h

22 #i‚def 
_TIME_H


24 #i‡(! 
deföed
 
__√ed_time_t
 && !deföed 
__√ed_˛ock_t
 && \

25 ! 
deföed
 
	g__√ed_time•ec
)

26 
	#_TIME_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


33 #ifdef 
_TIME_H


35 
	#__√ed_size_t


	)

36 
	#__√ed_NULL


	)

37 
	~<°ddef.h
>

41 
	~<bôs/time.h
>

44 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


45 #i‚de‡
CLK_TCK


46 
	#CLK_TCK
 
CLOCKS_PER_SEC


	)

52 #i‡!
deföed
 
__˛ock_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_˛ock_t
)

53 
	#__˛ock_t_deföed
 1

	)

55 
	~<bôs/ty≥s.h
>

57 
__BEGIN_NAMESPACE_STD


59 
__˛ock_t
 
	t˛ock_t
;

60 
	g__END_NAMESPACE_STD


61 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


62 
	$__USING_NAMESPACE_STD
(
˛ock_t
)

66 #unde‡
__√ed_˛ock_t


68 #i‡!
deföed
 
__time_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_time_t
)

69 
	#__time_t_deföed
 1

	)

71 
	~<bôs/ty≥s.h
>

73 
__BEGIN_NAMESPACE_STD


75 
__time_t
 
	ttime_t
;

76 
__END_NAMESPACE_STD


77 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC
 || deföed 
__USE_SVID


78 
	$__USING_NAMESPACE_STD
(
time_t
)

82 #unde‡
__√ed_time_t


84 #i‡!
deföed
 
__˛ockid_t_deföed
 && \

85 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_˛ockid_t
)

86 
	#__˛ockid_t_deföed
 1

	)

88 
	~<bôs/ty≥s.h
>

91 
__˛ockid_t
 
	t˛ockid_t
;

94 #unde‡
__˛ockid_time_t


96 #i‡!
deföed
 
__timî_t_deföed
 && \

97 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_timî_t
)

98 
	#__timî_t_deföed
 1

	)

100 
	~<bôs/ty≥s.h
>

103 
__timî_t
 
	ttimî_t
;

106 #unde‡
__√ed_timî_t


109 #i‡(!
deföed
 
__time•ec_deföed
 \

110 && ((
deföed
 
_TIME_H
 \

111 && (
deföed
 
__USE_POSIX199309
 || deföed 
__USE_MISC
 \

112 || 
deföed
 
__USE_ISOC11
)) \

113 || 
deföed
 
__√ed_time•ec
))

114 
	#__time•ec_deföed
 1

	)

116 
	~<bôs/ty≥s.h
>

120 
	stime•ec


122 
__time_t
 
tv_£c
;

123 
__sysˇŒ_¶⁄g_t
 
tv_n£c
;

127 #unde‡
__√ed_time•ec


130 #ifdef 
_TIME_H


131 
__BEGIN_NAMESPACE_STD


133 
	stm


135 
tm_£c
;

136 
tm_mö
;

137 
tm_hour
;

138 
tm_mday
;

139 
tm_m⁄
;

140 
tm_yór
;

141 
tm_wday
;

142 
tm_yday
;

143 
tm_isd°
;

145 #ifdef 
__USE_BSD


146 
tm_gmtoff
;

147 c⁄° *
tm_z⁄e
;

149 
__tm_gmtoff
;

150 c⁄° *
__tm_z⁄e
;

153 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


155 
	$__USING_NAMESPACE_STD
(
tm
)

159 #ifde‡
__USE_POSIX199309


161 
	sôimî•ec


163 
time•ec
 
ô_öãrvÆ
;

164 
time•ec
 
ô_vÆue
;

168 
sigevít
;

172 #ifde‡
__USE_XOPEN2K


173 #i‚de‡
__pid_t_deföed


174 
__pid_t
 
	tpid_t
;

175 
	#__pid_t_deföed


	)

180 #ifde‡
__USE_ISOC11


182 
	#TIME_UTC
 1

	)

186 
__BEGIN_NAMESPACE_STD


189 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

192 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

195 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

196 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

199 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

205 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

206 c⁄° *
__ª°ri˘
 
__f‹m©
,

207 c⁄° 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

208 
__END_NAMESPACE_STD


210 #ifde‡
__USE_XOPEN


213 *
	$°Ωtime
 (c⁄° *
__ª°ri˘
 
__s
,

214 c⁄° *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

215 
__THROW
;

218 #ifde‡
__USE_XOPEN2K8


221 
	~<xloˇÀ.h
>

223 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

224 c⁄° *
__ª°ri˘
 
__f‹m©
,

225 c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

226 
__loˇÀ_t
 
__loc
Ë
__THROW
;

229 #ifde‡
__USE_GNU


230 *
	$°Ωtime_l
 (c⁄° *
__ª°ri˘
 
__s
,

231 c⁄° *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

232 
__loˇÀ_t
 
__loc
Ë
__THROW
;

236 
__BEGIN_NAMESPACE_STD


239 
tm
 *
	$gmtime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

243 
tm
 *
	$loˇ…ime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

244 
__END_NAMESPACE_STD


246 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


249 
tm
 *
	$gmtime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

250 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

254 
tm
 *
	$loˇ…ime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

255 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

258 
__BEGIN_NAMESPACE_STD


261 *
	$as˘ime
 (c⁄° 
tm
 *
__ç
Ë
__THROW
;

264 *
	$˘ime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

265 
__END_NAMESPACE_STD


267 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


272 *
	$as˘ime_r
 (c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

273 *
__ª°ri˘
 
__buf
Ë
__THROW
;

276 *
	$˘ime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

277 *
__ª°ri˘
 
__buf
Ë
__THROW
;

282 *
__tz«me
[2];

283 
__daylight
;

284 
__timez⁄e
;

287 #ifdef 
__USE_POSIX


289 *
tz«me
[2];

293 
	$tz£t
 (Ë
__THROW
;

296 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


297 
daylight
;

298 
timez⁄e
;

301 #ifde‡
__USE_SVID


304 
	$°ime
 (c⁄° 
time_t
 *
__whí
Ë
__THROW
;

310 
	#__i¶óp
(
yór
) \

311 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

314 #ifde‡
__USE_MISC


319 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

322 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

325 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

329 #ifde‡
__USE_POSIX199309


334 
	`«no¶ìp
 (c⁄° 
time•ec
 *
__ªque°ed_time
,

335 
time•ec
 *
__ªmaöög
);

339 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

342 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

345 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, c⁄° 
time•ec
 *
__ç
)

346 
__THROW
;

348 #ifde‡
__USE_XOPEN2K


353 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

354 c⁄° 
time•ec
 *
__ªq
,

355 
time•ec
 *
__ªm
);

358 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

363 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

364 
sigevít
 *
__ª°ri˘
 
__evp
,

365 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

368 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

371 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

372 c⁄° 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

373 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

376 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

377 
__THROW
;

380 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

384 #ifde‡
__USE_ISOC11


386 
	$time•ec_gë
 (
time•ec
 *
__ts
, 
__ba£
)

387 
__THROW
 
	`__n⁄nuŒ
 ((1));

391 #ifde‡
__USE_XOPEN_EXTENDED


403 
gëd©e_îr
;

412 
tm
 *
	`gëd©e
 (c⁄° *
__°rög
);

415 #ifde‡
__USE_GNU


426 
	`gëd©e_r
 (c⁄° *
__ª°ri˘
 
__°rög
,

427 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

430 
__END_DECLS


	@/usr/include/unistd.h

22 #i‚def 
_UNISTD_H


23 
	#_UNISTD_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


32 #ifde‡
__USE_XOPEN2K8


34 
	#_POSIX_VERSION
 200809L

	)

35 #ñi‡
deföed
 
__USE_XOPEN2K


37 
	#_POSIX_VERSION
 200112L

	)

38 #ñi‡
deföed
 
__USE_POSIX199506


40 
	#_POSIX_VERSION
 199506L

	)

41 #ñi‡
deföed
 
__USE_POSIX199309


43 
	#_POSIX_VERSION
 199309L

	)

46 
	#_POSIX_VERSION
 199009L

	)

52 #ifde‡
__USE_XOPEN2K8


53 
	#__POSIX2_THIS_VERSION
 200809L

	)

55 #ñi‡
deföed
 
__USE_XOPEN2K


57 
	#__POSIX2_THIS_VERSION
 200112L

	)

58 #ñi‡
deföed
 
__USE_POSIX199506


60 
	#__POSIX2_THIS_VERSION
 199506L

	)

63 
	#__POSIX2_THIS_VERSION
 199209L

	)

67 
	#_POSIX2_VERSION
 
__POSIX2_THIS_VERSION


	)

71 
	#_POSIX2_C_BIND
 
__POSIX2_THIS_VERSION


	)

75 
	#_POSIX2_C_DEV
 
__POSIX2_THIS_VERSION


	)

79 
	#_POSIX2_SW_DEV
 
__POSIX2_THIS_VERSION


	)

83 
	#_POSIX2_LOCALEDEF
 
__POSIX2_THIS_VERSION


	)

86 #ifde‡
__USE_XOPEN2K8


87 
	#_XOPEN_VERSION
 700

	)

88 #ñi‡
deföed
 
__USE_XOPEN2K


89 
	#_XOPEN_VERSION
 600

	)

90 #ñi‡
deföed
 
__USE_UNIX98


91 
	#_XOPEN_VERSION
 500

	)

93 
	#_XOPEN_VERSION
 4

	)

97 
	#_XOPEN_XCU_VERSION
 4

	)

100 
	#_XOPEN_XPG2
 1

	)

101 
	#_XOPEN_XPG3
 1

	)

102 
	#_XOPEN_XPG4
 1

	)

105 
	#_XOPEN_UNIX
 1

	)

108 
	#_XOPEN_CRYPT
 1

	)

112 
	#_XOPEN_ENH_I18N
 1

	)

115 
	#_XOPEN_LEGACY
 1

	)

202 
	~<bôs/posix_›t.h
>

205 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


206 
	~<bôs/ívú⁄míts.h
>

210 
	#STDIN_FILENO
 0

	)

211 
	#STDOUT_FILENO
 1

	)

212 
	#STDERR_FILENO
 2

	)

217 
	~<bôs/ty≥s.h
>

219 #i‚def 
__ssize_t_deföed


220 
__ssize_t
 
	tssize_t
;

221 
	#__ssize_t_deföed


	)

224 
	#__√ed_size_t


	)

225 
	#__√ed_NULL


	)

226 
	~<°ddef.h
>

228 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


231 #i‚de‡
__gid_t_deföed


232 
__gid_t
 
	tgid_t
;

233 
	#__gid_t_deföed


	)

236 #i‚de‡
__uid_t_deföed


237 
__uid_t
 
	tuid_t
;

238 
	#__uid_t_deföed


	)

241 #i‚de‡
__off_t_deföed


242 #i‚de‡
__USE_FILE_OFFSET64


243 
__off_t
 
	toff_t
;

245 
__off64_t
 
	toff_t
;

247 
	#__off_t_deföed


	)

249 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


250 
__off64_t
 
	toff64_t
;

251 
	#__off64_t_deföed


	)

254 #i‚de‡
__u£c⁄ds_t_deföed


255 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

256 
	#__u£c⁄ds_t_deföed


	)

259 #i‚de‡
__pid_t_deföed


260 
__pid_t
 
	tpid_t
;

261 
	#__pid_t_deföed


	)

265 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


266 #i‚de‡
__öçå_t_deföed


267 
__öçå_t
 
	töçå_t
;

268 
	#__öçå_t_deföed


	)

272 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


273 #i‚de‡
__sockÀn_t_deföed


274 
__sockÀn_t
 
	tsockÀn_t
;

275 
	#__sockÀn_t_deföed


	)

281 
	#R_OK
 4

	)

282 
	#W_OK
 2

	)

283 
	#X_OK
 1

	)

284 
	#F_OK
 0

	)

287 
	$ac˚ss
 (c⁄° *
__«me
, 
__ty≥
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

289 #ifde‡
__USE_GNU


292 
	$euidac˚ss
 (c⁄° *
__«me
, 
__ty≥
)

293 
__THROW
 
	`__n⁄nuŒ
 ((1));

296 
	$óc˚ss
 (c⁄° *
__«me
, 
__ty≥
)

297 
__THROW
 
	`__n⁄nuŒ
 ((1));

300 #ifde‡
__USE_ATFILE


304 
	$Ác˚sßt
 (
__fd
, c⁄° *
__fûe
, 
__ty≥
, 
__Êag
)

305 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

310 #i‚def 
_STDIO_H


311 
	#SEEK_SET
 0

	)

312 
	#SEEK_CUR
 1

	)

313 
	#SEEK_END
 2

	)

314 #ifde‡
__USE_GNU


315 
	#SEEK_DATA
 3

	)

316 
	#SEEK_HOLE
 4

	)

320 #i‡
deföed
 
__USE_BSD
 && !deföed 
L_SET


322 
	#L_SET
 
SEEK_SET


	)

323 
	#L_INCR
 
SEEK_CUR


	)

324 
	#L_XTND
 
SEEK_END


	)

333 #i‚de‡
__USE_FILE_OFFSET64


334 
__off_t
 
	$l£ek
 (
__fd
, 
__off_t
 
__off£t
, 
__whí˚
Ë
__THROW
;

336 #ifde‡
__REDIRECT_NTH


337 
__off64_t
 
	`__REDIRECT_NTH
 (
l£ek
,

338 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
),

339 
l£ek64
);

341 
	#l£ek
 
l£ek64


	)

344 #ifde‡
__USE_LARGEFILE64


345 
__off64_t
 
	$l£ek64
 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
)

346 
__THROW
;

353 
	`˛o£
 (
__fd
);

360 
ssize_t
 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
Ë
__wur
;

366 
ssize_t
 
	$wrôe
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
Ë
__wur
;

368 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


369 #i‚de‡
__USE_FILE_OFFSET64


376 
ssize_t
 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

377 
__off_t
 
__off£t
Ë
__wur
;

384 
ssize_t
 
	$pwrôe
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

385 
__off_t
 
__off£t
Ë
__wur
;

387 #ifde‡
__REDIRECT


388 
ssize_t
 
	`__REDIRECT
 (
¥ód
, (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

389 
__off64_t
 
__off£t
),

390 
¥ód64
Ë
__wur
;

391 
ssize_t
 
	`__REDIRECT
 (
pwrôe
, (
__fd
, c⁄° *
__buf
,

392 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
),

393 
pwrôe64
Ë
__wur
;

395 
	#¥ód
 
¥ód64


	)

396 
	#pwrôe
 
pwrôe64


	)

400 #ifde‡
__USE_LARGEFILE64


404 
ssize_t
 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

405 
__off64_t
 
__off£t
Ë
__wur
;

408 
ssize_t
 
	$pwrôe64
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

409 
__off64_t
 
__off£t
Ë
__wur
;

417 
	$pùe
 (
__pùedes
[2]Ë
__THROW
 
__wur
;

419 #ifde‡
__USE_GNU


422 
	$pùe2
 (
__pùedes
[2], 
__Êags
Ë
__THROW
 
__wur
;

432 
	$Æ¨m
 (
__£c⁄ds
Ë
__THROW
;

444 
	`¶ìp
 (
__£c⁄ds
);

446 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

447 || 
deföed
 
__USE_BSD


452 
__u£c⁄ds_t
 
	$uÆ¨m
 (
__u£c⁄ds_t
 
__vÆue
, __u£c⁄ds_à
__öãrvÆ
)

453 
__THROW
;

460 
	`u¶ìp
 (
__u£c⁄ds_t
 
__u£c⁄ds
);

469 
	`∑u£
 ();

473 
	$chown
 (c⁄° *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

474 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

476 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


478 
	$fchown
 (
__fd
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
Ë
__THROW
 
__wur
;

483 
	$lchown
 (c⁄° *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

484 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

488 #ifde‡
__USE_ATFILE


491 
	$fchow«t
 (
__fd
, c⁄° *
__fûe
, 
__uid_t
 
__ow√r
,

492 
__gid_t
 
__group
, 
__Êag
)

493 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

497 
	$chdú
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

499 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


501 
	$fchdú
 (
__fd
Ë
__THROW
 
__wur
;

511 *
	$gëcwd
 (*
__buf
, 
size_t
 
__size
Ë
__THROW
 
__wur
;

513 #ifdef 
__USE_GNU


517 *
	$gë_cuºít_dú_«me
 (Ë
__THROW
;

520 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

521 || 
deföed
 
__USE_BSD


525 *
	$gëwd
 (*
__buf
)

526 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
;

531 
	$dup
 (
__fd
Ë
__THROW
 
__wur
;

534 
	$dup2
 (
__fd
, 
__fd2
Ë
__THROW
;

536 #ifde‡
__USE_GNU


539 
	$dup3
 (
__fd
, 
__fd2
, 
__Êags
Ë
__THROW
;

543 **
__ívú⁄
;

544 #ifde‡
__USE_GNU


545 **
ívú⁄
;

551 
	$execve
 (c⁄° *
__∑th
, *c⁄° 
__¨gv
[],

552 *c⁄° 
__ívp
[]Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

554 #ifde‡
__USE_XOPEN2K8


557 
	$„xecve
 (
__fd
, *c⁄° 
__¨gv
[], *c⁄° 
__ívp
[])

558 
__THROW
 
	`__n⁄nuŒ
 ((2));

563 
	$execv
 (c⁄° *
__∑th
, *c⁄° 
__¨gv
[])

564 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

568 
	$exe˛e
 (c⁄° *
__∑th
, c⁄° *
__¨g
, ...)

569 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

573 
	$exe˛
 (c⁄° *
__∑th
, c⁄° *
__¨g
, ...)

574 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

578 
	$execvp
 (c⁄° *
__fûe
, *c⁄° 
__¨gv
[])

579 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

584 
	$exe˛p
 (c⁄° *
__fûe
, c⁄° *
__¨g
, ...)

585 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

587 #ifde‡
__USE_GNU


590 
	$execv≥
 (c⁄° *
__fûe
, *c⁄° 
__¨gv
[],

591 *c⁄° 
__ívp
[])

592 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

596 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


598 
	$ni˚
 (
__öc
Ë
__THROW
 
__wur
;

603 
	$_exô
 (
__°©us
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

609 
	~<bôs/c⁄‚ame.h
>

612 
	$∑thc⁄f
 (c⁄° *
__∑th
, 
__«me
)

613 
__THROW
 
	`__n⁄nuŒ
 ((1));

616 
	$Â©hc⁄f
 (
__fd
, 
__«me
Ë
__THROW
;

619 
	$sysc⁄f
 (
__«me
Ë
__THROW
;

621 #ifdef 
__USE_POSIX2


623 
size_t
 
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

628 
__pid_t
 
	$gëpid
 (Ë
__THROW
;

631 
__pid_t
 
	$gëµid
 (Ë
__THROW
;

634 
__pid_t
 
	$gëpgΩ
 (Ë
__THROW
;

637 
__pid_t
 
	$__gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

638 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


639 
__pid_t
 
	$gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

646 
	$£çgid
 (
__pid_t
 
__pid
, __pid_à
__pgid
Ë
__THROW
;

648 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


660 
	$£çgΩ
 (Ë
__THROW
;

667 
__pid_t
 
	$£tsid
 (Ë
__THROW
;

669 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


671 
__pid_t
 
	$gësid
 (
__pid_t
 
__pid
Ë
__THROW
;

675 
__uid_t
 
	$gëuid
 (Ë
__THROW
;

678 
__uid_t
 
	$gëeuid
 (Ë
__THROW
;

681 
__gid_t
 
	$gëgid
 (Ë
__THROW
;

684 
__gid_t
 
	$gëegid
 (Ë
__THROW
;

689 
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]Ë
__THROW
 
__wur
;

691 #ifdef 
__USE_GNU


693 
	$group_membî
 (
__gid_t
 
__gid
Ë
__THROW
;

700 
	$£tuid
 (
__uid_t
 
__uid
Ë
__THROW
 
__wur
;

702 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


705 
	$£åeuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
Ë
__THROW
 
__wur
;

708 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


710 
	$£ãuid
 (
__uid_t
 
__uid
Ë
__THROW
 
__wur
;

717 
	$£tgid
 (
__gid_t
 
__gid
Ë
__THROW
 
__wur
;

719 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


722 
	$£åegid
 (
__gid_t
 
__rgid
, __gid_à
__egid
Ë
__THROW
 
__wur
;

725 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


727 
	$£ãgid
 (
__gid_t
 
__gid
Ë
__THROW
 
__wur
;

730 #ifde‡
__USE_GNU


733 
	$gëªsuid
 (
__uid_t
 *
__ruid
, __uid_à*
__euid
, __uid_à*
__suid
)

734 
__THROW
;

738 
	$gëªsgid
 (
__gid_t
 *
__rgid
, __gid_à*
__egid
, __gid_à*
__sgid
)

739 
__THROW
;

743 
	$£åesuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
, __uid_à
__suid
)

744 
__THROW
 
__wur
;

748 
	$£åesgid
 (
__gid_t
 
__rgid
, __gid_à
__egid
, __gid_à
__sgid
)

749 
__THROW
 
__wur
;

756 
__pid_t
 
	$f‹k
 (Ë
__THROWNL
;

758 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

759 || 
deföed
 
__USE_BSD


764 
__pid_t
 
	$vf‹k
 (Ë
__THROW
;

770 *
	$ây«me
 (
__fd
Ë
__THROW
;

774 
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

775 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

779 
	$ißây
 (
__fd
Ë
__THROW
;

781 #i‡
deföed
 
__USE_BSD
 \

782 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_UNIX98
)

785 
	$ây¶Ÿ
 (Ë
__THROW
;

790 
	$lök
 (c⁄° *
__‰om
, c⁄° *
__to
)

791 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

793 #ifde‡
__USE_ATFILE


796 
	$lök©
 (
__‰omfd
, c⁄° *
__‰om
, 
__tofd
,

797 c⁄° *
__to
, 
__Êags
)

798 
__THROW
 
	`__n⁄nuŒ
 ((2, 4)Ë
__wur
;

801 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


803 
	$symlök
 (c⁄° *
__‰om
, c⁄° *
__to
)

804 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

809 
ssize_t
 
	$ªadlök
 (c⁄° *
__ª°ri˘
 
__∑th
,

810 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

811 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

814 #ifde‡
__USE_ATFILE


816 
	$symlök©
 (c⁄° *
__‰om
, 
__tofd
,

817 c⁄° *
__to
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

820 
ssize_t
 
	$ªadlök©
 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

821 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

822 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

826 
	$u∆ök
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

828 #ifde‡
__USE_ATFILE


830 
	$u∆ök©
 (
__fd
, c⁄° *
__«me
, 
__Êag
)

831 
__THROW
 
	`__n⁄nuŒ
 ((2));

835 
	$rmdú
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

839 
__pid_t
 
	$tcgëpgΩ
 (
__fd
Ë
__THROW
;

842 
	$tc£çgΩ
 (
__fd
, 
__pid_t
 
__pgΩ_id
Ë
__THROW
;

849 *
	`gëlogö
 ();

850 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


857 
	$gëlogö_r
 (*
__«me
, 
size_t
 
__«me_Àn
Ë
	`__n⁄nuŒ
 ((1));

860 #ifdef 
__USE_BSD


862 
	$£éogö
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

866 #ifdef 
__USE_POSIX2


870 
	#__√ed_gë›t


	)

871 
	~<gë›t.h
>

875 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


879 
	$gëho°«me
 (*
__«me
, 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

883 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

886 
	$£tho°«me
 (c⁄° *
__«me
, 
size_t
 
__Àn
)

887 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

891 
	$£tho°id
 (
__id
Ë
__THROW
 
__wur
;

897 
	$gëdomaö«me
 (*
__«me
, 
size_t
 
__Àn
)

898 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

899 
	$£tdomaö«me
 (c⁄° *
__«me
, 
size_t
 
__Àn
)

900 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

906 
	$vh™gup
 (Ë
__THROW
;

909 
	$ªvoke
 (c⁄° *
__fûe
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

917 
	$¥ofû
 (*
__ßm∂e_buf„r
, 
size_t
 
__size
,

918 
size_t
 
__off£t
, 
__sˇÀ
)

919 
__THROW
 
	`__n⁄nuŒ
 ((1));

925 
	$ac˘
 (c⁄° *
__«me
Ë
__THROW
;

929 *
	$gëu£rshñl
 (Ë
__THROW
;

930 
	$ídu£rshñl
 (Ë
__THROW
;

931 
	$£tu£rshñl
 (Ë
__THROW
;

937 
	$d´m⁄
 (
__nochdú
, 
__no˛o£
Ë
__THROW
 
__wur
;

941 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

944 
	$chroŸ
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

948 *
	$gë∑ss
 (c⁄° *
__¥om±
Ë
	`__n⁄nuŒ
 ((1));

956 
	`fsync
 (
__fd
);

959 #ifde‡
__USE_GNU


962 
	$syncfs
 (
__fd
Ë
__THROW
;

966 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


969 
	`gëho°id
 ();

972 
	$sync
 (Ë
__THROW
;

975 #i‡
deföed
 
__USE_BSD
 || !deföed 
__USE_XOPEN2K


978 
	$gë∑gesize
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

983 
	$gëdèbÀsize
 (Ë
__THROW
;

989 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


992 #i‚de‡
__USE_FILE_OFFSET64


993 
	$åunˇã
 (c⁄° *
__fûe
, 
__off_t
 
__Àngth
)

994 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

996 #ifde‡
__REDIRECT_NTH


997 
	`__REDIRECT_NTH
 (
åunˇã
,

998 (c⁄° *
__fûe
, 
__off64_t
 
__Àngth
),

999 
åunˇã64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1001 
	#åunˇã
 
åunˇã64


	)

1004 #ifde‡
__USE_LARGEFILE64


1005 
	$åunˇã64
 (c⁄° *
__fûe
, 
__off64_t
 
__Àngth
)

1006 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1011 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_POSIX199309
 \

1012 || 
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


1015 #i‚de‡
__USE_FILE_OFFSET64


1016 
	$·runˇã
 (
__fd
, 
__off_t
 
__Àngth
Ë
__THROW
 
__wur
;

1018 #ifde‡
__REDIRECT_NTH


1019 
	`__REDIRECT_NTH
 (
·runˇã
, (
__fd
, 
__off64_t
 
__Àngth
),

1020 
·runˇã64
Ë
__wur
;

1022 
	#·runˇã
 
·runˇã64


	)

1025 #ifde‡
__USE_LARGEFILE64


1026 
	$·runˇã64
 (
__fd
, 
__off64_t
 
__Àngth
Ë
__THROW
 
__wur
;

1032 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

1033 || 
deföed
 
__USE_MISC


1037 
	$brk
 (*
__addr
Ë
__THROW
 
__wur
;

1043 *
	$sbrk
 (
öçå_t
 
__dñè
Ë
__THROW
;

1047 #ifde‡
__USE_MISC


1058 
	$sysˇŒ
 (
__sy¢o
, ...Ë
__THROW
;

1063 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
Ë&& !deföed 
F_LOCK


1075 
	#F_ULOCK
 0

	)

1076 
	#F_LOCK
 1

	)

1077 
	#F_TLOCK
 2

	)

1078 
	#F_TEST
 3

	)

1080 #i‚de‡
__USE_FILE_OFFSET64


1081 
	$lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
Ë
__wur
;

1083 #ifde‡
__REDIRECT


1084 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
),

1085 
lockf64
Ë
__wur
;

1087 
	#lockf
 
lockf64


	)

1090 #ifde‡
__USE_LARGEFILE64


1091 
	$lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
Ë
__wur
;

1096 #ifde‡
__USE_GNU


1101 
	#TEMP_FAILURE_RETRY
(
ex¥essi⁄
) \

1102 (
__exãnsi⁄__
 \

1103 ({ 
__ªsu…
; \

1104 dÿ
__ªsu…
 = (Ë(
ex¥essi⁄
); \

1105 
__ªsu…
 =-1L && 
î∫o
 =
EINTR
); \

1106 
__ªsu…
; 
	}
}))

	)

1109 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


1112 
fd©async
 (
__fûdes
);

1118 #ifdef 
__USE_XOPEN


1120 *
	$¸y±
 (c⁄° *
__key
, c⁄° *
__ß…
)

1121 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1125 
	$í¸y±
 (*
__glibc_block
, 
__edÊag
)

1126 
__THROW
 
	`__n⁄nuŒ
 ((1));

1133 
	$swab
 (c⁄° *
__ª°ri˘
 
__‰om
, *__ª°ri˘ 
__to
,

1134 
ssize_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1140 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K


1142 *
	$˘îmid
 (*
__s
Ë
__THROW
;

1147 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


1148 
	~<bôs/uni°d.h
>

1151 
__END_DECLS


	@/usr/include/wchar.h

23 #i‚de‡
_WCHAR_H


25 #i‡!
deföed
 
__√ed_mb°©e_t
 && !deföed 
__√ed_wöt_t


26 
	#_WCHAR_H
 1

	)

27 
	~<„©uªs.h
>

30 #ifde‡
_WCHAR_H


32 
	#__√ed___FILE


	)

33 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


34 
	#__√ed_FILE


	)

36 
	~<°dio.h
>

38 
	#__√ed___va_li°


	)

39 
	~<°d¨g.h
>

41 
	~<bôs/wch¨.h
>

44 
	#__√ed_size_t


	)

45 
	#__√ed_wch¨_t


	)

46 
	#__√ed_NULL


	)

48 #i‡
deföed
 
_WCHAR_H
 || deföed 
__√ed_wöt_t
 || !deföed 
__WINT_TYPE__


49 #unde‡
__√ed_wöt_t


50 
	#__√ed_wöt_t


	)

51 
	~<°ddef.h
>

55 #i‚de‡
_WINT_T


60 
	#_WINT_T


	)

61 
	twöt_t
;

65 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES
 \

66 && 
deföed
 
__WINT_TYPE__


67 
__BEGIN_NAMESPACE_STD


68 
__WINT_TYPE__
 
	twöt_t
;

69 
	g__END_NAMESPACE_STD


74 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

75 
	#__CORRECT_ISO_CPP_WCHAR_H_PROTO


	)

79 #i‡(
deföed
 
_WCHAR_H
 || deföed 
__√ed_mb°©e_t
Ë&& !deföed 
____mb°©e_t_deföed


80 
	#____mb°©e_t_deföed
 1

	)

84 
	m__cou¡
;

87 #ifde‡
__WINT_TYPE__


88 
__WINT_TYPE__
 
	m__wch
;

90 
wöt_t
 
	m__wch
;

92 
	m__wchb
[4];

93 } 
	m__vÆue
;

94 } 
	t__mb°©e_t
;

96 #unde‡
__√ed_mb°©e_t


101 #ifde‡
_WCHAR_H


103 #i‚de‡
__mb°©e_t_deföed


104 
__BEGIN_NAMESPACE_C99


106 
__mb°©e_t
 
	tmb°©e_t
;

107 
	g__END_NAMESPACE_C99


108 
	#__mb°©e_t_deföed
 1

	)

111 #ifde‡
__USE_GNU


112 
	$__USING_NAMESPACE_C99
(
mb°©e_t
)

115 #i‚de‡
WCHAR_MIN


117 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

118 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

121 #i‚de‡
WEOF


122 
	#WEOF
 (0xffffffffu)

	)

127 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_UNIX98


128 
	~<w˘y≥.h
>

132 
__BEGIN_DECLS


134 
__BEGIN_NAMESPACE_STD


137 
tm
;

138 
__END_NAMESPACE_STD


142 
	$__USING_NAMESPACE_STD
(
tm
)

145 
__BEGIN_NAMESPACE_STD


147 
wch¨_t
 *
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

150 
wch¨_t
 *
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

151 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

152 
__THROW
;

155 
wch¨_t
 *
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

156 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

158 
wch¨_t
 *
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

159 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

160 
__THROW
;

163 
	$wcscmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
)

164 
__THROW
 
__©åibuã_puª__
;

166 
	$wc¢cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

167 
__THROW
 
__©åibuã_puª__
;

168 
__END_NAMESPACE_STD


170 #ifde‡
__USE_XOPEN2K8


172 
	$wcsˇ£cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
Ë
__THROW
;

175 
	$wc¢ˇ£cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

176 
size_t
 
__n
Ë
__THROW
;

180 
	~<xloˇÀ.h
>

182 
	$wcsˇ£cmp_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

183 
__loˇÀ_t
 
__loc
Ë
__THROW
;

185 
	$wc¢ˇ£cmp_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

186 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

189 
__BEGIN_NAMESPACE_STD


192 
	$wcscﬁl
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
Ë
__THROW
;

196 
size_t
 
	$wcsx‰m
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

197 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

198 
__END_NAMESPACE_STD


200 #ifde‡
__USE_XOPEN2K8


206 
	$wcscﬁl_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

207 
__loˇÀ_t
 
__loc
Ë
__THROW
;

212 
size_t
 
	$wcsx‰m_l
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

213 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

216 
wch¨_t
 *
	$wcsdup
 (c⁄° 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_mÆloc__
;

219 
__BEGIN_NAMESPACE_STD


221 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


222 "C++" 
wch¨_t
 *
	$wcschr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

223 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

224 "C++" c⁄° 
wch¨_t
 *
	$wcschr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

225 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

227 
wch¨_t
 *
	$wcschr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

228 
__THROW
 
__©åibuã_puª__
;

231 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


232 "C++" 
wch¨_t
 *
	$wc§chr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

233 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

234 "C++" c⁄° 
wch¨_t
 *
	$wc§chr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

235 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

237 
wch¨_t
 *
	$wc§chr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

238 
__THROW
 
__©åibuã_puª__
;

240 
__END_NAMESPACE_STD


242 #ifde‡
__USE_GNU


245 
wch¨_t
 *
	$wcsch∫ul
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__wc
)

246 
__THROW
 
__©åibuã_puª__
;

249 
__BEGIN_NAMESPACE_STD


252 
size_t
 
	$wcsc•n
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ªje˘
)

253 
__THROW
 
__©åibuã_puª__
;

256 
size_t
 
	$wcs•n
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

257 
__THROW
 
__©åibuã_puª__
;

259 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


260 "C++" 
wch¨_t
 *
	$wc•brk
 (
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

261 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

262 "C++" c⁄° 
wch¨_t
 *
	$wc•brk
 (c⁄° 
wch¨_t
 *
__wcs
,

263 c⁄° 
wch¨_t
 *
__ac˚±
)

264 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

266 
wch¨_t
 *
	$wc•brk
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

267 
__THROW
 
__©åibuã_puª__
;

270 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


271 "C++" 
wch¨_t
 *
	$wcs°r
 (
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

272 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

273 "C++" c⁄° 
wch¨_t
 *
	$wcs°r
 (c⁄° 
wch¨_t
 *
__hay°ack
,

274 c⁄° 
wch¨_t
 *
__√edÀ
)

275 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

277 
wch¨_t
 *
	$wcs°r
 (c⁄° 
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

278 
__THROW
 
__©åibuã_puª__
;

282 
wch¨_t
 *
	$wc°ok
 (
wch¨_t
 *
__ª°ri˘
 
__s
,

283 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__dñim
,

284 
wch¨_t
 **
__ª°ri˘
 
__±r
Ë
__THROW
;

287 
size_t
 
	$wc¶í
 (c⁄° 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_puª__
;

288 
__END_NAMESPACE_STD


290 #ifde‡
__USE_XOPEN


292 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


293 "C++" 
wch¨_t
 *
	$wcswcs
 (
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

294 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

295 "C++" c⁄° 
wch¨_t
 *
	$wcswcs
 (c⁄° 
wch¨_t
 *
__hay°ack
,

296 c⁄° 
wch¨_t
 *
__√edÀ
)

297 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

299 
wch¨_t
 *
	$wcswcs
 (c⁄° 
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

300 
__THROW
 
__©åibuã_puª__
;

304 #ifde‡
__USE_XOPEN2K8


306 
size_t
 
	$wc¢Àn
 (c⁄° 
wch¨_t
 *
__s
, 
size_t
 
__maxÀn
)

307 
__THROW
 
__©åibuã_puª__
;

311 
__BEGIN_NAMESPACE_STD


313 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


314 "C++" 
wch¨_t
 *
	$wmemchr
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

315 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

316 "C++" c⁄° 
wch¨_t
 *
	$wmemchr
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__c
,

317 
size_t
 
__n
)

318 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

320 
wch¨_t
 *
	$wmemchr
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

321 
__THROW
 
__©åibuã_puª__
;

325 
	$wmemcmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

326 
__THROW
 
__©åibuã_puª__
;

329 
wch¨_t
 *
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

330 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

334 
wch¨_t
 *
	$wmemmove
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

335 
__THROW
;

338 
wch¨_t
 *
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
Ë
__THROW
;

339 
__END_NAMESPACE_STD


341 #ifde‡
__USE_GNU


344 
wch¨_t
 *
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

345 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

346 
__THROW
;

350 
__BEGIN_NAMESPACE_STD


353 
wöt_t
 
	$btowc
 (
__c
Ë
__THROW
;

357 
	$w˘ob
 (
wöt_t
 
__c
Ë
__THROW
;

361 
	$mbsöô
 (c⁄° 
mb°©e_t
 *
__ps
Ë
__THROW
 
__©åibuã_puª__
;

365 
size_t
 
	$mbπowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

366 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

367 
mb°©e_t
 *
__ª°ri˘
 
__p
Ë
__THROW
;

370 
size_t
 
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wc
,

371 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

374 
size_t
 
	$__mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

375 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

376 
size_t
 
	$mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

377 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

378 
__END_NAMESPACE_STD


380 #ifde‡
__USE_EXTERN_INLINES


386 
wöt_t
 
	$__btowc_Æüs
 (
__c
Ë
	`__asm
 ("btowc");

387 
__exã∫_ölöe
 
wöt_t


388 
	`__NTH
 (
	$btowc
 (
__c
))

389 {  (
	`__buûtö_c⁄°™t_p
 (
__c
) && __c >= '\0' && __c <= '\x7f'

390 ? (
wöt_t
Ë
__c
 : 
	`__btowc_Æüs
 (__c)); 
	}
}

392 
	$__w˘ob_Æüs
 (
wöt_t
 
__c
Ë
	`__asm
 ("wctob");

393 
__exã∫_ölöe
 

394 
	`__NTH
 (
	$w˘ob
 (
wöt_t
 
__wc
))

395 {  (
	`__buûtö_c⁄°™t_p
 (
__wc
Ë&& __w¯>
L
'\0' && __wc <= L'\x7f'

396 ? (Ë
__wc
 : 
	`__w˘ob_Æüs
 (__wc)); 
	}
}

398 
__exã∫_ölöe
 
size_t


399 
__NTH
 (
	$mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

400 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

401 {  (
__ps
 !
NULL


402 ? 
	`mbπowc
 (
NULL
, 
__s
, 
__n
, 
__ps
Ë: 
	`__mbæí
 (__s, __n, NULL)); 
	}
}

405 
__BEGIN_NAMESPACE_STD


408 
size_t
 
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

409 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

410 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

414 
size_t
 
	$wc§tombs
 (*
__ª°ri˘
 
__d°
,

415 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

416 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

417 
__END_NAMESPACE_STD


420 #ifdef 
__USE_XOPEN2K8


423 
size_t
 
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

424 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

425 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

429 
size_t
 
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
,

430 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

431 
size_t
 
__nwc
, size_à
__Àn
,

432 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

437 #ifde‡
__USE_XOPEN


439 
	$wcwidth
 (
wch¨_t
 
__c
Ë
__THROW
;

443 
	$wcswidth
 (c⁄° 
wch¨_t
 *
__s
, 
size_t
 
__n
Ë
__THROW
;

447 
__BEGIN_NAMESPACE_STD


450 
	$wc°od
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

451 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

452 
__END_NAMESPACE_STD


454 #ifde‡
__USE_ISOC99


455 
__BEGIN_NAMESPACE_C99


457 
	$wc°of
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

458 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

459 
	$wc°ﬁd
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

460 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

461 
__END_NAMESPACE_C99


465 
__BEGIN_NAMESPACE_STD


468 
	$wc°ﬁ
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

469 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

473 
	$wc°oul
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

474 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

475 
__THROW
;

476 
__END_NAMESPACE_STD


478 #ifde‡
__USE_ISOC99


479 
__BEGIN_NAMESPACE_C99


482 
__exãnsi⁄__


483 
	$wc°ﬁl
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

484 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

485 
__THROW
;

489 
__exãnsi⁄__


490 
	$wc°ouŒ
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

491 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

492 
__ba£
Ë
__THROW
;

493 
__END_NAMESPACE_C99


496 #ifde‡
__USE_GNU


499 
__exãnsi⁄__


500 
	$wc°oq
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

501 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

502 
__THROW
;

506 
__exãnsi⁄__


507 
	$wc°ouq
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

508 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

509 
__ba£
Ë
__THROW
;

512 #ifde‡
__USE_GNU


526 
	~<xloˇÀ.h
>

530 
	$wc°ﬁ_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

531 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

532 
__loˇÀ_t
 
__loc
Ë
__THROW
;

534 
	$wc°oul_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

535 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

536 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

538 
__exãnsi⁄__


539 
	$wc°ﬁl_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

540 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

541 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

543 
__exãnsi⁄__


544 
	$wc°ouŒ_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

545 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

546 
__ba£
, 
__loˇÀ_t
 
__loc
)

547 
__THROW
;

549 
	$wc°od_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

550 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

551 
__THROW
;

553 
	$wc°of_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

554 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

555 
__THROW
;

557 
	$wc°ﬁd_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

558 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

559 
__loˇÀ_t
 
__loc
Ë
__THROW
;

563 #ifde‡
__USE_XOPEN2K8


566 
wch¨_t
 *
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

567 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

571 
wch¨_t
 *
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

572 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

573 
__THROW
;

580 
__FILE
 *
	$›í_wmem°ªam
 (
wch¨_t
 **
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
;

583 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


584 
__BEGIN_NAMESPACE_STD


587 
	$fwide
 (
__FILE
 *
__Â
, 
__mode
Ë
__THROW
;

594 
	`fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

595 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

601 
	`w¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

604 
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

605 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

606 
__THROW
 ;

612 
	`vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__s
,

613 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

614 
__gnuc_va_li°
 
__¨g
)

620 
	`vw¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

621 
__gnuc_va_li°
 
__¨g
)

625 
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

626 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

627 
__gnuc_va_li°
 
__¨g
)

628 
__THROW
 ;

635 
	`fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

636 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

642 
	`wsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

645 
	$swsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

646 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

647 
__THROW
 ;

649 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

650 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

651 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

652 #ifde‡
__REDIRECT


656 
	`__REDIRECT
 (
fwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__°ªam
,

657 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

658 
__isoc99_fwsˇnf
)

660 
	`__REDIRECT
 (
wsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

661 
__isoc99_wsˇnf
)

663 
	`__REDIRECT_NTH
 (
swsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

664 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

665 ...), 
__isoc99_swsˇnf
)

668 
	`__isoc99_fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

669 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

670 
	`__isoc99_wsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

671 
	$__isoc99_swsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

672 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

673 
__THROW
;

674 
	#fwsˇnf
 
__isoc99_fwsˇnf


	)

675 
	#wsˇnf
 
__isoc99_wsˇnf


	)

676 
	#swsˇnf
 
__isoc99_swsˇnf


	)

680 
__END_NAMESPACE_STD


683 #ifde‡
__USE_ISOC99


684 
__BEGIN_NAMESPACE_C99


689 
	`vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

690 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

691 
__gnuc_va_li°
 
__¨g
)

697 
	`vwsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

698 
__gnuc_va_li°
 
__¨g
)

701 
	$vswsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

702 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

703 
__gnuc_va_li°
 
__¨g
)

704 
__THROW
 ;

706 #i‡!
deföed
 
__USE_GNU
 \

707 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

708 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

709 #ifde‡
__REDIRECT


710 
	`__REDIRECT
 (
vfwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__s
,

711 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

712 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vfwsˇnf
)

714 
	`__REDIRECT
 (
vwsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

715 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vwsˇnf
)

717 
	`__REDIRECT_NTH
 (
vswsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

718 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

719 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vswsˇnf
)

722 
	`__isoc99_vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

723 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

724 
__gnuc_va_li°
 
__¨g
);

725 
	`__isoc99_vwsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

726 
__gnuc_va_li°
 
__¨g
);

727 
	$__isoc99_vswsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

728 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

729 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

730 
	#vfwsˇnf
 
__isoc99_vfwsˇnf


	)

731 
	#vwsˇnf
 
__isoc99_vwsˇnf


	)

732 
	#vswsˇnf
 
__isoc99_vswsˇnf


	)

736 
__END_NAMESPACE_C99


740 
__BEGIN_NAMESPACE_STD


745 
wöt_t
 
	`fgëwc
 (
__FILE
 *
__°ªam
);

746 
wöt_t
 
	`gëwc
 (
__FILE
 *
__°ªam
);

752 
wöt_t
 
	`gëwch¨
 ();

759 
wöt_t
 
	`Âutwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

760 
wöt_t
 
	`putwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

766 
wöt_t
 
	`putwch¨
 (
wch¨_t
 
__wc
);

774 
wch¨_t
 *
	`fgëws
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

775 
__FILE
 *
__ª°ri˘
 
__°ªam
);

781 
	`Âutws
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__ws
,

782 
__FILE
 *
__ª°ri˘
 
__°ªam
);

789 
wöt_t
 
	`ungëwc
 (wöt_à
__wc
, 
__FILE
 *
__°ªam
);

790 
__END_NAMESPACE_STD


793 #ifde‡
__USE_GNU


801 
wöt_t
 
	`gëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

802 
wöt_t
 
	`gëwch¨_u∆ocked
 ();

810 
wöt_t
 
	`fgëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

818 
wöt_t
 
	`Âutwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

827 
wöt_t
 
	`putwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

828 
wöt_t
 
	`putwch¨_u∆ocked
 (
wch¨_t
 
__wc
);

837 
wch¨_t
 *
	`fgëws_u∆ocked
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

838 
__FILE
 *
__ª°ri˘
 
__°ªam
);

846 
	`Âutws_u∆ocked
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__ws
,

847 
__FILE
 *
__ª°ri˘
 
__°ªam
);

851 
__BEGIN_NAMESPACE_C99


855 
size_t
 
	$wcs·ime
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

856 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

857 c⁄° 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

858 
__END_NAMESPACE_C99


860 #ifde‡
__USE_GNU


861 
	~<xloˇÀ.h
>

865 
size_t
 
	$wcs·ime_l
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

866 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

867 c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

868 
__loˇÀ_t
 
__loc
Ë
__THROW
;

877 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_GNU


878 
	#__√ed_iswxxx


	)

879 
	~<w˘y≥.h
>

883 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


884 
	~<bôs/wch¨2.h
>

887 #ifde‡
__LDBL_COMPAT


888 
	~<bôs/wch¨-ldbl.h
>

891 
__END_DECLS


899 #unde‡
__√ed_mb°©e_t


900 #unde‡
__√ed_wöt_t


	@/usr/include/zlib.h

31 #i‚de‡
ZLIB_H


32 
	#ZLIB_H


	)

34 
	~"zc⁄f.h
"

36 #ifde‡
__˝lu•lus


40 
	#ZLIB_VERSION
 "1.2.8"

	)

41 
	#ZLIB_VERNUM
 0x1280

	)

42 
	#ZLIB_VER_MAJOR
 1

	)

43 
	#ZLIB_VER_MINOR
 2

	)

44 
	#ZLIB_VER_REVISION
 8

	)

45 
	#ZLIB_VER_SUBREVISION
 0

	)

80 
voidpf
 (*
	tÆloc_func
Ë
	tOF
((
	tvoidpf
 
	t›aque
, 
	tuI¡
 
	tôems
, uI¡ 
	tsize
));

81 (*
‰ì_func
Ë
	tOF
((
	tvoidpf
 
	t›aque
, voidp‡
	taddªss
));

83 
öã∫Æ_°©e
;

85 
	sz_°ªam_s
 {

86 
z_c⁄°
 
Byãf
 *
√xt_ö
;

87 
uI¡
 
avaû_ö
;

88 
uL⁄g
 
tŸÆ_ö
;

90 
Byãf
 *
√xt_out
;

91 
uI¡
 
avaû_out
;

92 
uL⁄g
 
tŸÆ_out
;

94 
z_c⁄°
 *
msg
;

95 
öã∫Æ_°©e
 
FAR
 *
°©e
;

97 
Æloc_func
 
zÆloc
;

98 
‰ì_func
 
z‰ì
;

99 
voidpf
 
›aque
;

101 
d©a_ty≥
;

102 
uL⁄g
 
adÀr
;

103 
uL⁄g
 
ª£rved
;

104 } 
	tz_°ªam
;

106 
z_°ªam
 
	tFAR
 *
	tz_°ªamp
;

112 
	sgz_hódî_s
 {

113 
ãxt
;

114 
uL⁄g
 
time
;

115 
xÊags
;

116 
os
;

117 
Byãf
 *
exåa
;

118 
uI¡
 
exåa_Àn
;

119 
uI¡
 
exåa_max
;

120 
Byãf
 *
«me
;

121 
uI¡
 
«me_max
;

122 
Byãf
 *
commít
;

123 
uI¡
 
comm_max
;

124 
h¸c
;

125 
d⁄e
;

127 } 
	tgz_hódî
;

129 
gz_hódî
 
	tFAR
 *
	tgz_hódîp
;

164 
	#Z_NO_FLUSH
 0

	)

165 
	#Z_PARTIAL_FLUSH
 1

	)

166 
	#Z_SYNC_FLUSH
 2

	)

167 
	#Z_FULL_FLUSH
 3

	)

168 
	#Z_FINISH
 4

	)

169 
	#Z_BLOCK
 5

	)

170 
	#Z_TREES
 6

	)

173 
	#Z_OK
 0

	)

174 
	#Z_STREAM_END
 1

	)

175 
	#Z_NEED_DICT
 2

	)

176 
	#Z_ERRNO
 (-1)

	)

177 
	#Z_STREAM_ERROR
 (-2)

	)

178 
	#Z_DATA_ERROR
 (-3)

	)

179 
	#Z_MEM_ERROR
 (-4)

	)

180 
	#Z_BUF_ERROR
 (-5)

	)

181 
	#Z_VERSION_ERROR
 (-6)

	)

186 
	#Z_NO_COMPRESSION
 0

	)

187 
	#Z_BEST_SPEED
 1

	)

188 
	#Z_BEST_COMPRESSION
 9

	)

189 
	#Z_DEFAULT_COMPRESSION
 (-1)

	)

192 
	#Z_FILTERED
 1

	)

193 
	#Z_HUFFMAN_ONLY
 2

	)

194 
	#Z_RLE
 3

	)

195 
	#Z_FIXED
 4

	)

196 
	#Z_DEFAULT_STRATEGY
 0

	)

199 
	#Z_BINARY
 0

	)

200 
	#Z_TEXT
 1

	)

201 
	#Z_ASCII
 
Z_TEXT


	)

202 
	#Z_UNKNOWN
 2

	)

205 
	#Z_DEFLATED
 8

	)

208 
	#Z_NULL
 0

	)

210 
	#zlib_vîsi⁄
 
	`zlibVîsi⁄
()

	)

216 
ZEXTERN
 c⁄° * 
ZEXPORT
 
zlibVîsi⁄
 
OF
(());

246 
ZEXTERN
 
ZEXPORT
 
deÊ©e
 
OF
((
z_°ªamp
 
°rm
, 
Êush
));

353 
ZEXTERN
 
ZEXPORT
 
deÊ©eEnd
 
OF
((
z_°ªamp
 
°rm
));

392 
ZEXTERN
 
ZEXPORT
 
öÊ©e
 
OF
((
z_°ªamp
 
°rm
, 
Êush
));

508 
ZEXTERN
 
ZEXPORT
 
öÊ©eEnd
 
OF
((
z_°ªamp
 
°rm
));

587 
ZEXTERN
 
ZEXPORT
 
deÊ©eSëDi˘i⁄¨y
 
OF
((
z_°ªamp
 
°rm
,

588 c⁄° 
Byãf
 *
di˘i⁄¨y
,

589 
uI¡
 
di˘Lígth
));

631 
ZEXTERN
 
ZEXPORT
 
deÊ©eC›y
 
OF
((
z_°ªamp
 
de°
,

632 
z_°ªamp
 
sour˚
));

649 
ZEXTERN
 
ZEXPORT
 
deÊ©eRe£t
 
OF
((
z_°ªamp
 
°rm
));

660 
ZEXTERN
 
ZEXPORT
 
deÊ©eP¨ams
 
OF
((
z_°ªamp
 
°rm
,

661 
Àvñ
,

662 
°øãgy
));

681 
ZEXTERN
 
ZEXPORT
 
deÊ©eTu√
 
OF
((
z_°ªamp
 
°rm
,

682 
good_Àngth
,

683 
max_œzy
,

684 
ni˚_Àngth
,

685 
max_chaö
));

698 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
deÊ©eBound
 
OF
((
z_°ªamp
 
°rm
,

699 
uL⁄g
 
sour˚Lí
));

713 
ZEXTERN
 
ZEXPORT
 
deÊ©ePídög
 
OF
((
z_°ªamp
 
°rm
,

714 *
≥ndög
,

715 *
bôs
));

728 
ZEXTERN
 
ZEXPORT
 
deÊ©ePrime
 
OF
((
z_°ªamp
 
°rm
,

729 
bôs
,

730 
vÆue
));

745 
ZEXTERN
 
ZEXPORT
 
deÊ©eSëHódî
 
OF
((
z_°ªamp
 
°rm
,

746 
gz_hódîp
 
hód
));

819 
ZEXTERN
 
ZEXPORT
 
öÊ©eSëDi˘i⁄¨y
 
OF
((
z_°ªamp
 
°rm
,

820 c⁄° 
Byãf
 *
di˘i⁄¨y
,

821 
uI¡
 
di˘Lígth
));

842 
ZEXTERN
 
ZEXPORT
 
öÊ©eGëDi˘i⁄¨y
 
OF
((
z_°ªamp
 
°rm
,

843 
Byãf
 *
di˘i⁄¨y
,

844 
uI¡
 *
di˘Lígth
));

857 
ZEXTERN
 
ZEXPORT
 
öÊ©eSync
 
OF
((
z_°ªamp
 
°rm
));

876 
ZEXTERN
 
ZEXPORT
 
öÊ©eC›y
 
OF
((
z_°ªamp
 
de°
,

877 
z_°ªamp
 
sour˚
));

892 
ZEXTERN
 
ZEXPORT
 
öÊ©eRe£t
 
OF
((
z_°ªamp
 
°rm
));

902 
ZEXTERN
 
ZEXPORT
 
öÊ©eRe£t2
 
OF
((
z_°ªamp
 
°rm
,

903 
wödowBôs
));

914 
ZEXTERN
 
ZEXPORT
 
öÊ©ePrime
 
OF
((
z_°ªamp
 
°rm
,

915 
bôs
,

916 
vÆue
));

935 
ZEXTERN
 
ZEXPORT
 
öÊ©eM¨k
 
OF
((
z_°ªamp
 
°rm
));

963 
ZEXTERN
 
ZEXPORT
 
öÊ©eGëHódî
 
OF
((
z_°ªamp
 
°rm
,

964 
gz_hódîp
 
hód
));

1025 (*
ö_func
Ë
	tOF
((
	tFAR
 *,

1026 
	tz_c⁄°
 
	tFAR
 * FAR *));

1027 (*
out_func
Ë
	tOF
((
	tFAR
 *, FAR *, ));

1029 
ZEXTERN
 
ZEXPORT
 
öÊ©eBack
 
OF
((
z_°ªamp
 
°rm
,

1030 
ö_func
 
ö
, 
FAR
 *
ö_desc
,

1031 
out_func
 
out
, 
FAR
 *
out_desc
));

1099 
ZEXTERN
 
ZEXPORT
 
öÊ©eBackEnd
 
OF
((
z_°ªamp
 
°rm
));

1107 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
zlibCompûeFœgs
 
OF
(());

1148 #i‚de‡
Z_SOLO


1160 
ZEXTERN
 
ZEXPORT
 
com¥ess
 
OF
((
Byãf
 *
de°
, 
uL⁄gf
 *
de°Lí
,

1161 c⁄° 
Byãf
 *
sour˚
, 
uL⁄g
 
sour˚Lí
));

1174 
ZEXTERN
 
ZEXPORT
 
com¥ess2
 
OF
((
Byãf
 *
de°
, 
uL⁄gf
 *
de°Lí
,

1175 c⁄° 
Byãf
 *
sour˚
, 
uL⁄g
 
sour˚Lí
,

1176 
Àvñ
));

1190 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
com¥essBound
 
OF
((uL⁄g 
sour˚Lí
));

1197 
ZEXTERN
 
ZEXPORT
 
uncom¥ess
 
OF
((
Byãf
 *
de°
, 
uL⁄gf
 *
de°Lí
,

1198 c⁄° 
Byãf
 *
sour˚
, 
uL⁄g
 
sour˚Lí
));

1224 
gzFûe_s
 *
	tgzFûe
;

1264 
ZEXTERN
 
gzFûe
 
ZEXPORT
 
gzd›í
 
OF
((
fd
, c⁄° *
mode
));

1287 
ZEXTERN
 
ZEXPORT
 
gzbuf„r
 
OF
((
gzFûe
 
fûe
, 
size
));

1304 
ZEXTERN
 
ZEXPORT
 
gz£ç¨ams
 
OF
((
gzFûe
 
fûe
, 
Àvñ
, 
°øãgy
));

1313 
ZEXTERN
 
ZEXPORT
 
gzªad
 
OF
((
gzFûe
 
fûe
, 
voidp
 
buf
, 
Àn
));

1341 
ZEXTERN
 
ZEXPORT
 
gzwrôe
 
OF
((
gzFûe
 
fûe
,

1342 
voidpc
 
buf
, 
Àn
));

1349 
ZEXTERN
 
ZEXPORTVA
 
gz¥ötf
 
Z_ARG
((
gzFûe
 
fûe
, c⁄° *
f‹m©
, ...));

1364 
ZEXTERN
 
ZEXPORT
 
gzputs
 
OF
((
gzFûe
 
fûe
, c⁄° *
s
));

1372 
ZEXTERN
 * 
ZEXPORT
 
gzgës
 
OF
((
gzFûe
 
fûe
, *
buf
, 
Àn
));

1385 
ZEXTERN
 
ZEXPORT
 
gzputc
 
OF
((
gzFûe
 
fûe
, 
c
));

1391 
ZEXTERN
 
ZEXPORT
 
gzgëc
 
OF
((
gzFûe
 
fûe
));

1400 
ZEXTERN
 
ZEXPORT
 
gzungëc
 
OF
((
c
, 
gzFûe
 
fûe
));

1412 
ZEXTERN
 
ZEXPORT
 
gzÊush
 
OF
((
gzFûe
 
fûe
, 
Êush
));

1447 
ZEXTERN
 
ZEXPORT
 
gzªwöd
 
OF
((
gzFûe
 
fûe
));

1475 
ZEXTERN
 
ZEXPORT
 
gzeof
 
OF
((
gzFûe
 
fûe
));

1490 
ZEXTERN
 
ZEXPORT
 
gzdúe˘
 
OF
((
gzFûe
 
fûe
));

1511 
ZEXTERN
 
ZEXPORT
 
gz˛o£
 
OF
((
gzFûe
 
fûe
));

1524 
ZEXTERN
 
ZEXPORT
 
gz˛o£_r
 
OF
((
gzFûe
 
fûe
));

1525 
ZEXTERN
 
ZEXPORT
 
gz˛o£_w
 
OF
((
gzFûe
 
fûe
));

1536 
ZEXTERN
 c⁄° * 
ZEXPORT
 
gzîr‹
 
OF
((
gzFûe
 
fûe
, *
î∫um
));

1552 
ZEXTERN
 
ZEXPORT
 
gz˛óªº
 
OF
((
gzFûe
 
fûe
));

1569 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
adÀr32
 
OF
((uL⁄g 
adÀr
, c⁄° 
Byãf
 *
buf
, 
uI¡
 
Àn
));

1600 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
¸c32
 
OF
((uL⁄g 
¸c
, c⁄° 
Byãf
 *
buf
, 
uI¡
 
Àn
));

1633 
ZEXTERN
 
ZEXPORT
 
deÊ©eInô_
 
OF
((
z_°ªamp
 
°rm
, 
Àvñ
,

1634 c⁄° *
vîsi⁄
, 
°ªam_size
));

1635 
ZEXTERN
 
ZEXPORT
 
öÊ©eInô_
 
OF
((
z_°ªamp
 
°rm
,

1636 c⁄° *
vîsi⁄
, 
°ªam_size
));

1637 
ZEXTERN
 
ZEXPORT
 
deÊ©eInô2_
 
OF
((
z_°ªamp
 
°rm
, 
Àvñ
, 
mëhod
,

1638 
wödowBôs
, 
memLevñ
,

1639 
°øãgy
, c⁄° *
vîsi⁄
,

1640 
°ªam_size
));

1641 
ZEXTERN
 
ZEXPORT
 
öÊ©eInô2_
 
OF
((
z_°ªamp
 
°rm
, 
wödowBôs
,

1642 c⁄° *
vîsi⁄
, 
°ªam_size
));

1643 
ZEXTERN
 
ZEXPORT
 
öÊ©eBackInô_
 
OF
((
z_°ªamp
 
°rm
, 
wödowBôs
,

1644 
FAR
 *
wödow
,

1645 c⁄° *
vîsi⁄
,

1646 
°ªam_size
));

1647 
	#deÊ©eInô
(
°rm
, 
Àvñ
) \

1648 
	`deÊ©eInô_
((
°rm
), (
Àvñ
), 
ZLIB_VERSION
, ()(
z_°ªam
))

	)

1649 
	#öÊ©eInô
(
°rm
) \

1650 
	`öÊ©eInô_
((
°rm
), 
ZLIB_VERSION
, ()(
z_°ªam
))

	)

1651 
	#deÊ©eInô2
(
°rm
, 
Àvñ
, 
mëhod
, 
wödowBôs
, 
memLevñ
, 
°øãgy
) \

1652 
	`deÊ©eInô2_
((
°rm
),(
Àvñ
),(
mëhod
),(
wödowBôs
),(
memLevñ
),\

1653 (
°øãgy
), 
ZLIB_VERSION
, ()(
z_°ªam
))

	)

1654 
	#öÊ©eInô2
(
°rm
, 
wödowBôs
) \

1655 
	`öÊ©eInô2_
((
°rm
), (
wödowBôs
), 
ZLIB_VERSION
, \

1656 ()(
z_°ªam
))

	)

1657 
	#öÊ©eBackInô
(
°rm
, 
wödowBôs
, 
wödow
) \

1658 
	`öÊ©eBackInô_
((
°rm
), (
wödowBôs
), (
wödow
), \

1659 
ZLIB_VERSION
, ()(
z_°ªam
))

	)

1661 #i‚de‡
Z_SOLO


1670 
	sgzFûe_s
 {

1671 
have
;

1672 *
√xt
;

1673 
z_off64_t
 
pos
;

1675 
ZEXTERN
 
ZEXPORT
 
gzgëc_
 
OF
((
gzFûe
 
fûe
));

1676 #ifde‡
Z_PREFIX_SET


1677 #unde‡
z_gzgëc


1678 
	#z_gzgëc
(
g
) \

1679 ((
g
)->
have
 ? ((g)->have--, (g)->
pos
++, *((g)->
√xt
)++Ë: 
	`gzgëc
(g))

	)

1681 
	#gzgëc
(
g
) \

1682 ((
g
)->
have
 ? ((g)->have--, (g)->
pos
++, *((g)->
√xt
)++Ë: 
	`gzgëc
(g))

	)

1691 #ifde‡
Z_LARGE64


1692 
ZEXTERN
 
gzFûe
 
ZEXPORT
 
gz›í64
 
OF
((const *, const *));

1693 
ZEXTERN
 
z_off64_t
 
ZEXPORT
 
gz£ek64
 
OF
((
gzFûe
, z_off64_t, ));

1694 
ZEXTERN
 
z_off64_t
 
ZEXPORT
 
gzãŒ64
 
OF
((
gzFûe
));

1695 
ZEXTERN
 
z_off64_t
 
ZEXPORT
 
gzoff£t64
 
OF
((
gzFûe
));

1696 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
adÀr32_comböe64
 
OF
((uL⁄g, uL⁄g, 
z_off64_t
));

1697 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
¸c32_comböe64
 
OF
((uL⁄g, uL⁄g, 
z_off64_t
));

1700 #i‡!
deföed
(
ZLIB_INTERNAL
Ë&& deföed(
Z_WANT64
)

1701 #ifde‡
Z_PREFIX_SET


1702 
	#z_gz›í
 
z_gz›í64


	)

1703 
	#z_gz£ek
 
z_gz£ek64


	)

1704 
	#z_gzãŒ
 
z_gzãŒ64


	)

1705 
	#z_gzoff£t
 
z_gzoff£t64


	)

1706 
	#z_adÀr32_comböe
 
z_adÀr32_comböe64


	)

1707 
	#z_¸c32_comböe
 
z_¸c32_comböe64


	)

1709 
	#gz›í
 
gz›í64


	)

1710 
	#gz£ek
 
gz£ek64


	)

1711 
	#gzãŒ
 
gzãŒ64


	)

1712 
	#gzoff£t
 
gzoff£t64


	)

1713 
	#adÀr32_comböe
 
adÀr32_comböe64


	)

1714 
	#¸c32_comböe
 
¸c32_comböe64


	)

1716 #i‚de‡
Z_LARGE64


1717 
ZEXTERN
 
gzFûe
 
ZEXPORT
 
gz›í64
 
OF
((const *, const *));

1718 
ZEXTERN
 
z_off_t
 
ZEXPORT
 
gz£ek64
 
OF
((
gzFûe
, z_off_t, ));

1719 
ZEXTERN
 
z_off_t
 
ZEXPORT
 
gzãŒ64
 
OF
((
gzFûe
));

1720 
ZEXTERN
 
z_off_t
 
ZEXPORT
 
gzoff£t64
 
OF
((
gzFûe
));

1721 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
adÀr32_comböe64
 
OF
((uL⁄g, uL⁄g, 
z_off_t
));

1722 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
¸c32_comböe64
 
OF
((uL⁄g, uL⁄g, 
z_off_t
));

1725 
ZEXTERN
 
gzFûe
 
ZEXPORT
 
gz›í
 
OF
((const *, const *));

1726 
ZEXTERN
 
z_off_t
 
ZEXPORT
 
gz£ek
 
OF
((
gzFûe
, z_off_t, ));

1727 
ZEXTERN
 
z_off_t
 
ZEXPORT
 
gzãŒ
 
OF
((
gzFûe
));

1728 
ZEXTERN
 
z_off_t
 
ZEXPORT
 
gzoff£t
 
OF
((
gzFûe
));

1729 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
adÀr32_comböe
 
OF
((uL⁄g, uL⁄g, 
z_off_t
));

1730 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
¸c32_comböe
 
OF
((uL⁄g, uL⁄g, 
z_off_t
));

1735 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
adÀr32_comböe
 
OF
((uL⁄g, uL⁄g, 
z_off_t
));

1736 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
¸c32_comböe
 
OF
((uL⁄g, uL⁄g, 
z_off_t
));

1741 #i‡!
deföed
(
ZUTIL_H
Ë&& !deföed(
NO_DUMMY_DECL
)

1742 
	söã∫Æ_°©e
 {
dummy
;};

1746 
ZEXTERN
 c⁄° * 
ZEXPORT
 
zEº‹
 
OF
(());

1747 
ZEXTERN
 
ZEXPORT
 
öÊ©eSyncPoöt
 
OF
((
z_°ªamp
));

1748 
ZEXTERN
 c⁄° 
z_¸c_t
 
FAR
 * 
ZEXPORT
 
gë_¸c_èbÀ
 
OF
(());

1749 
ZEXTERN
 
ZEXPORT
 
öÊ©eUndîmöe
 
OF
((
z_°ªamp
, ));

1750 
ZEXTERN
 
ZEXPORT
 
öÊ©eRe£tKìp
 
OF
((
z_°ªamp
));

1751 
ZEXTERN
 
ZEXPORT
 
deÊ©eRe£tKìp
 
OF
((
z_°ªamp
));

1752 #i‡
deföed
(
_WIN32
Ë&& !deföed(
Z_SOLO
)

1753 
ZEXTERN
 
gzFûe
 
ZEXPORT
 
gz›í_w
 
OF
((c⁄° 
wch¨_t
 *
∑th
,

1754 c⁄° *
mode
));

1756 #i‡
deföed
(
STDC
Ë|| deföed(
Z_HAVE_STDARG_H
)

1757 #i‚de‡
Z_SOLO


1758 
ZEXTERN
 
ZEXPORTVA
 
gzv¥ötf
 
Z_ARG
((
gzFûe
 
fûe
,

1759 c⁄° *
f‹m©
,

1760 
va_li°
 
va
));

1764 #ifde‡
__˝lu•lus


	@/usr/include/alloca.h

18 #i‚def 
_ALLOCA_H


19 
	#_ALLOCA_H
 1

	)

21 
	~<„©uªs.h
>

23 
	#__√ed_size_t


	)

24 
	~<°ddef.h
>

26 
	g__BEGIN_DECLS


29 #unde‡
Æloˇ


32 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

34 #ifdef 
__GNUC__


35 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

38 
__END_DECLS


	@/usr/include/endian.h

18 #i‚def 
_ENDIAN_H


19 
	#_ENDIAN_H
 1

	)

21 
	~<„©uªs.h
>

31 
	#__LITTLE_ENDIAN
 1234

	)

32 
	#__BIG_ENDIAN
 4321

	)

33 
	#__PDP_ENDIAN
 3412

	)

36 
	~<bôs/ídün.h
>

40 #i‚de‡
__FLOAT_WORD_ORDER


41 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

44 #ifdef 
__USE_BSD


45 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

46 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

47 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

48 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

51 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


52 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

53 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


54 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

58 #i‡
deföed
 
__USE_BSD
 && !deföed 
__ASSEMBLER__


60 
	~<bôs/byãsw≠.h
>

62 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


63 
	#htobe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

64 
	#htﬁe16
(
x
Ë(x)

	)

65 
	#be16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

66 
	#À16toh
(
x
Ë(x)

	)

68 
	#htobe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

69 
	#htﬁe32
(
x
Ë(x)

	)

70 
	#be32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

71 
	#À32toh
(
x
Ë(x)

	)

73 
	#htobe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

74 
	#htﬁe64
(
x
Ë(x)

	)

75 
	#be64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

76 
	#À64toh
(
x
Ë(x)

	)

79 
	#htobe16
(
x
Ë(x)

	)

80 
	#htﬁe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

81 
	#be16toh
(
x
Ë(x)

	)

82 
	#À16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

84 
	#htobe32
(
x
Ë(x)

	)

85 
	#htﬁe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

86 
	#be32toh
(
x
Ë(x)

	)

87 
	#À32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

89 
	#htobe64
(
x
Ë(x)

	)

90 
	#htﬁe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

91 
	#be64toh
(
x
Ë(x)

	)

92 
	#À64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/features.h

18 #i‚def 
_FEATURES_H


19 
	#_FEATURES_H
 1

	)

101 #unde‡
__USE_ISOC11


102 #unde‡
__USE_ISOC99


103 #unde‡
__USE_ISOC95


104 #unde‡
__USE_ISOCXX11


105 #unde‡
__USE_POSIX


106 #unde‡
__USE_POSIX2


107 #unde‡
__USE_POSIX199309


108 #unde‡
__USE_POSIX199506


109 #unde‡
__USE_XOPEN


110 #unde‡
__USE_XOPEN_EXTENDED


111 #unde‡
__USE_UNIX98


112 #unde‡
__USE_XOPEN2K


113 #unde‡
__USE_XOPEN2KXSI


114 #unde‡
__USE_XOPEN2K8


115 #unde‡
__USE_XOPEN2K8XSI


116 #unde‡
__USE_LARGEFILE


117 #unde‡
__USE_LARGEFILE64


118 #unde‡
__USE_FILE_OFFSET64


119 #unde‡
__USE_BSD


120 #unde‡
__USE_SVID


121 #unde‡
__USE_MISC


122 #unde‡
__USE_ATFILE


123 #unde‡
__USE_GNU


124 #unde‡
__USE_REENTRANT


125 #unde‡
__USE_FORTIFY_LEVEL


126 #unde‡
__KERNEL_STRICT_NAMES


130 #i‚de‡
_LOOSE_KERNEL_NAMES


131 
	#__KERNEL_STRICT_NAMES


	)

141 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


142 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

143 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

145 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

150 #ifde‡
_GNU_SOURCE


151 #unde‡
_ISOC95_SOURCE


152 
	#_ISOC95_SOURCE
 1

	)

153 #unde‡
_ISOC99_SOURCE


154 
	#_ISOC99_SOURCE
 1

	)

155 #unde‡
_ISOC11_SOURCE


156 
	#_ISOC11_SOURCE
 1

	)

157 #unde‡
_POSIX_SOURCE


158 
	#_POSIX_SOURCE
 1

	)

159 #unde‡
_POSIX_C_SOURCE


160 
	#_POSIX_C_SOURCE
 200809L

	)

161 #unde‡
_XOPEN_SOURCE


162 
	#_XOPEN_SOURCE
 700

	)

163 #unde‡
_XOPEN_SOURCE_EXTENDED


164 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

165 #unde‡
_LARGEFILE64_SOURCE


166 
	#_LARGEFILE64_SOURCE
 1

	)

167 #unde‡
_DEFAULT_SOURCE


168 
	#_DEFAULT_SOURCE
 1

	)

169 #unde‡
_BSD_SOURCE


170 
	#_BSD_SOURCE
 1

	)

171 #unde‡
_SVID_SOURCE


172 
	#_SVID_SOURCE
 1

	)

173 #unde‡
_ATFILE_SOURCE


174 
	#_ATFILE_SOURCE
 1

	)

179 #i‡(
deföed
 
_DEFAULT_SOURCE
 \

180 || (!
deföed
 
	g__STRICT_ANSI__
 \

181 && !
deföed
 
	g_ISOC99_SOURCE
 \

182 && !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 \

183 && !
deföed
 
	g_XOPEN_SOURCE
 \

184 && !
deföed
 
	g_BSD_SOURCE
 && !deföed 
	g_SVID_SOURCE
))

185 #unde‡
_DEFAULT_SOURCE


186 
	#_DEFAULT_SOURCE
 1

	)

187 #unde‡
_BSD_SOURCE


188 
	#_BSD_SOURCE
 1

	)

189 #unde‡
_SVID_SOURCE


190 
	#_SVID_SOURCE
 1

	)

194 #i‡(
deföed
 
_ISOC11_SOURCE
 \

195 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 201112L))

196 
	#__USE_ISOC11
 1

	)

200 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

201 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

202 
	#__USE_ISOC99
 1

	)

206 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

207 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

208 
	#__USE_ISOC95
 1

	)

215 #i‡((
deföed
 
__˝lu•lus
 && __cplusplus >= 201103L) \

216 || 
deföed
 
__GXX_EXPERIMENTAL_CXX0X__
)

217 
	#__USE_ISOCXX11
 1

	)

223 #ifde‡
_DEFAULT_SOURCE


224 #i‡!
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE


225 
	#__USE_POSIX_IMPLICITLY
 1

	)

227 #unde‡
_POSIX_SOURCE


228 
	#_POSIX_SOURCE
 1

	)

229 #unde‡
_POSIX_C_SOURCE


230 
	#_POSIX_C_SOURCE
 200809L

	)

232 #i‡((!
deföed
 
__STRICT_ANSI__
 || (
_XOPEN_SOURCE
 - 0) >= 500) && \

233 !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

234 
	#_POSIX_SOURCE
 1

	)

235 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

236 
	#_POSIX_C_SOURCE
 2

	)

237 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

238 
	#_POSIX_C_SOURCE
 199506L

	)

239 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

240 
	#_POSIX_C_SOURCE
 200112L

	)

242 
	#_POSIX_C_SOURCE
 200809L

	)

244 
	#__USE_POSIX_IMPLICITLY
 1

	)

247 #i‡
deföed
 
_POSIX_SOURCE
 || 
_POSIX_C_SOURCE
 >1 || deföed 
_XOPEN_SOURCE


248 
	#__USE_POSIX
 1

	)

251 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


252 
	#__USE_POSIX2
 1

	)

255 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199309L

256 
	#__USE_POSIX199309
 1

	)

259 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199506L

260 
	#__USE_POSIX199506
 1

	)

263 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200112L

264 
	#__USE_XOPEN2K
 1

	)

265 #unde‡
__USE_ISOC95


266 
	#__USE_ISOC95
 1

	)

267 #unde‡
__USE_ISOC99


268 
	#__USE_ISOC99
 1

	)

271 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200809L

272 
	#__USE_XOPEN2K8
 1

	)

273 #unde‡
_ATFILE_SOURCE


274 
	#_ATFILE_SOURCE
 1

	)

277 #ifdef 
_XOPEN_SOURCE


278 
	#__USE_XOPEN
 1

	)

279 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

280 
	#__USE_XOPEN_EXTENDED
 1

	)

281 
	#__USE_UNIX98
 1

	)

282 #unde‡
_LARGEFILE_SOURCE


283 
	#_LARGEFILE_SOURCE
 1

	)

284 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

285 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

286 
	#__USE_XOPEN2K8
 1

	)

287 
	#__USE_XOPEN2K8XSI
 1

	)

289 
	#__USE_XOPEN2K
 1

	)

290 
	#__USE_XOPEN2KXSI
 1

	)

291 #unde‡
__USE_ISOC95


292 
	#__USE_ISOC95
 1

	)

293 #unde‡
__USE_ISOC99


294 
	#__USE_ISOC99
 1

	)

297 #ifde‡
_XOPEN_SOURCE_EXTENDED


298 
	#__USE_XOPEN_EXTENDED
 1

	)

303 #ifde‡
_LARGEFILE_SOURCE


304 
	#__USE_LARGEFILE
 1

	)

307 #ifde‡
_LARGEFILE64_SOURCE


308 
	#__USE_LARGEFILE64
 1

	)

311 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

312 
	#__USE_FILE_OFFSET64
 1

	)

315 #i‡
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE


316 
	#__USE_MISC
 1

	)

319 #ifdef 
_BSD_SOURCE


320 
	#__USE_BSD
 1

	)

323 #ifdef 
_SVID_SOURCE


324 
	#__USE_SVID
 1

	)

327 #ifdef 
_ATFILE_SOURCE


328 
	#__USE_ATFILE
 1

	)

331 #ifdef 
_GNU_SOURCE


332 
	#__USE_GNU
 1

	)

335 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


336 
	#__USE_REENTRANT
 1

	)

339 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

340 && 
__GNUC_PREREQ
 (4, 1Ë&& 
deföed
 
	g__OPTIMIZE__
 && __OPTIMIZE__ > 0

341 #i‡
_FORTIFY_SOURCE
 > 1

342 
	#__USE_FORTIFY_LEVEL
 2

	)

344 
	#__USE_FORTIFY_LEVEL
 1

	)

347 
	#__USE_FORTIFY_LEVEL
 0

	)

352 
	~<°dc-¥edef.h
>

360 #unde‡
__GNU_LIBRARY__


361 
	#__GNU_LIBRARY__
 6

	)

365 
	#__GLIBC__
 2

	)

366 
	#__GLIBC_MINOR__
 19

	)

368 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

369 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

372 #i‚de‡
__ASSEMBLER__


373 #i‚de‡
_SYS_CDEFS_H


374 
	~<sys/cdefs.h
>

379 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


380 
	#__USE_LARGEFILE
 1

	)

381 
	#__USE_LARGEFILE64
 1

	)

387 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

388 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

389 && 
deföed
 
	g__exã∫_ölöe


390 
	#__USE_EXTERN_INLINES
 1

	)

398 
	~<gnu/°ubs.h
>

	@/usr/include/libio.h

28 #i‚de‡
_IO_STDIO_H


29 
	#_IO_STDIO_H


	)

31 
	~<_G_c⁄fig.h
>

33 
	#_IO_Âos_t
 
_G_Âos_t


	)

34 
	#_IO_Âos64_t
 
_G_Âos64_t


	)

35 
	#_IO_size_t
 
size_t


	)

36 
	#_IO_ssize_t
 
__ssize_t


	)

37 
	#_IO_off_t
 
__off_t


	)

38 
	#_IO_off64_t
 
__off64_t


	)

39 
	#_IO_pid_t
 
__pid_t


	)

40 
	#_IO_uid_t
 
__uid_t


	)

41 
	#_IO_ic⁄v_t
 
_G_ic⁄v_t


	)

42 
	#_IO_HAVE_ST_BLKSIZE
 
_G_HAVE_ST_BLKSIZE


	)

43 
	#_IO_BUFSIZ
 
_G_BUFSIZ


	)

44 
	#_IO_va_li°
 
_G_va_li°


	)

45 
	#_IO_wöt_t
 
wöt_t


	)

48 
	#__√ed___va_li°


	)

49 
	~<°d¨g.h
>

50 #ifde‡
__GNUC_VA_LIST


51 #unde‡
_IO_va_li°


52 
	#_IO_va_li°
 
__gnuc_va_li°


	)

55 #i‚de‡
__P


56 
	~<sys/cdefs.h
>

59 
	#_IO_UNIFIED_JUMPTABLES
 1

	)

61 #i‚de‡
EOF


62 
	#EOF
 (-1)

	)

64 #i‚de‡
NULL


65 #i‡
deföed
 
__GNUG__
 && \

66 (
	g__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 8))

67 
	#NULL
 (
__nuŒ
)

	)

69 #i‡!
deföed
(
__˝lu•lus
)

70 
	#NULL
 ((*)0)

	)

72 
	#NULL
 (0)

	)

77 
	#_IOS_INPUT
 1

	)

78 
	#_IOS_OUTPUT
 2

	)

79 
	#_IOS_ATEND
 4

	)

80 
	#_IOS_APPEND
 8

	)

81 
	#_IOS_TRUNC
 16

	)

82 
	#_IOS_NOCREATE
 32

	)

83 
	#_IOS_NOREPLACE
 64

	)

84 
	#_IOS_BIN
 128

	)

92 
	#_IO_MAGIC
 0xFBAD0000

	)

93 
	#_OLD_STDIO_MAGIC
 0xFABC0000

	)

94 
	#_IO_MAGIC_MASK
 0xFFFF0000

	)

95 
	#_IO_USER_BUF
 1

	)

96 
	#_IO_UNBUFFERED
 2

	)

97 
	#_IO_NO_READS
 4

	)

98 
	#_IO_NO_WRITES
 8

	)

99 
	#_IO_EOF_SEEN
 0x10

	)

100 
	#_IO_ERR_SEEN
 0x20

	)

101 
	#_IO_DELETE_DONT_CLOSE
 0x40

	)

102 
	#_IO_LINKED
 0x80

	)

103 
	#_IO_IN_BACKUP
 0x100

	)

104 
	#_IO_LINE_BUF
 0x200

	)

105 
	#_IO_TIED_PUT_GET
 0x400

	)

106 
	#_IO_CURRENTLY_PUTTING
 0x800

	)

107 
	#_IO_IS_APPENDING
 0x1000

	)

108 
	#_IO_IS_FILEBUF
 0x2000

	)

109 
	#_IO_BAD_SEEN
 0x4000

	)

110 
	#_IO_USER_LOCK
 0x8000

	)

112 
	#_IO_FLAGS2_MMAP
 1

	)

113 
	#_IO_FLAGS2_NOTCANCEL
 2

	)

114 #ifde‡
_LIBC


115 
	#_IO_FLAGS2_FORTIFY
 4

	)

117 
	#_IO_FLAGS2_USER_WBUF
 8

	)

118 #ifde‡
_LIBC


119 
	#_IO_FLAGS2_SCANF_STD
 16

	)

120 
	#_IO_FLAGS2_NOCLOSE
 32

	)

121 
	#_IO_FLAGS2_CLOEXEC
 64

	)

125 
	#_IO_SKIPWS
 01

	)

126 
	#_IO_LEFT
 02

	)

127 
	#_IO_RIGHT
 04

	)

128 
	#_IO_INTERNAL
 010

	)

129 
	#_IO_DEC
 020

	)

130 
	#_IO_OCT
 040

	)

131 
	#_IO_HEX
 0100

	)

132 
	#_IO_SHOWBASE
 0200

	)

133 
	#_IO_SHOWPOINT
 0400

	)

134 
	#_IO_UPPERCASE
 01000

	)

135 
	#_IO_SHOWPOS
 02000

	)

136 
	#_IO_SCIENTIFIC
 04000

	)

137 
	#_IO_FIXED
 010000

	)

138 
	#_IO_UNITBUF
 020000

	)

139 
	#_IO_STDIO
 040000

	)

140 
	#_IO_DONT_CLOSE
 0100000

	)

141 
	#_IO_BOOLALPHA
 0200000

	)

144 
_IO_jump_t
; 
	g_IO_FILE
;

147 #ifde‡
_IO_MTSAFE_IO


148 #i‡
deföed
 
__GLIBC__
 && __GLIBC__ >= 2

149 
	~<bôs/°dio-lock.h
>

154 
	t_IO_lock_t
;

160 
	s_IO_m¨kî
 {

161 
_IO_m¨kî
 *
	m_√xt
;

162 
_IO_FILE
 *
	m_sbuf
;

166 
	m_pos
;

168 
£t_°ªampos
(
°ªampos
 
•
Ë{ 
	m_•os
 = sp; }

169 
£t_off£t
(
off£t
Ë{ 
	m_pos
 = off£t; 
	m_•os
 = (
°ªampos
)(-2); }

170 
	mpublic
:

171 
°ªamm¨kî
(
°ªambuf
 *
sb
);

172 ~
°ªamm¨kî
();

173 
ßvög
(Ë{  
	m_•os
 == -2; }

174 
dñè
(
°ªamm¨kî
&);

175 
dñè
();

180 
	e__codecvt_ªsu…


182 
	m__codecvt_ok
,

183 
	m__codecvt_∑πül
,

184 
	m__codecvt_îr‹
,

185 
	m__codecvt_noc⁄v


188 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


191 
	s_IO_codecvt


193 (*
	m__codecvt_de°r
Ë(
	m_IO_codecvt
 *);

194 
__codecvt_ªsu…
 (*
__codecvt_do_out
Ë(
	m_IO_codecvt
 *,

195 
	m__mb°©e_t
 *,

196 c⁄° 
	mwch¨_t
 *,

197 c⁄° 
	mwch¨_t
 *,

198 c⁄° 
	mwch¨_t
 **, *,

200 
__codecvt_ªsu…
 (*
__codecvt_do_unshi·
Ë(
	m_IO_codecvt
 *,

201 
	m__mb°©e_t
 *, *,

203 
__codecvt_ªsu…
 (*
__codecvt_do_ö
Ë(
	m_IO_codecvt
 *,

204 
	m__mb°©e_t
 *,

206 c⁄° **, 
	mwch¨_t
 *,

207 
	mwch¨_t
 *, wchar_t **);

208 (*
	m__codecvt_do_ícodög
Ë(
	m_IO_codecvt
 *);

209 (*
	m__codecvt_do_Æways_noc⁄v
Ë(
	m_IO_codecvt
 *);

210 (*
	m__codecvt_do_Àngth
Ë(
	m_IO_codecvt
 *, 
	m__mb°©e_t
 *,

211 c⁄° *, c⁄° *, 
	m_IO_size_t
);

212 (*
	m__codecvt_do_max_Àngth
Ë(
	m_IO_codecvt
 *);

214 
_IO_ic⁄v_t
 
	m__cd_ö
;

215 
_IO_ic⁄v_t
 
	m__cd_out
;

219 
	s_IO_wide_d©a


221 
wch¨_t
 *
	m_IO_ªad_±r
;

222 
wch¨_t
 *
	m_IO_ªad_íd
;

223 
wch¨_t
 *
	m_IO_ªad_ba£
;

224 
wch¨_t
 *
	m_IO_wrôe_ba£
;

225 
wch¨_t
 *
	m_IO_wrôe_±r
;

226 
wch¨_t
 *
	m_IO_wrôe_íd
;

227 
wch¨_t
 *
	m_IO_buf_ba£
;

228 
wch¨_t
 *
	m_IO_buf_íd
;

230 
wch¨_t
 *
	m_IO_ßve_ba£
;

231 
wch¨_t
 *
	m_IO_backup_ba£
;

233 
wch¨_t
 *
	m_IO_ßve_íd
;

235 
__mb°©e_t
 
	m_IO_°©e
;

236 
__mb°©e_t
 
	m_IO_œ°_°©e
;

237 
_IO_codecvt
 
	m_codecvt
;

239 
wch¨_t
 
	m_sh‹tbuf
[1];

241 c⁄° 
_IO_jump_t
 *
	m_wide_vèbÀ
;

245 
	s_IO_FILE
 {

246 
	m_Êags
;

247 
	#_IO_fûe_Êags
 
_Êags


	)

251 * 
	m_IO_ªad_±r
;

252 * 
	m_IO_ªad_íd
;

253 * 
	m_IO_ªad_ba£
;

254 * 
	m_IO_wrôe_ba£
;

255 * 
	m_IO_wrôe_±r
;

256 * 
	m_IO_wrôe_íd
;

257 * 
	m_IO_buf_ba£
;

258 * 
	m_IO_buf_íd
;

260 *
	m_IO_ßve_ba£
;

261 *
	m_IO_backup_ba£
;

262 *
	m_IO_ßve_íd
;

264 
_IO_m¨kî
 *
	m_m¨kîs
;

266 
_IO_FILE
 *
	m_chaö
;

268 
	m_fûío
;

270 
	m_blksize
;

272 
	m_Êags2
;

274 
_IO_off_t
 
	m_ﬁd_off£t
;

276 
	#__HAVE_COLUMN


	)

278 
	m_cur_cﬁumn
;

279 sig√d 
	m_vèbÀ_off£t
;

280 
	m_sh‹tbuf
[1];

284 
_IO_lock_t
 *
	m_lock
;

285 #ifde‡
_IO_USE_OLD_IO_FILE


288 
	s_IO_FILE_com∂ëe


290 
_IO_FILE
 
	m_fûe
;

292 #i‡
deföed
 
_G_IO_IO_FILE_VERSION
 && _G_IO_IO_FILE_VERSION == 0x20001

293 
_IO_off64_t
 
	m_off£t
;

294 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


296 
_IO_codecvt
 *
	m_codecvt
;

297 
_IO_wide_d©a
 *
	m_wide_d©a
;

298 
_IO_FILE
 *
	m_‰ìªs_li°
;

299 *
	m_‰ìªs_buf
;

300 
size_t
 
	m_‰ìªs_size
;

302 *
	m__∑d1
;

303 *
	m__∑d2
;

304 *
	m__∑d3
;

305 *
	m__∑d4
;

306 
size_t
 
	m__∑d5
;

308 
	m_mode
;

310 
	m_unu£d2
[15 *  (Ë- 4 *  (*Ë-  (
size_t
)];

314 #i‚de‡
__˝lu•lus


315 
_IO_FILE
 
	t_IO_FILE
;

318 
	g_IO_FILE_∂us
;

320 
_IO_FILE_∂us
 
_IO_2_1_°dö_
;

321 
_IO_FILE_∂us
 
_IO_2_1_°dout_
;

322 
_IO_FILE_∂us
 
_IO_2_1_°dîr_
;

323 #i‚de‡
_LIBC


324 
	#_IO_°dö
 ((
_IO_FILE
*)(&
_IO_2_1_°dö_
))

	)

325 
	#_IO_°dout
 ((
_IO_FILE
*)(&
_IO_2_1_°dout_
))

	)

326 
	#_IO_°dîr
 ((
_IO_FILE
*)(&
_IO_2_1_°dîr_
))

	)

328 
_IO_FILE
 *
_IO_°dö
 
©åibuã_hiddí
;

329 
_IO_FILE
 *
_IO_°dout
 
©åibuã_hiddí
;

330 
_IO_FILE
 *
_IO_°dîr
 
©åibuã_hiddí
;

338 
__ssize_t
 
	t__io_ªad_‚
 (*
	t__cookõ
, *
	t__buf
, 
	tsize_t
 
	t__nbyãs
);

346 
__ssize_t
 
	t__io_wrôe_‚
 (*
	t__cookõ
, c⁄° *
	t__buf
,

347 
	tsize_t
 
	t__n
);

355 
	t__io_£ek_‚
 (*
	t__cookõ
, 
	t_IO_off64_t
 *
	t__pos
, 
	t__w
);

358 
	t__io_˛o£_‚
 (*
	t__cookõ
);

361 #ifde‡
_GNU_SOURCE


363 
__io_ªad_‚
 
	tcookõ_ªad_fun˘i⁄_t
;

364 
__io_wrôe_‚
 
	tcookõ_wrôe_fun˘i⁄_t
;

365 
__io_£ek_‚
 
	tcookõ_£ek_fun˘i⁄_t
;

366 
__io_˛o£_‚
 
	tcookõ_˛o£_fun˘i⁄_t
;

371 
__io_ªad_‚
 *
	mªad
;

372 
__io_wrôe_‚
 *
	mwrôe
;

373 
__io_£ek_‚
 *
	m£ek
;

374 
__io_˛o£_‚
 *
	m˛o£
;

375 } 
	t_IO_cookõ_io_fun˘i⁄s_t
;

376 
_IO_cookõ_io_fun˘i⁄s_t
 
	tcookõ_io_fun˘i⁄s_t
;

378 
	g_IO_cookõ_fûe
;

381 
_IO_cookõ_öô
 (
_IO_cookõ_fûe
 *
__cfûe
, 
__ªad_wrôe
,

382 *
__cookõ
, 
_IO_cookõ_io_fun˘i⁄s_t
 
__‚s
);

386 #ifde‡
__˝lu•lus


390 
__undîÊow
 (
_IO_FILE
 *);

391 
__uÊow
 (
_IO_FILE
 *);

392 
__ovîÊow
 (
_IO_FILE
 *, );

393 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


394 
_IO_wöt_t
 
__wundîÊow
 (
_IO_FILE
 *);

395 
_IO_wöt_t
 
__wuÊow
 (
_IO_FILE
 *);

396 
_IO_wöt_t
 
__wovîÊow
 (
_IO_FILE
 *, _IO_wint_t);

399 #i‡ 
__GNUC__
 >= 3

400 
	#_IO_BE
(
ex¥
, 
ªs
Ë
	`__buûtö_ex≥˘
 (”x¥),Ñes)

	)

402 
	#_IO_BE
(
ex¥
, 
ªs
Ë”x¥)

	)

405 
	#_IO_gëc_u∆ocked
(
_Â
) \

406 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

407 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

408 
	#_IO_≥ekc_u∆ocked
(
_Â
) \

409 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

410 && 
	`__undîÊow
 (
_Â
Ë=
EOF
 ? EOF \

411 : *(*Ë(
_Â
)->
_IO_ªad_±r
)

	)

412 
	#_IO_putc_u∆ocked
(
_ch
, 
_Â
) \

413 (
	`_IO_BE
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
, 0) \

414 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

415 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

417 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


418 
	#_IO_gëwc_u∆ocked
(
_Â
) \

419 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

420 || ((
_Â
)->
_wide_d©a
->
_IO_ªad_±r
 \

421 >(
_Â
)->
_wide_d©a
->
_IO_ªad_íd
), 0) \

422 ? 
	`__wuÊow
 (
_Â
Ë: (
_IO_wöt_t
Ë*(_Â)->
_wide_d©a
->
_IO_ªad_±r
++)

	)

423 
	#_IO_putwc_u∆ocked
(
_wch
, 
_Â
) \

424 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

425 || ((
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
 \

426 >(
_Â
)->
_wide_d©a
->
_IO_wrôe_íd
), 0) \

427 ? 
	`__wovîÊow
 (
_Â
, 
_wch
) \

428 : (
_IO_wöt_t
Ë(*(
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
++ = (
_wch
)))

	)

431 
	#_IO_„of_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

432 
	#_IO_„º‹_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

434 
_IO_gëc
 (
_IO_FILE
 *
__Â
);

435 
_IO_putc
 (
__c
, 
_IO_FILE
 *
__Â
);

436 
_IO_„of
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

437 
_IO_„º‹
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

439 
_IO_≥ekc_locked
 (
_IO_FILE
 *
__Â
);

442 
	#_IO_PENDING_OUTPUT_COUNT
(
_Â
) \

443 ((
_Â
)->
_IO_wrôe_±r
 - (_Â)->
_IO_wrôe_ba£
)

	)

445 
_IO_Êockfûe
 (
_IO_FILE
 *Ë
__THROW
;

446 
_IO_fu∆ockfûe
 (
_IO_FILE
 *Ë
__THROW
;

447 
_IO_·rylockfûe
 (
_IO_FILE
 *Ë
__THROW
;

449 #ifde‡
_IO_MTSAFE_IO


450 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_locked
 (_Â)

	)

451 
	#_IO_Êockfûe
(
_Â
) \

452 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_Êockfûe
 (_Â)

	)

453 
	#_IO_fu∆ockfûe
(
_Â
) \

454 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_fu∆ockfûe
 (_Â)

	)

456 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_u∆ocked
 (_Â)

	)

457 
	#_IO_Êockfûe
(
_Â
Ë

	)

458 
	#_IO_fu∆ockfûe
(
_Â
Ë

	)

459 
	#_IO_·rylockfûe
(
_Â
Ë

	)

460 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
Ë

	)

461 
	#_IO_˛ónup_ªgi⁄_íd
(
_Doô
Ë

	)

464 
_IO_vfsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, const * __restrict,

465 
_IO_va_li°
, *
__ª°ri˘
);

466 
_IO_vÂrötf
 (
_IO_FILE
 *
__ª°ri˘
, const *__restrict,

467 
_IO_va_li°
);

468 
_IO_ssize_t
 
_IO_∑dn
 (
_IO_FILE
 *, , _IO_ssize_t);

469 
_IO_size_t
 
_IO_sgën
 (
_IO_FILE
 *, *, _IO_size_t);

471 
_IO_off64_t
 
_IO_£ekoff
 (
_IO_FILE
 *, _IO_off64_t, , );

472 
_IO_off64_t
 
_IO_£ekpos
 (
_IO_FILE
 *, _IO_off64_t, );

474 
_IO_‰ì_backup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

476 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


477 
_IO_wöt_t
 
_IO_gëwc
 (
_IO_FILE
 *
__Â
);

478 
_IO_wöt_t
 
_IO_putwc
 (
wch¨_t
 
__wc
, 
_IO_FILE
 *
__Â
);

479 
_IO_fwide
 (
_IO_FILE
 *
__Â
, 
__mode
Ë
__THROW
;

480 #i‡
__GNUC__
 >= 2

483 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


484 
	~<shlib-com∑t.h
>

485 #i‡
SHLIB_COMPAT
 (
libc
, 
GLIBC_2_0
, 
GLIBC_2_1
)

486 
	#_IO_fwide_maybe_öcom∑tibÀ
 \

487 (
	`__buûtö_ex≥˘
 (&
_IO_°dö_u£d
 =
NULL
, 0))

	)

488 c⁄° 
_IO_°dö_u£d
;

489 
wók_exã∫
 (
_IO_°dö_u£d
);

492 #i‚de‡
_IO_fwide_maybe_öcom∑tibÀ


493 
	#_IO_fwide_maybe_öcom∑tibÀ
 (0)

	)

497 
	#_IO_fwide
(
__Â
, 
__mode
) \

498 ({ 
__ªsu…
 = (
__mode
); \

499 i‡(
__ªsu…
 < 0 && ! 
_IO_fwide_maybe_öcom∑tibÀ
) \

501 i‡((
__Â
)->
_mode
 == 0) \

503 (
__Â
)->
_mode
 = -1; \

504 
__ªsu…
 = (
__Â
)->
_mode
; \

506 i‡(
	`__buûtö_c⁄°™t_p
 (
__mode
) && (__mode) == 0) \

507 
__ªsu…
 = 
_IO_fwide_maybe_öcom∑tibÀ
 ? -1 : (
__Â
)->
_mode
; \

509 
__ªsu…
 = 
	`_IO_fwide
 (
__Â
, __result); \

510 
__ªsu…
; })

	)

513 
_IO_vfwsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict,

514 
_IO_va_li°
, *
__ª°ri˘
);

515 
_IO_vfw¥ötf
 (
_IO_FILE
 *
__ª°ri˘
, c⁄° 
wch¨_t
 *__restrict,

516 
_IO_va_li°
);

517 
_IO_ssize_t
 
_IO_w∑dn
 (
_IO_FILE
 *, 
wöt_t
, _IO_ssize_t);

518 
_IO_‰ì_wbackup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

521 #ifde‡
__LDBL_COMPAT


522 
	~<bôs/libio-ldbl.h
>

525 #ifde‡
__˝lu•lus


	@/usr/include/locale.h

22 #i‚def 
_LOCALE_H


23 
	#_LOCALE_H
 1

	)

25 
	~<„©uªs.h
>

27 
	#__√ed_NULL


	)

28 
	~<°ddef.h
>

29 
	~<bôs/loˇÀ.h
>

31 
	g__BEGIN_DECLS


35 
	#LC_CTYPE
 
__LC_CTYPE


	)

36 
	#LC_NUMERIC
 
__LC_NUMERIC


	)

37 
	#LC_TIME
 
__LC_TIME


	)

38 
	#LC_COLLATE
 
__LC_COLLATE


	)

39 
	#LC_MONETARY
 
__LC_MONETARY


	)

40 
	#LC_MESSAGES
 
__LC_MESSAGES


	)

41 
	#LC_ALL
 
__LC_ALL


	)

42 
	#LC_PAPER
 
__LC_PAPER


	)

43 
	#LC_NAME
 
__LC_NAME


	)

44 
	#LC_ADDRESS
 
__LC_ADDRESS


	)

45 
	#LC_TELEPHONE
 
__LC_TELEPHONE


	)

46 
	#LC_MEASUREMENT
 
__LC_MEASUREMENT


	)

47 
	#LC_IDENTIFICATION
 
__LC_IDENTIFICATION


	)

50 
__BEGIN_NAMESPACE_STD


53 
	slc⁄v


57 *
	mdecimÆ_poöt
;

58 *
	mthoußnds_£p
;

64 *
	mgroupög
;

70 *
	möt_cuº_symbﬁ
;

71 *
	mcuºícy_symbﬁ
;

72 *
	mm⁄_decimÆ_poöt
;

73 *
	mm⁄_thoußnds_£p
;

74 *
	mm⁄_groupög
;

75 *
	mposôive_sign
;

76 *
	m√g©ive_sign
;

77 
	möt_‰ac_digôs
;

78 
	m‰ac_digôs
;

80 
	mp_cs_¥e˚des
;

82 
	mp_£p_by_•a˚
;

84 
	mn_cs_¥e˚des
;

86 
	mn_£p_by_•a˚
;

93 
	mp_sign_po¢
;

94 
	mn_sign_po¢
;

95 #ifde‡
__USE_ISOC99


97 
	möt_p_cs_¥e˚des
;

99 
	möt_p_£p_by_•a˚
;

101 
	möt_n_cs_¥e˚des
;

103 
	möt_n_£p_by_•a˚
;

110 
	möt_p_sign_po¢
;

111 
	möt_n_sign_po¢
;

113 
	m__öt_p_cs_¥e˚des
;

114 
	m__öt_p_£p_by_•a˚
;

115 
	m__öt_n_cs_¥e˚des
;

116 
	m__öt_n_£p_by_•a˚
;

117 
	m__öt_p_sign_po¢
;

118 
	m__öt_n_sign_po¢
;

124 *
	$£éoˇÀ
 (
__ˇãg‹y
, c⁄° *
__loˇÀ
Ë
__THROW
;

127 
lc⁄v
 *
	$loˇÀc⁄v
 (Ë
__THROW
;

129 
__END_NAMESPACE_STD


132 #ifdef 
__USE_XOPEN2K8


145 
	~<xloˇÀ.h
>

151 
__loˇÀ_t
 
	$√wloˇÀ
 (
__ˇãg‹y_mask
, c⁄° *
__loˇÀ
,

152 
__loˇÀ_t
 
__ba£
Ë
__THROW
;

158 
	#LC_CTYPE_MASK
 (1 << 
__LC_CTYPE
)

	)

159 
	#LC_NUMERIC_MASK
 (1 << 
__LC_NUMERIC
)

	)

160 
	#LC_TIME_MASK
 (1 << 
__LC_TIME
)

	)

161 
	#LC_COLLATE_MASK
 (1 << 
__LC_COLLATE
)

	)

162 
	#LC_MONETARY_MASK
 (1 << 
__LC_MONETARY
)

	)

163 
	#LC_MESSAGES_MASK
 (1 << 
__LC_MESSAGES
)

	)

164 
	#LC_PAPER_MASK
 (1 << 
__LC_PAPER
)

	)

165 
	#LC_NAME_MASK
 (1 << 
__LC_NAME
)

	)

166 
	#LC_ADDRESS_MASK
 (1 << 
__LC_ADDRESS
)

	)

167 
	#LC_TELEPHONE_MASK
 (1 << 
__LC_TELEPHONE
)

	)

168 
	#LC_MEASUREMENT_MASK
 (1 << 
__LC_MEASUREMENT
)

	)

169 
	#LC_IDENTIFICATION_MASK
 (1 << 
__LC_IDENTIFICATION
)

	)

170 
	#LC_ALL_MASK
 (
LC_CTYPE_MASK
 \

171 | 
LC_NUMERIC_MASK
 \

172 | 
LC_TIME_MASK
 \

173 | 
LC_COLLATE_MASK
 \

174 | 
LC_MONETARY_MASK
 \

175 | 
LC_MESSAGES_MASK
 \

176 | 
LC_PAPER_MASK
 \

177 | 
LC_NAME_MASK
 \

178 | 
LC_ADDRESS_MASK
 \

179 | 
LC_TELEPHONE_MASK
 \

180 | 
LC_MEASUREMENT_MASK
 \

181 | 
LC_IDENTIFICATION_MASK
 \

182 )

	)

186 
__loˇÀ_t
 
	$du∂oˇÀ
 (
__loˇÀ_t
 
__d©a£t
Ë
__THROW
;

190 
	$‰ìloˇÀ
 (
__loˇÀ_t
 
__d©a£t
Ë
__THROW
;

197 
__loˇÀ_t
 
	$u£loˇÀ
 (
__loˇÀ_t
 
__d©a£t
Ë
__THROW
;

201 
	#LC_GLOBAL_LOCALE
 ((
__loˇÀ_t
Ë-1L)

	)

205 
__END_DECLS


	@/usr/include/rpc/netdb.h

36 #i‚de‡
_RPC_NETDB_H


37 
	#_RPC_NETDB_H
 1

	)

39 
	~<„©uªs.h
>

41 
	#__√ed_size_t


	)

42 
	~<°ddef.h
>

44 
__BEGIN_DECLS


46 
	sΩ˚¡


48 *
	mr_«me
;

49 **
	mr_Æü£s
;

50 
	mr_numbî
;

53 
	$£åp˚¡
 (
__°ay›í
Ë
__THROW
;

54 
	$ídΩ˚¡
 (Ë
__THROW
;

55 
Ω˚¡
 *
	$gëΩcby«me
 (c⁄° *
__«me
Ë
__THROW
;

56 
Ω˚¡
 *
	$gëΩcbynumbî
 (
__numbî
Ë
__THROW
;

57 
Ω˚¡
 *
	$gëΩ˚¡
 (Ë
__THROW
;

59 #ifde‡
__USE_MISC


60 
	$gëΩcby«me_r
 (c⁄° *
__«me
, 
Ω˚¡
 *
__ªsu…_buf
,

61 *
__buf„r
, 
size_t
 
__buÊí
,

62 
Ω˚¡
 **
__ªsu…
Ë
__THROW
;

64 
	$gëΩcbynumbî_r
 (
__numbî
, 
Ω˚¡
 *
__ªsu…_buf
,

65 *
__buf„r
, 
size_t
 
__buÊí
,

66 
Ω˚¡
 **
__ªsu…
Ë
__THROW
;

68 
	$gëΩ˚¡_r
 (
Ω˚¡
 *
__ªsu…_buf
, *
__buf„r
,

69 
size_t
 
__buÊí
, 
Ω˚¡
 **
__ªsu…
Ë
__THROW
;

72 
__END_DECLS


	@/usr/include/sched.h

19 #i‚def 
_SCHED_H


20 
	#_SCHED_H
 1

	)

22 
	~<„©uªs.h
>

25 
	~<bôs/ty≥s.h
>

27 
	#__√ed_size_t


	)

28 
	~<°ddef.h
>

30 
	#__√ed_time_t


	)

31 
	#__√ed_time•ec


	)

32 
	~<time.h
>

34 #i‚de‡
__pid_t_deföed


35 
__pid_t
 
	tpid_t
;

36 
	#__pid_t_deföed


	)

41 
	~<bôs/sched.h
>

43 
	#sched_¥i‹ôy
 
__sched_¥i‹ôy


	)

46 
__BEGIN_DECLS


49 
	$sched_£ç¨am
 (
__pid_t
 
__pid
, c⁄° 
sched_∑øm
 *
__∑øm
)

50 
__THROW
;

53 
	$sched_gë∑øm
 (
__pid_t
 
__pid
, 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

56 
	$sched_£tscheduÀr
 (
__pid_t
 
__pid
, 
__pﬁicy
,

57 c⁄° 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

60 
	$sched_gëscheduÀr
 (
__pid_t
 
__pid
Ë
__THROW
;

63 
	$sched_yõld
 (Ë
__THROW
;

66 
	$sched_gë_¥i‹ôy_max
 (
__Æg‹ôhm
Ë
__THROW
;

69 
	$sched_gë_¥i‹ôy_mö
 (
__Æg‹ôhm
Ë
__THROW
;

72 
	$sched_º_gë_öãrvÆ
 (
__pid_t
 
__pid
, 
time•ec
 *
__t
Ë
__THROW
;

75 #ifde‡
__USE_GNU


77 
	#CPU_SETSIZE
 
__CPU_SETSIZE


	)

78 
	#CPU_SET
(
˝u
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

79 
	#CPU_CLR
(
˝u
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

80 
	#CPU_ISSET
(
˝u
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (˝u,  (
˝u_£t_t
), \

81 
˝u£ç
)

	)

82 
	#CPU_ZERO
(
˝u£ç
Ë
	`__CPU_ZERO_S
 ( (
˝u_£t_t
), cpu£ç)

	)

83 
	#CPU_COUNT
(
˝u£ç
Ë
	`__CPU_COUNT_S
 ( (
˝u_£t_t
), cpu£ç)

	)

85 
	#CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u, sësize, cpu£ç)

	)

86 
	#CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u, sësize, cpu£ç)

	)

87 
	#CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (cpu, setsize, \

88 
˝u£ç
)

	)

89 
	#CPU_ZERO_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_ZERO_S
 (£tsize, cpu£ç)

	)

90 
	#CPU_COUNT_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_COUNT_S
 (£tsize, cpu£ç)

	)

92 
	#CPU_EQUAL
(
˝u£ç1
, 
˝u£ç2
) \

93 
	`__CPU_EQUAL_S
 ( (
˝u_£t_t
), 
˝u£ç1
, 
˝u£ç2
)

	)

94 
	#CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

95 
	`__CPU_EQUAL_S
 (
£tsize
, 
˝u£ç1
, 
˝u£ç2
)

	)

97 
	#CPU_AND
(
de°£t
, 
§c£t1
, 
§c£t2
) \

98 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

99 
	#CPU_OR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

100 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

101 
	#CPU_XOR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

102 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

103 
	#CPU_AND_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

104 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

105 
	#CPU_OR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

106 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

107 
	#CPU_XOR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

108 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

110 
	#CPU_ALLOC_SIZE
(
cou¡
Ë
	`__CPU_ALLOC_SIZE
 (cou¡)

	)

111 
	#CPU_ALLOC
(
cou¡
Ë
	`__CPU_ALLOC
 (cou¡)

	)

112 
	#CPU_FREE
(
˝u£t
Ë
	`__CPU_FREE
 (˝u£t)

	)

116 
	$sched_£èfföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

117 c⁄° 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

120 
	$sched_gëafföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

121 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

124 
__END_DECLS


	@/usr/include/stdint.h

22 #i‚de‡
_STDINT_H


23 
	#_STDINT_H
 1

	)

25 
	~<„©uªs.h
>

26 
	~<bôs/wch¨.h
>

27 
	~<bôs/w‹dsize.h
>

34 #i‚de‡
__öt8_t_deföed


35 
	#__öt8_t_deföed


	)

36 sig√d 
	töt8_t
;

37 
	töt16_t
;

38 
	töt32_t
;

39 #i‡
__WORDSIZE
 == 64

40 
	töt64_t
;

42 
__exãnsi⁄__


43 
	töt64_t
;

48 
	tuöt8_t
;

49 
	tuöt16_t
;

50 #i‚de‡
__uöt32_t_deföed


51 
	tuöt32_t
;

52 
	#__uöt32_t_deföed


	)

54 #i‡
__WORDSIZE
 == 64

55 
	tuöt64_t
;

57 
__exãnsi⁄__


58 
	tuöt64_t
;

65 sig√d 
	töt_Àa°8_t
;

66 
	töt_Àa°16_t
;

67 
	töt_Àa°32_t
;

68 #i‡
__WORDSIZE
 == 64

69 
	töt_Àa°64_t
;

71 
__exãnsi⁄__


72 
	töt_Àa°64_t
;

76 
	tuöt_Àa°8_t
;

77 
	tuöt_Àa°16_t
;

78 
	tuöt_Àa°32_t
;

79 #i‡
__WORDSIZE
 == 64

80 
	tuöt_Àa°64_t
;

82 
__exãnsi⁄__


83 
	tuöt_Àa°64_t
;

90 sig√d 
	töt_Á°8_t
;

91 #i‡
__WORDSIZE
 == 64

92 
	töt_Á°16_t
;

93 
	töt_Á°32_t
;

94 
	töt_Á°64_t
;

96 
	töt_Á°16_t
;

97 
	töt_Á°32_t
;

98 
__exãnsi⁄__


99 
	töt_Á°64_t
;

103 
	tuöt_Á°8_t
;

104 #i‡
__WORDSIZE
 == 64

105 
	tuöt_Á°16_t
;

106 
	tuöt_Á°32_t
;

107 
	tuöt_Á°64_t
;

109 
	tuöt_Á°16_t
;

110 
	tuöt_Á°32_t
;

111 
__exãnsi⁄__


112 
	tuöt_Á°64_t
;

117 #i‡
__WORDSIZE
 == 64

118 #i‚de‡
__öçå_t_deföed


119 
	töçå_t
;

120 
	#__öçå_t_deföed


	)

122 
	tuöçå_t
;

124 #i‚de‡
__öçå_t_deföed


125 
	töçå_t
;

126 
	#__öçå_t_deföed


	)

128 
	tuöçå_t
;

133 #i‡
__WORDSIZE
 == 64

134 
	tötmax_t
;

135 
	tuötmax_t
;

137 
__exãnsi⁄__


138 
	tötmax_t
;

139 
__exãnsi⁄__


140 
	tuötmax_t
;

144 #i‡
__WORDSIZE
 == 64

145 
	#__INT64_C
(
c
Ë¯## 
L


	)

146 
	#__UINT64_C
(
c
Ë¯## 
UL


	)

148 
	#__INT64_C
(
c
Ë¯## 
LL


	)

149 
	#__UINT64_C
(
c
Ë¯## 
ULL


	)

155 
	#INT8_MIN
 (-128)

	)

156 
	#INT16_MIN
 (-32767-1)

	)

157 
	#INT32_MIN
 (-2147483647-1)

	)

158 
	#INT64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

160 
	#INT8_MAX
 (127)

	)

161 
	#INT16_MAX
 (32767)

	)

162 
	#INT32_MAX
 (2147483647)

	)

163 
	#INT64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

166 
	#UINT8_MAX
 (255)

	)

167 
	#UINT16_MAX
 (65535)

	)

168 
	#UINT32_MAX
 (4294967295U)

	)

169 
	#UINT64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

173 
	#INT_LEAST8_MIN
 (-128)

	)

174 
	#INT_LEAST16_MIN
 (-32767-1)

	)

175 
	#INT_LEAST32_MIN
 (-2147483647-1)

	)

176 
	#INT_LEAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

178 
	#INT_LEAST8_MAX
 (127)

	)

179 
	#INT_LEAST16_MAX
 (32767)

	)

180 
	#INT_LEAST32_MAX
 (2147483647)

	)

181 
	#INT_LEAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

184 
	#UINT_LEAST8_MAX
 (255)

	)

185 
	#UINT_LEAST16_MAX
 (65535)

	)

186 
	#UINT_LEAST32_MAX
 (4294967295U)

	)

187 
	#UINT_LEAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

191 
	#INT_FAST8_MIN
 (-128)

	)

192 #i‡
__WORDSIZE
 == 64

193 
	#INT_FAST16_MIN
 (-9223372036854775807L-1)

	)

194 
	#INT_FAST32_MIN
 (-9223372036854775807L-1)

	)

196 
	#INT_FAST16_MIN
 (-2147483647-1)

	)

197 
	#INT_FAST32_MIN
 (-2147483647-1)

	)

199 
	#INT_FAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

201 
	#INT_FAST8_MAX
 (127)

	)

202 #i‡
__WORDSIZE
 == 64

203 
	#INT_FAST16_MAX
 (9223372036854775807L)

	)

204 
	#INT_FAST32_MAX
 (9223372036854775807L)

	)

206 
	#INT_FAST16_MAX
 (2147483647)

	)

207 
	#INT_FAST32_MAX
 (2147483647)

	)

209 
	#INT_FAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

212 
	#UINT_FAST8_MAX
 (255)

	)

213 #i‡
__WORDSIZE
 == 64

214 
	#UINT_FAST16_MAX
 (18446744073709551615UL)

	)

215 
	#UINT_FAST32_MAX
 (18446744073709551615UL)

	)

217 
	#UINT_FAST16_MAX
 (4294967295U)

	)

218 
	#UINT_FAST32_MAX
 (4294967295U)

	)

220 
	#UINT_FAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

224 #i‡
__WORDSIZE
 == 64

225 
	#INTPTR_MIN
 (-9223372036854775807L-1)

	)

226 
	#INTPTR_MAX
 (9223372036854775807L)

	)

227 
	#UINTPTR_MAX
 (18446744073709551615UL)

	)

229 
	#INTPTR_MIN
 (-2147483647-1)

	)

230 
	#INTPTR_MAX
 (2147483647)

	)

231 
	#UINTPTR_MAX
 (4294967295U)

	)

236 
	#INTMAX_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

238 
	#INTMAX_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

241 
	#UINTMAX_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

247 #i‡
__WORDSIZE
 == 64

248 
	#PTRDIFF_MIN
 (-9223372036854775807L-1)

	)

249 
	#PTRDIFF_MAX
 (9223372036854775807L)

	)

251 
	#PTRDIFF_MIN
 (-2147483647-1)

	)

252 
	#PTRDIFF_MAX
 (2147483647)

	)

256 
	#SIG_ATOMIC_MIN
 (-2147483647-1)

	)

257 
	#SIG_ATOMIC_MAX
 (2147483647)

	)

260 #i‡
__WORDSIZE
 == 64

261 
	#SIZE_MAX
 (18446744073709551615UL)

	)

263 
	#SIZE_MAX
 (4294967295U)

	)

267 #i‚de‡
WCHAR_MIN


269 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

270 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

274 
	#WINT_MIN
 (0u)

	)

275 
	#WINT_MAX
 (4294967295u)

	)

278 
	#INT8_C
(
c
Ë
	)
c

279 
	#INT16_C
(
c
Ë
	)
c

280 
	#INT32_C
(
c
Ë
	)
c

281 #i‡
__WORDSIZE
 == 64

282 
	#INT64_C
(
c
Ë¯## 
L


	)

284 
	#INT64_C
(
c
Ë¯## 
LL


	)

288 
	#UINT8_C
(
c
Ë
	)
c

289 
	#UINT16_C
(
c
Ë
	)
c

290 
	#UINT32_C
(
c
Ë¯## 
U


	)

291 #i‡
__WORDSIZE
 == 64

292 
	#UINT64_C
(
c
Ë¯## 
UL


	)

294 
	#UINT64_C
(
c
Ë¯## 
ULL


	)

298 #i‡
__WORDSIZE
 == 64

299 
	#INTMAX_C
(
c
Ë¯## 
L


	)

300 
	#UINTMAX_C
(
c
Ë¯## 
UL


	)

302 
	#INTMAX_C
(
c
Ë¯## 
LL


	)

303 
	#UINTMAX_C
(
c
Ë¯## 
ULL


	)

	@/usr/include/wctype.h

23 #i‚de‡
_WCTYPE_H


25 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 #i‚de‡
__√ed_iswxxx


29 
	#_WCTYPE_H
 1

	)

32 
	#__√ed_wöt_t


	)

33 
	~<wch¨.h
>

37 #i‚de‡
WEOF


38 
	#WEOF
 (0xffffffffu)

	)

41 #unde‡
__√ed_iswxxx


46 #i‚de‡
__iswxxx_deföed


47 
	#__iswxxx_deföed
 1

	)

49 
__BEGIN_NAMESPACE_C99


52 
	tw˘y≥_t
;

53 
	g__END_NAMESPACE_C99


55 #i‚de‡
_ISwbô


60 
	~<ídün.h
>

61 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


62 
	#_ISwbô
(
bô
Ë(1 << (bô))

	)

64 
	#_ISwbô
(
bô
) \

65 ((
bô
) < 8 ? () ((1UL << (bit)) << 24) \

66 : ((
bô
) < 16 ? () ((1UL << (bit)) << 8) \

67 : ((
bô
) < 24 ? () ((1UL << (bit)) >> 8) \

68 : (Ë((1UL << (
bô
)Ë>> 24))))

	)

73 
	m__ISwuµî
 = 0,

74 
	m__ISwlowî
 = 1,

75 
	m__ISwÆpha
 = 2,

76 
	m__ISwdigô
 = 3,

77 
	m__ISwxdigô
 = 4,

78 
	m__ISw•a˚
 = 5,

79 
	m__ISw¥öt
 = 6,

80 
	m__ISwgøph
 = 7,

81 
	m__ISwbœnk
 = 8,

82 
	m__ISw˙ål
 = 9,

83 
	m__ISwpun˘
 = 10,

84 
	m__ISwÆnum
 = 11,

86 
	m_ISwuµî
 = 
_ISwbô
 (
__ISwuµî
),

87 
	m_ISwlowî
 = 
_ISwbô
 (
__ISwlowî
),

88 
	m_ISwÆpha
 = 
_ISwbô
 (
__ISwÆpha
),

89 
	m_ISwdigô
 = 
_ISwbô
 (
__ISwdigô
),

90 
	m_ISwxdigô
 = 
_ISwbô
 (
__ISwxdigô
),

91 
	m_ISw•a˚
 = 
_ISwbô
 (
__ISw•a˚
),

92 
	m_ISw¥öt
 = 
_ISwbô
 (
__ISw¥öt
),

93 
	m_ISwgøph
 = 
_ISwbô
 (
__ISwgøph
),

94 
	m_ISwbœnk
 = 
_ISwbô
 (
__ISwbœnk
),

95 
	m_ISw˙ål
 = 
_ISwbô
 (
__ISw˙ål
),

96 
	m_ISwpun˘
 = 
_ISwbô
 (
__ISwpun˘
),

97 
	m_ISwÆnum
 = 
_ISwbô
 (
__ISwÆnum
)

102 
__BEGIN_DECLS


104 
__BEGIN_NAMESPACE_C99


111 
	$iswÆnum
 (
wöt_t
 
__wc
Ë
__THROW
;

117 
	$iswÆpha
 (
wöt_t
 
__wc
Ë
__THROW
;

120 
	$isw˙ål
 (
wöt_t
 
__wc
Ë
__THROW
;

124 
	$iswdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

128 
	$iswgøph
 (
wöt_t
 
__wc
Ë
__THROW
;

133 
	$iswlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

136 
	$isw¥öt
 (
wöt_t
 
__wc
Ë
__THROW
;

141 
	$iswpun˘
 (
wöt_t
 
__wc
Ë
__THROW
;

146 
	$isw•a˚
 (
wöt_t
 
__wc
Ë
__THROW
;

151 
	$iswuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

156 
	$iswxdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

161 #ifde‡
__USE_ISOC99


162 
	$iswbœnk
 (
wöt_t
 
__wc
Ë
__THROW
;

171 
w˘y≥_t
 
	$w˘y≥
 (c⁄° *
__¥›îty
Ë
__THROW
;

175 
	$isw˘y≥
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
Ë
__THROW
;

176 
__END_NAMESPACE_C99


183 
__BEGIN_NAMESPACE_C99


186 c⁄° 
	t__öt32_t
 *
	tw˘øns_t
;

187 
__END_NAMESPACE_C99


188 #ifde‡
__USE_GNU


189 
	$__USING_NAMESPACE_C99
(
w˘øns_t
)

192 
__BEGIN_NAMESPACE_C99


194 
wöt_t
 
	$towlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

197 
wöt_t
 
	$towuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

198 
__END_NAMESPACE_C99


200 
__END_DECLS


207 #ifde‡
_WCTYPE_H


213 
__BEGIN_DECLS


215 
__BEGIN_NAMESPACE_C99


218 
w˘øns_t
 
	$w˘øns
 (c⁄° *
__¥›îty
Ë
__THROW
;

221 
wöt_t
 
	$tow˘øns
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
Ë
__THROW
;

222 
__END_NAMESPACE_C99


224 #ifde‡
__USE_XOPEN2K8


226 
	~<xloˇÀ.h
>

230 
	$iswÆnum_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

236 
	$iswÆpha_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

239 
	$isw˙ål_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

243 
	$iswdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

247 
	$iswgøph_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

252 
	$iswlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

255 
	$isw¥öt_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

260 
	$iswpun˘_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

265 
	$isw•a˚_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

270 
	$iswuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

275 
	$iswxdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

280 
	$iswbœnk_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

284 
w˘y≥_t
 
	$w˘y≥_l
 (c⁄° *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

285 
__THROW
;

289 
	$isw˘y≥_l
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
, 
__loˇÀ_t
 
__loˇÀ
)

290 
__THROW
;

298 
wöt_t
 
	$towlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

301 
wöt_t
 
	$towuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

305 
w˘øns_t
 
	$w˘øns_l
 (c⁄° *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

306 
__THROW
;

309 
wöt_t
 
	$tow˘øns_l
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
,

310 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

314 
__END_DECLS


	@/usr/include/xlocale.h

20 #i‚de‡
_XLOCALE_H


21 
	#_XLOCALE_H
 1

	)

27 
	s__loˇÀ_°ru˘


30 
__loˇÀ_d©a
 *
	m__loˇÀs
[13];

33 c⁄° *
	m__˘y≥_b
;

34 c⁄° *
	m__˘y≥_tﬁowî
;

35 c⁄° *
	m__˘y≥_touµî
;

38 c⁄° *
	m__«mes
[13];

39 } *
	t__loˇÀ_t
;

42 
__loˇÀ_t
 
	tloˇÀ_t
;

	@/usr/include/_G_config.h

4 #i‚de‡
_G_c⁄fig_h


5 
	#_G_c⁄fig_h
 1

	)

9 
	~<bôs/ty≥s.h
>

10 
	#__√ed_size_t


	)

11 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


12 
	#__√ed_wch¨_t


	)

14 
	#__√ed_NULL


	)

15 
	~<°ddef.h
>

16 
	#__√ed_mb°©e_t


	)

17 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


18 
	#__√ed_wöt_t


	)

20 
	~<wch¨.h
>

23 
__off_t
 
	m__pos
;

24 
__mb°©e_t
 
	m__°©e
;

25 } 
	t_G_Âos_t
;

28 
__off64_t
 
	m__pos
;

29 
__mb°©e_t
 
	m__°©e
;

30 } 
	t_G_Âos64_t
;

31 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


32 
	~<gc⁄v.h
>

35 
__gc⁄v_öfo
 
	m__cd
;

38 
__gc⁄v_öfo
 
	m__cd
;

39 
__gc⁄v_°ï_d©a
 
	m__d©a
;

40 } 
	m__comböed
;

41 } 
	t_G_ic⁄v_t
;

46 
	#_G_va_li°
 
__gnuc_va_li°


	)

48 
	#_G_HAVE_MMAP
 1

	)

49 
	#_G_HAVE_MREMAP
 1

	)

51 
	#_G_IO_IO_FILE_VERSION
 0x20001

	)

54 
	#_G_HAVE_ST_BLKSIZE
 
	`deföed
 (
_STATBUF_ST_BLKSIZE
)

	)

56 
	#_G_BUFSIZ
 8192

	)

	@/usr/include/stdc-predef.h

18 #i‚def 
_STDC_PREDEF_H


19 
	#_STDC_PREDEF_H
 1

	)

36 #ifde‡
__GCC_IEC_559


37 #i‡
__GCC_IEC_559
 > 0

38 
	#__STDC_IEC_559__
 1

	)

41 
	#__STDC_IEC_559__
 1

	)

44 #ifde‡
__GCC_IEC_559_COMPLEX


45 #i‡
__GCC_IEC_559_COMPLEX
 > 0

46 
	#__STDC_IEC_559_COMPLEX__
 1

	)

49 
	#__STDC_IEC_559_COMPLEX__
 1

	)

54 
	#__STDC_ISO_10646__
 201103L

	)

57 
	#__STDC_NO_THREADS__
 1

	)

	@/usr/include/gconv.h

22 #i‚de‡
_GCONV_H


23 
	#_GCONV_H
 1

	)

25 
	~<„©uªs.h
>

26 
	#__√ed_mb°©e_t


	)

27 
	#__√ed_wöt_t


	)

28 
	~<wch¨.h
>

29 
	#__√ed_size_t


	)

30 
	#__√ed_wch¨_t


	)

31 
	~<°ddef.h
>

34 
	#__UNKNOWN_10646_CHAR
 ((
wch¨_t
Ë0xfffd)

	)

39 
	m__GCONV_OK
 = 0,

40 
	m__GCONV_NOCONV
,

41 
	m__GCONV_NODB
,

42 
	m__GCONV_NOMEM
,

44 
	m__GCONV_EMPTY_INPUT
,

45 
	m__GCONV_FULL_OUTPUT
,

46 
	m__GCONV_ILLEGAL_INPUT
,

47 
	m__GCONV_INCOMPLETE_INPUT
,

49 
	m__GCONV_ILLEGAL_DESCRIPTOR
,

50 
	m__GCONV_INTERNAL_ERROR


57 
	m__GCONV_IS_LAST
 = 0x0001,

58 
	m__GCONV_IGNORE_ERRORS
 = 0x0002,

59 
	m__GCONV_SWAP
 = 0x0004

64 
	g__gc⁄v_°ï
;

65 
	g__gc⁄v_°ï_d©a
;

66 
	g__gc⁄v_lﬂded_obje˘
;

67 
	g__gc⁄v_å™s_d©a
;

71 (*
	t__gc⁄v_f˘
Ë(
	t__gc⁄v_°ï
 *, 
	t__gc⁄v_°ï_d©a
 *,

73 **, 
	tsize_t
 *, , );

76 
	$wöt_t
 (*
	t__gc⁄v_btowc_f˘
Ë(
	t__gc⁄v_°ï
 *, );

79 (*
	t__gc⁄v_öô_f˘
Ë(
	t__gc⁄v_°ï
 *);

80 (*
	t__gc⁄v_íd_f˘
Ë(
	t__gc⁄v_°ï
 *);

84 (*
	t__gc⁄v_å™s_f˘
Ë(
	t__gc⁄v_°ï
 *,

85 
	t__gc⁄v_°ï_d©a
 *, *,

89 
	tsize_t
 *);

92 (*
	t__gc⁄v_å™s_c⁄ãxt_f˘
) (*, const *,

97 (*
	t__gc⁄v_å™s_quîy_f˘
) (const *, const ***,

98 
	tsize_t
 *);

101 (*
	t__gc⁄v_å™s_öô_f˘
) (**, const *);

102 (*
	t__gc⁄v_å™s_íd_f˘
) (*);

104 
	s__gc⁄v_å™s_d©a


107 
__gc⁄v_å™s_f˘
 
__å™s_f˘
;

108 
__gc⁄v_å™s_c⁄ãxt_f˘
 
__å™s_c⁄ãxt_f˘
;

109 
__gc⁄v_å™s_íd_f˘
 
__å™s_íd_f˘
;

110 *
__d©a
;

111 
__gc⁄v_å™s_d©a
 *
__√xt
;

116 
	s__gc⁄v_°ï


118 
__gc⁄v_lﬂded_obje˘
 *
__shlib_h™dÀ
;

119 c⁄° *
__mod«me
;

121 
__cou¡î
;

123 *
__‰om_«me
;

124 *
__to_«me
;

126 
__gc⁄v_f˘
 
__f˘
;

127 
__gc⁄v_btowc_f˘
 
__btowc_f˘
;

128 
__gc⁄v_öô_f˘
 
__öô_f˘
;

129 
__gc⁄v_íd_f˘
 
__íd_f˘
;

133 
__mö_√eded_‰om
;

134 
__max_√eded_‰om
;

135 
__mö_√eded_to
;

136 
__max_√eded_to
;

139 
__°©eful
;

141 *
__d©a
;

146 
	s__gc⁄v_°ï_d©a


148 *
__outbuf
;

149 *
__outbu„nd
;

153 
__Êags
;

157 
__övoˇti⁄_cou¡î
;

161 
__öã∫Æ_u£
;

163 
__mb°©e_t
 *
__°©ï
;

164 
__mb°©e_t
 
__°©e
;

168 
__gc⁄v_å™s_d©a
 *
__å™s
;

173 
	s__gc⁄v_öfo


175 
size_t
 
__n°ïs
;

176 
__gc⁄v_°ï
 *
__°ïs
;

177 
__exãnsi⁄__
 
__gc⁄v_°ï_d©a
 
__d©a
 
__Êex¨r
;

178 } *
	t__gc⁄v_t
;

	@
1
.
1
/usr/include
128
2726
src/libcommon/common.h
src/libcommon/fd.c
src/libcommon/fd.h
src/libcommon/license.c
src/libcommon/license.h
src/libcommon/log.c
src/libcommon/log.h
src/libcommon/m_msg.c
src/libcommon/m_msg.h
src/libcommon/munge_defs.h
src/libcommon/posignal.c
src/libcommon/posignal.h
src/libcommon/str.c
src/libcommon/str.h
src/libcommon/version.c
src/libcommon/version.h
src/libmissing/getopt.c
src/libmissing/getopt.h
src/libmissing/getopt1.c
src/libmissing/inet_ntop.c
src/libmissing/inet_ntop.h
src/libmissing/missing.h
src/libmissing/strlcat.c
src/libmissing/strlcat.h
src/libmissing/strlcpy.c
src/libmissing/strlcpy.h
src/libmunge/auth_send.c
src/libmunge/auth_send.h
src/libmunge/ctx.c
src/libmunge/ctx.h
src/libmunge/decode.c
src/libmunge/encode.c
src/libmunge/enum.c
src/libmunge/m_msg_client.c
src/libmunge/m_msg_client.h
src/libmunge/munge.h
src/libmunge/strerror.c
src/munge/munge.c
src/munge/read.c
src/munge/read.h
src/munge/remunge.c
src/munge/unmunge.c
src/munged/auth_recv.c
src/munged/auth_recv.h
src/munged/base64.c
src/munged/base64.h
src/munged/base64_test.c
src/munged/cipher.c
src/munged/cipher.h
src/munged/conf.c
src/munged/conf.h
src/munged/cred.c
src/munged/cred.h
src/munged/crypto.c
src/munged/crypto.h
src/munged/dec.c
src/munged/dec.h
src/munged/enc.c
src/munged/enc.h
src/munged/gids.c
src/munged/gids.h
src/munged/hash.c
src/munged/hash.h
src/munged/job.c
src/munged/job.h
src/munged/mac.c
src/munged/mac.h
src/munged/md.c
src/munged/md.h
src/munged/munged.c
src/munged/path.c
src/munged/path.h
src/munged/random.c
src/munged/random.h
src/munged/replay.c
src/munged/replay.h
src/munged/thread.c
src/munged/thread.h
src/munged/timer.c
src/munged/timer.h
src/munged/work.c
src/munged/work.h
src/munged/xgetgrent.c
src/munged/xgetgrent.h
src/munged/xgetpwnam.c
src/munged/xgetpwnam.h
src/munged/zip.c
src/munged/zip.h
/usr/include/arpa/inet.h
/usr/include/assert.h
/usr/include/ctype.h
/usr/include/errno.h
/usr/include/fcntl.h
/usr/include/getopt.h
/usr/include/gnu-versions.h
/usr/include/grp.h
/usr/include/inttypes.h
/usr/include/libintl.h
/usr/include/limits.h
/usr/include/netdb.h
/usr/include/netinet/in.h
/usr/include/poll.h
/usr/include/pthread.h
/usr/include/pwd.h
/usr/include/signal.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/strings.h
/usr/include/stropts.h
/usr/include/syslog.h
/usr/include/time.h
/usr/include/unistd.h
/usr/include/wchar.h
/usr/include/zlib.h
/usr/include/alloca.h
/usr/include/endian.h
/usr/include/features.h
/usr/include/libio.h
/usr/include/locale.h
/usr/include/rpc/netdb.h
/usr/include/sched.h
/usr/include/stdint.h
/usr/include/wctype.h
/usr/include/xlocale.h
/usr/include/_G_config.h
/usr/include/stdc-predef.h
/usr/include/gconv.h
